[
  {
    "pertanyaan": "Apa itu pemrograman C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa belajar C?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Perbedaan antara C dan C++",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Penulisan Hello World di C",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Apa itu return 0; dalam bahasa C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa harus menggunakan #include <stdio.h>?",
    "jawaban": "#include <stdio.h> digunakan untuk mengimpor pustaka standar input/output yang dibutuhkan saat menggunakan fungsi seperti printf() dan scanf().",
    "kode": null
  },
  {
    "pertanyaan": "Untuk menampilkan teks ke layar, kita menggunakan fungsi apa?",
    "jawaban": "Kita menggunakan fungsi printf().",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu komentar dalam bahasa C?",
    "jawaban": "Komentar adalah bagian dari kode yang tidak akan dijalankan oleh compiler. Komentar digunakan untuk menjelaskan kode agar mudah dipahami.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh komentar satu baris di C",
    "jawaban": "Komentar satu baris menggunakan simbol //",
    "kode": "// Ini adalah komentar satu baris"
  },
  {
    "pertanyaan": "Contoh komentar multi baris di C",
    "jawaban": "Komentar multi baris menggunakan simbol /* di awal dan */ di akhir.",
    "kode": "/*\nIni adalah komentar\nmulti baris\n*/"
  },
  {
    "pertanyaan": "Variabel adalah?",
    "jawaban": "Variabel adalah tempat untuk menyimpan nilai/data dalam program. Setiap variabel memiliki nama dan tipe data.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu int dalam bahasa C?",
    "jawaban": "int adalah tipe data dalam bahasa C yang digunakan untuk menyimpan bilangan bulat (integer).",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu float dalam bahasa C?",
    "jawaban": "float adalah tipe data dalam bahasa C yang digunakan untuk menyimpan bilangan pecahan (floating point).",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu char dalam bahasa C?",
    "jawaban": "char adalah tipe data dalam bahasa C yang digunakan untuk menyimpan satu karakter.",
    "kode": null
  },
  {
    "pertanyaan": "Cara membuat variabel di C",
    "jawaban": "Untuk membuat variabel, deklarasikan tipe data diikuti nama variabel.",
    "kode": "int a;      // variabel integer\ndouble b;   // variabel pecahanchar c;      // variabel karakter"
  },
  {
    "pertanyaan": "Apakah bisa deklarasi variabel tanpa menginisialisasi nilainya?",
    "jawaban": "Bisa. Namun variabel tersebut belum memiliki nilai awal, sehingga isinya bisa tidak terdefinisi hingga diisi secara eksplisit.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh deklarasi dan inisialisasi variabel di C",
    "jawaban": "Kita bisa mendeklarasikan dan langsung menginisialisasi variabel dalam satu baris.",
    "kode": "int x = 5;\nfloat y = 3.14;\nchar z = 'A';"
  },
  {
    "pertanyaan": "Contoh deklarasi dulu baru inisialisasi variabel di C",
    "jawaban": "Kita juga bisa mendeklarasikan terlebih dahulu, lalu menginisialisasinya kemudian.",
    "kode": "int a;\na = 10;\n\nfloat b;\nb = 3.14;\n\nchar c;\nc = 'A';"
  },
  {
    "pertanyaan": "Format specifier digunakan untuk apa?",
    "jawaban": "Format specifier digunakan dalam fungsi printf() dan scanf() untuk menunjukkan jenis data yang akan ditampilkan atau dibaca.",
    "kode": null
  },
  {
    "pertanyaan": "Format specifier diawali dengan apa?",
    "jawaban": "Format specifier diawali dengan tanda persen (%). Contohnya: %d, %f, %c.",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan integer?",
    "jawaban": "Format specifier untuk menampilkan integer adalah %d",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan float?",
    "jawaban": "Format specifier untuk menampilkan float adalah %f",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan char?",
    "jawaban": "Format specifier untuk menampilkan char adalah %c",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan string?",
    "jawaban": "Format specifier untuk menampilkan string adalah %s",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan octal?",
    "jawaban": "Format specifier untuk menampilkan octal adalah %o",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan hexadecimal?",
    "jawaban": "Format specifier untuk menampilkan hexadecimal adalah %x",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan pointer?",
    "jawaban": "Format specifier untuk menampilkan pointer adalah %p",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan string?",
    "jawaban": "Format specifier untuk menampilkan string adalah %s",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode format specifier di C",
    "jawaban": "Untuk menampilkan format specifier di C, kita bisa menggunakan fungsi printf()",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    float b = 3.14;\n    char c = 'A';\n    printf(\"a = %d\\nb = %f\\nc = %c\", a, b, c);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apakah variabel dalam c dapat diubah nilainya?",
    "jawaban": "Ya, variabel dalam C dapat diubah nilainya. Kita bisa mengubah nilai variabel dengan cara menginisialisasi ulang variabel tersebut.",
    "kode": null
  },
  {
    "pertanyaan": "cara overwrite variabel di C",
    "jawaban": "Untuk mengubah nilai variabel di C, kita bisa menginisialisasi ulang variabel tersebut.",
    "kode": "int a = 10; // mendeklarasikan variabel a bertipe int dan menginisialisasi nilainya 10\na = 20; // mengubah nilai variabel a menjadi 20"
  },
  {
    "pertanyaan": "cara menyalin variabel di C",
    "jawaban": "Untuk menyalin variabel di C, kita bisa menginisialisasi variabel baru dengan nilai variabel lama.",
    "kode": "int a = 10; // mendeklarasikan variabel a bertipe int dan menginisialisasi nilainya 10\nint b = a; // menyalin nilai variabel a ke variabel b"
  },
  {
    "pertanyaan": "cara menyalin ke variabel kosong di C",
    "jawaban": "Untuk menyalin ke variabel kosong di C, kita bisa menginisialisasi variabel baru dengan nilai variabel lama.",
    "kode": "int a; // mendeklarasikan variabel a bertipe int\nint b = a; // menyalin nilai variabel a ke variabel b"
  },
  {
    "pertanyaan": "apakah bisa mendeklarasikan variabel dengan nama yang sama?",
    "jawaban": "Tidak bisa, karena akan terjadi error. Nama variabel harus unik dalam satu scope.",
    "kode": null
  },
  {
    "pertanyaan": "apakah bisa mendeklarasikan variabel dalam satu baris dengan tipe data yang sama?",
    "jawaban": "Bisa, kita bisa mendeklarasikan beberapa variabel dengan tipe data yang sama dalam satu baris.",
    "kode": "int a, b, c; // mendeklarasikan variabel a, b, c bertipe int\nfloat d, e, f; // mendeklarasikan variabel d, e, f bertipe float\nchar g, h, i; // mendeklarasikan variabel g, h, i bertipe char"
  },

  {
    "pertanyaan": "apakah bisa memberikan nilai yang sama ke beberapa variabel dengan satu perintah?",
    "jawaban": "Bisa, kita bisa memberikan nilai yang sama ke beberapa variabel dengan satu perintah.",
    "kode": "int a, b, c; // mendeklarasikan variabel a, b, c bertipe int\na = b = c = 10; // memberikan nilai 10 ke variabel a, b, c"
  },
  {
    "pertanyaan": "apakah semua variabel dalam c harus memiliki nama yang unik?",
    "jawaban": "Ya, semua variabel dalam C harus memiliki nama yang unik dalam satu scope. Jika ada dua variabel dengan nama yang sama dalam satu scope, maka akan terjadi error.",
    "kode": null
  },
  {
    "pertanyaan": "apakah tipe data menenetukan ukuran dan jenis data yang dapat disimpan dalam variabel?",
    "jawaban": "Ya, tipe data menentukan ukuran dan jenis data yang dapat disimpan dalam variabel. Setiap tipe data memiliki ukuran yang berbeda-beda.",
    "kode": null
  },
  {
    "pertanyaan": "apa itu konstanta dalam bahasa C?",
    "jawaban": "Konstanta adalah nilai tetap yang tidak dapat diubah selama program berjalan. Konstanta biasanya digunakan untuk menyimpan nilai yang tidak berubah, seperti pi (3.14) atau e (2.71).",
    "kode": null
  },

  {
    "pertanyaan": "cara mendefinisikan konstanta di C",
    "jawaban": "Untuk mendefinisikan konstanta di C, kita bisa menggunakan kata kunci const di depan tipe data.",
    "kode": "const int a = 10; // mendefinisikan konstanta a bertipe int dan nilainya 10\nconst float b = 3.14; // mendefinisikan konstanta b bertipe float dan nilainya 3.14\nconst char c = 'A'; // mendefinisikan konstanta c bertipe char dan nilainya 'A'"
  },
  {
    "pertanyaan": "apa itu scanf() dalam bahasa C?",
    "jawaban": "scanf() adalah fungsi untuk membaca input dari keyboard. Fungsi ini digunakan untuk mengambil data dari pengguna.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode scanf() di C",
    "jawaban": "Untuk menggunakan scanf() di C, kita bisa menggunakan format specifier yang sesuai dengan tipe data yang akan dibaca.",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    float b;\n    char c;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    printf(\"Masukkan nilai b: \");\n    scanf(\"%f\", &b);\n    printf(\"Masukkan nilai c: \");\n    scanf(\"%c\", &c);\n    printf(\"a = %d\\nb = %f\\nc = %c\", a, b, c);\n    return 0;\n}"
  },
  {
    "pertanyaan": "&variabel adalah?",
    "jawaban": "&variabel adalah operator alamat yang digunakan untuk mengambil alamat dari variabel. Operator ini digunakan pada saat membaca input dari keyboard dengan fungsi scanf().",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier yang umum digunakan dalam scanf()?",
    "jawaban": "Format specifier yang umum digunakan dalam scanf() adalah %d untuk integer, %f untuk float, %c untuk char, dan %s untuk string.",
    "kode": null
  },
  {
    "pertanyaan": "cara membaca bilangan bulat dengan scanf()",
    "jawaban": "Untuk membaca bilangan bulat dengan scanf(), kita bisa menggunakan format specifier %d.",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    printf(\"a = %d\", a);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membaca bilangan pecahan dengan scanf()",
    "jawaban": "Untuk membaca bilangan pecahan dengan scanf(), kita bisa menggunakan format specifier %f.",
    "kode": "#include <stdio.h>\nint main() {\n    float b;\n    printf(\"Masukkan nilai b: \");\n    scanf(\"%f\", &b);\n    printf(\"b = %f\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membaca string dengan scanf()",
    "jawaban": "Untuk membaca string dengan scanf(), kita bisa menggunakan format specifier %s.",
    "kode": "#include <stdio.h>\nint main() {\n    char str[100];\n    printf(\"Masukkan string: \");\n    scanf(\"%s\", str);\n    printf(\"string = %s\", str);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator dalam bahasa C?",
    "jawaban": "Operator adalah simbol yang digunakan untuk melakukan operasi pada variabel atau nilai. Operator dibagi menjadi beberapa jenis, seperti operator aritmatika, operator relasional, operator logika, dan operator bitwise.",
    "kode": null
  },
  {
    "pertanyaan": "apa saja operator aritmatika dalam bahasa C?",
    "jawaban": "Operator aritmatika dalam bahasa C adalah + (penjumlahan), - (pengurangan), * (perkalian), / (pembagian), dan % (modulus).",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator aritmatika di C",
    "jawaban": "Untuk menggunakan operator aritmatika di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    printf(\"a + b = %d\\na - b = %d\\na * b = %d\\na / b = %d\\na %% b = %d\", a + b, a - b, a * b, a / b, a % b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator perbandingan dalam bahasa C?",
    "jawaban": "Operator perbandingan adalah operator yang digunakan untuk membandingkan dua nilai. Operator ini menghasilkan nilai true (1) jika perbandingan benar, dan false (0) jika perbandingan salah.",
    "kode": null
  },
  {
    "pertanyaan": "apa saja operator perbandingan dalam bahasa C?",
    "jawaban": "Operator perbandingan dalam bahasa C adalah == (sama dengan), != (tidak sama dengan), > (lebih besar dari), < (lebih kecil dari), >= (lebih besar sama dengan), dan <= (lebih kecil sama dengan).",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator perbandingan di C",
    "jawaban": "Untuk menggunakan operator perbandingan di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    printf(\"a == b = %d\\na != b = %d\\na > b = %d\\na < b = %d\\na >= b = %d\\na <= b = %d\", a == b, a != b, a > b, a < b, a >= b, a <= b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator logika dalam bahasa C?",
    "jawaban": "Operator logika adalah operator yang digunakan untuk menggabungkan beberapa kondisi. Operator ini menghasilkan nilai true (1) jika semua kondisi benar, dan false (0) jika ada salah satu kondisi yang salah.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator logika di C",
    "jawaban": "Untuk menggunakan operator logika di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    printf(\"a && b = %d\\na || b = %d\\n!a = %d\", a && b, a || b, !a);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator penugasan dalam bahasa C?",
    "jawaban": "operator penugasan adalah operator yang digunakan untuk memberikan nilai pada variabel. Operator ini biasanya digunakan untuk menginisialisasi variabel.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator penugasan di C",
    "jawaban": "Berikut adalah beberapa contoh penggunaan operator penugasan dalam bahasa C:",
    "kode": "#include <stdio.h>\n\nint main() {\n    int a = 10;      // operator penugasan '='\n    a += 5;          // sama dengan a = a + 5\n    a -= 2;          // sama dengan a = a - 2\n    a *= 3;          // sama dengan a = a * 3\n    a /= 4;          // sama dengan a = a / 4\n    a %= 3;          // sama dengan a = a % 3\n\n    printf(\"Nilai a: %d\\n\", a);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu boolean dalam bahasa C?",
    "jawaban": "Boolean adalah tipe data yang hanya memiliki dua nilai, yaitu true (benar) dan false (salah). Tipe data ini biasanya digunakan untuk menyimpan hasil dari operasi logika.",
    "kode": null
  },
  {
    "pertanyaan": "tipe data boolean dalam bahasa C",
    "jawaban": "Tipe data boolean dalam bahasa C tidak ada, tetapi kita bisa menggunakan tipe data int untuk menyimpan nilai boolean. Nilai 0 dianggap false, dan nilai selain 0 dianggap true.",
    "kode": null
  },
  {
    "pertanyaan": "apa itu operator bitwise dalam bahasa C?",
    "jawaban": "Operator bitwise adalah operator yang digunakan untuk melakukan operasi pada bit. Operator ini biasanya digunakan untuk melakukan operasi logika pada bilangan biner.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator bitwise di C",
    "jawaban": "Untuk menggunakan operator bitwise di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10; // 1010\n    int b = 5;  // 0101\n    printf(\"a & b = %d\\na | b = %d\\na ^ b = %d\\n~a = %d\\n<< a = %d\\n>> a = %d\", a & b, a | b, a ^ b, ~a, a << 1, a >> 1);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator ternary dalam bahasa C?",
    "jawaban": "Operator ternary adalah operator yang digunakan untuk melakukan operasi kondisional. Operator ini memiliki tiga operand, yaitu kondisi, nilai jika benar, dan nilai jika salah.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator ternary di C",
    "jawaban": "Untuk menggunakan operator ternary di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = (a > 5) ? 1 : 0;\n    printf(\"b = %d\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "sejak standar c99, apa itu bool?",
    "jawaban": "Sejak standar C99, bahasa C memiliki tipe data bool yang merupakan tipe data boolean. Tipe data ini didefinisikan dalam pustaka stdbool.h.",
    "kode": null
  },
  {
    "pertanyaan": "cara mendeklarasikan boolean di C",
    "jawaban": "Untuk mendeklarasikan boolean di C, kita bisa menggunakan tipe data bool yang didefinisikan dalam pustaka stdbool.h.",
    "kode": "#include <stdio.h>\n#include <stdbool.h>\nint main() {\n    bool a = true;\n    bool b = false;\n    printf(\"a = %d\\nb = %d\", a, b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membandingkan nilai dan variabel di C",
    "jawaban": "Untuk membandingkan nilai dan variabel di C, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a > b) {\n        printf(\"a lebih besar dari b\");\n    } else {\n        printf(\"a lebih kecil dari b\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membandingkan dua variabel di C",
    "jawaban": "Untuk membandingkan dua variabel di C, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a == b) {\n        printf(\"a sama dengan b\");\n    } else {\n        printf(\"a tidak sama dengan b\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh operator perbandingan == di C",
    "jawaban": "Untuk menggunakan operator perbandingan == di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a == b) {\n        printf(\"a sama dengan b\");\n    } else {\n        printf(\"a tidak sama dengan b\");\n    }\n    return 0;\n}"
  },

  {
    "pertanyaan": "membandingkan boolean di C",
    "jawaban": "Untuk membandingkan boolean di C, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\n#include <stdbool.h>\nint main() {\n    bool a = true;\n    bool b = false;\n    if (a == b) {\n        printf(\"a sama dengan b\");\n    } else {\n        printf(\"a tidak sama dengan b\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh kehidupan sehari-hari dari operator aritmatika",
    "jawaban": "Contoh kehidupan sehari-hari dari operator aritmatika adalah menghitung total belanjaan, menghitung jarak tempuh, menghitung waktu tempuh, dan lain-lain.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode kehidupan sehari-hari dari operator aritmatika",
    "jawaban": "Untuk menghitung total belanjaan, kita bisa menggunakan operator aritmatika.",
    "kode": "#include <stdio.h>\nint main() {\n    int harga1 = 10000;\n    int harga2 = 20000;\n    int total = harga1 + harga2;\n    printf(\"Total belanjaan: %d\", total);\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh kode kehidupan sehari-hari dari operator perbandingan",
    "jawaban": "Untuk membandingkan harga barang, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\nint main() {\n    int harga1 = 10000;\n    int harga2 = 20000;\n    if (harga1 < harga2) {\n        printf(\"Harga barang 1 lebih murah dari barang 2\");\n    } else {\n        printf(\"Harga barang 1 lebih mahal dari barang 2\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh kode kehidupan sehari-hari dari operator logika",
    "jawaban": "Untuk membandingkan dua kondisi, kita bisa menggunakan operator logika.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a > 0 && b > 0) {\n        printf(\"a dan b positif\");\n    } else {\n        printf(\"a atau b negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu if dalam bahasa C?",
    "jawaban": "if adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode jika kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "if sangat berguna untuk?",
    "jawaban": "If sangat berguna untuk melakukan percabangan dalam program. Dengan menggunakan if, kita bisa menentukan jalur eksekusi program berdasarkan kondisi yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks if di C",
    "jawaban": "Untuk menggunakan if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    if (a > 0) {\n        printf(\"a positif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu else dalam bahasa C?",
    "jawaban": "else adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode jika kondisi yang diberikan bernilai false (salah).",
    "kode": null
  },
  {
    "pertanyaan": "else sangat berguna untuk?",
    "jawaban": "Else sangat berguna untuk menentukan jalur eksekusi program jika kondisi yang diberikan bernilai false.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks else di C",
    "jawaban": "Untuk menggunakan else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = -10;\n    if (a > 0) {\n        printf(\"a positif\");\n    } else {\n        printf(\"a negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu else if dalam bahasa C?",
    "jawaban": "else if adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode jika kondisi yang diberikan bernilai true (benar) dan kondisi sebelumnya bernilai false (salah).",
    "kode": null
  },
  {
    "pertanyaan": "else if sangat berguna untuk?",
    "jawaban": "Else if sangat berguna untuk menentukan jalur eksekusi program jika ada beberapa kondisi yang harus diperiksa.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks else if di C",
    "jawaban": "Untuk menggunakan else if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 0;\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus if di C",
    "jawaban": "Untuk menggunakan if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },

  {
    "pertanyaan": "contoh studi kasus if else di C",
    "jawaban": "Untuk menggunakan if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else {\n        printf(\"a negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus if else if di C",
    "jawaban": "Untuk menggunakan if else if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus if else if else di C",
    "jawaban": "Untuk menggunakan if else if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu switch dalam bahasa C?",
    "jawaban": "switch adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode berdasarkan nilai dari variabel yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "switch sangat berguna untuk?",
    "jawaban": "Switch sangat berguna untuk melakukan percabangan jika ada beberapa kondisi yang harus diperiksa dan kita ingin menggunakan nilai dari variabel sebagai dasar percabangan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks switch di C",
    "jawaban": "Untuk menggunakan switch di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 2;\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu case dalam bahasa C?",
    "jawaban": "case adalah pernyataan yang digunakan dalam switch untuk menentukan blok kode mana yang akan dieksekusi berdasarkan nilai dari variabel yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "case sangat berguna untuk?",
    "jawaban": "Case sangat berguna untuk menentukan blok kode mana yang akan dieksekusi berdasarkan nilai dari variabel yang diberikan dalam switch.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks case di C",
    "jawaban": "Untuk menggunakan case di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 2;\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu default dalam bahasa C?",
    "jawaban": "default adalah pernyataan yang digunakan dalam switch untuk menentukan blok kode mana yang akan dieksekusi jika tidak ada case yang cocok dengan nilai dari variabel yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "default sangat berguna untuk?",
    "jawaban": "Default sangat berguna untuk menentukan blok kode mana yang akan dieksekusi jika tidak ada case yang cocok dengan nilai dari variabel yang diberikan dalam switch.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks default di C",
    "jawaban": "Untuk menggunakan default di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 2;\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus switch di C",
    "jawaban": "Untuk menggunakan switch di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus switch case default di C",
    "jawaban": "Untuk menggunakan switch case default di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },

  {
    "pertanyaan": "apa itu ternary operator dalam bahasa C?",
    "jawaban": "ternary operator adalah operator yang digunakan untuk melakukan percabangan. Operator ini memiliki tiga operand, yaitu kondisi, nilai jika benar, dan nilai jika salah.",
    "kode": null
  },
  {
    "pertanyaan": "ternary operator sangat berguna untuk?",
    "jawaban": "ternary operator sangat berguna untuk melakukan percabangan dalam satu baris kode. Dengan menggunakan ternary operator, kita bisa menulis kode yang lebih ringkas dan mudah dibaca.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks ternary operator di C",
    "jawaban": "Untuk menggunakan ternary operator di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = (a > 5) ? 1 : 0;\n    printf(\"b = %d\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator di C",
    "jawaban": "Untuk menggunakan ternary operator di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    printf(\"b = %d\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan if else di C",
    "jawaban": "Untuk menggunakan ternary operator dengan if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    if (b == 1) {\n        printf(\"a positif\");\n    } else {\n        printf(\"a negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan switch case di C",
    "jawaban": "Untuk menggunakan ternary operator dengan switch case di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    switch (b) {\n        case 1:\n            printf(\"a positif\");\n            break;\n        case 0:\n            printf(\"a negatif\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan if else if di C",
    "jawaban": "Untuk menggunakan ternary operator dengan if else if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    if (b == 1) {\n        printf(\"a positif\");\n    } else if (b == 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a tidak diketahui\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan if else if else di C",
    "jawaban": "Untuk menggunakan ternary operator dengan if else if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    if (b == 1) {\n        printf(\"a positif\");\n    } else if (b == 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a tidak diketahui\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "keuntungan menggunakan ternary operator di C",
    "jawaban": "lebih ringkas dan mudah dibaca, mengurangi jumlah baris kode, dan meningkatkan efisiensi program.",
    "kode": null
  },
  {
    "pertanyaan": "kekurangan menggunakan ternary operator di C",
    "jawaban": "ternary operator bisa membuat kode menjadi sulit dibaca jika digunakan secara berlebihan, dan bisa menyebabkan kesalahan logika jika tidak hati-hati.",
    "kode": null
  },
  {
    "pertanyaan": "apa itu while dalam bahasa C?",
    "jawaban": "while adalah pernyataan yang digunakan untuk melakukan perulangan. Pernyataan ini akan mengeksekusi blok kode selama kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "while sangat berguna untuk?",
    "jawaban": "while sangat berguna untuk melakukan perulangan jika kita tidak tahu berapa kali perulangan harus dilakukan. Dengan menggunakan while, kita bisa menentukan kondisi yang harus dipenuhi untuk melanjutkan perulangan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks while di C",
    "jawaban": "Untuk menggunakan while di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int i = 0;\n    while (i < 5) {\n        printf(\"i = %d\\n\", i);\n        i++;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu do while dalam bahasa C?",
    "jawaban": "do while adalah pernyataan yang digunakan untuk melakukan perulangan. Pernyataan ini akan mengeksekusi blok kode setidaknya satu kali, dan kemudian akan melanjutkan perulangan selama kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "do while sangat berguna untuk?",
    "jawaban": "do while sangat berguna untuk melakukan perulangan jika kita ingin memastikan bahwa blok kode dieksekusi setidaknya satu kali, terlepas dari kondisi yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks do while di C",
    "jawaban": "Untuk menggunakan do while di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int i = 0;\n    do {\n        printf(\"i = %d\\n\", i);\n        i++;\n    } while (i < 5);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu for dalam bahasa C?",
    "jawaban": "for adalah pernyataan yang digunakan untuk melakukan perulangan. Pernyataan ini akan mengeksekusi blok kode selama kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "for sangat berguna untuk?",
    "jawaban": "for sangat berguna untuk melakukan perulangan jika kita tahu berapa kali perulangan harus dilakukan. Dengan menggunakan for, kita bisa menentukan inisialisasi, kondisi, dan increment/decrement dalam satu baris kode.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks for di C",
    "jawaban": "Untuk menggunakan for di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 0; i < 5; i++) {\n        printf(\"i = %d\\n\", i);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu break dalam bahasa C?",
    "jawaban": "break adalah pernyataan yang digunakan untuk menghentikan perulangan atau switch. Pernyataan ini akan keluar dari blok kode saat dieksekusi.",
    "kode": null
  },
  {
    "pertanyaan": "break sangat berguna untuk?",
    "jawaban": "break sangat berguna untuk menghentikan perulangan atau switch saat kondisi tertentu terpenuhi. Dengan menggunakan break, kita bisa menghindari eksekusi kode yang tidak perlu.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks break di C",
    "jawaban": "Untuk menggunakan break di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 0; i < 5; i++) {\n        if (i == 3) {\n            break;\n        }\n        printf(\"i = %d\\n\", i);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu continue dalam bahasa C?",
    "jawaban": "continue adalah pernyataan yang digunakan untuk melanjutkan perulangan. Pernyataan ini akan melewatkan iterasi saat dieksekusi.",
    "kode": null
  },
  {
    "pertanyaan": "continue sangat berguna untuk?",
    "jawaban": "continue sangat berguna untuk melewatkan iterasi tertentu dalam perulangan. Dengan menggunakan continue, kita bisa menghindari eksekusi kode yang tidak perlu pada iterasi tersebut.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks continue di C",
    "jawaban": "Untuk menggunakan continue di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 0; i < 5; i++) {\n        if (i == 3) {\n            continue;\n        }\n        printf(\"i = %d\\n\", i);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu goto dalam bahasa C?",
    "jawaban": "goto adalah pernyataan yang digunakan untuk melompat ke label tertentu dalam kode. Pernyataan ini akan mengalihkan alur eksekusi program ke label yang ditentukan.",
    "kode": null
  },
  {
    "pertanyaan": "goto sangat berguna untuk?",
    "jawaban": "goto sangat berguna untuk melompat ke label tertentu dalam kode. Namun, penggunaan goto sebaiknya dihindari karena bisa membuat kode sulit dibaca dan dipelihara.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks goto di C",
    "jawaban": "Untuk menggunakan goto di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int i = 0;\n    label:\n    printf(\"i = %d\\n\", i);\n    i++;\n    if (i < 5) {\n        goto label;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "struktur data array",
    "jawaban": "Array adalah struktur data yang digunakan untuk menyimpan sekumpulan data dengan tipe yang sama. Array memiliki indeks yang dimulai dari 0 hingga n-1, di mana n adalah jumlah elemen dalam array.",
    "kode": null
  },
  {
    "pertanyaan": "cara membuat array di C",
    "jawaban": "Untuk membuat array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5]; // mendeklarasikan array dengan 5 elemen\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengisi array di C",
    "jawaban": "Untuk mengisi array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5];\n    for (int i = 0; i < 5; i++) {\n        arr[i] = i + 1;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses elemen array di C",
    "jawaban": "Untuk mengakses elemen array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5] = {1, 2, 3, 4, 5};\n    printf(\"Elemen pertama: %d\", arr[0]);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara menampilkan elemen array di C",
    "jawaban": "Untuk menampilkan elemen array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5] = {1, 2, 3, 4, 5};\n    for (int i = 0; i < 5; i++) {\n        printf(\"Elemen ke-%d: %d\\n\", i + 1, arr[i]);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu pointer dalam bahasa C?",
    "jawaban": "Pointer adalah variabel yang menyimpan alamat memori dari variabel lain. Pointer digunakan untuk mengakses dan memanipulasi data di memori secara langsung.",
    "kode": null
  },
  {
    "pertanyaan": "pointer sangat berguna untuk?",
    "jawaban": "Pointer sangat berguna untuk menghemat memori, meningkatkan efisiensi program, dan memungkinkan penggunaan struktur data yang lebih kompleks seperti linked list, tree, dan graph.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks pointer di C",
    "jawaban": "Untuk menggunakan pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mendeklarasikan pointer p yang menyimpan alamat a\n    printf(\"Nilai a: %d\", *p); // mengakses nilai a melalui pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan pointer di C",
    "jawaban": "Untuk mendeklarasikan pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    int *p; // mendeklarasikan pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengisi pointer di C",
    "jawaban": "Untuk mengisi pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mengisi pointer p dengan alamat a\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses nilai melalui pointer di C",
    "jawaban": "Untuk mengakses nilai melalui pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mengisi pointer p dengan alamat a\n    printf(\"Nilai a: %d\", *p); // mengakses nilai a melalui pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara menampilkan nilai melalui pointer di C",
    "jawaban": "Untuk menampilkan nilai melalui pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mengisi pointer p dengan alamat a\n    printf(\"Nilai a: %d\", *p); // menampilkan nilai a melalui pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu fungsi dalam bahasa C?",
    "jawaban": "Fungsi adalah blok kode yang dapat dipanggil untuk melakukan tugas tertentu. Fungsi digunakan untuk mengorganisir kode, meningkatkan keterbacaan, dan menghindari pengulangan kode.",
    "kode": null
  },
  {
    "pertanyaan": "fungsi sangat berguna untuk?",
    "jawaban": "Fungsi sangat berguna untuk mengorganisir kode, meningkatkan keterbacaan, dan menghindari pengulangan kode. Dengan menggunakan fungsi, kita bisa membagi program menjadi bagian-bagian yang lebih kecil dan lebih mudah dikelola.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks fungsi di C",
    "jawaban": "Untuk menggunakan fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan fungsi di C",
    "jawaban": "Untuk mendeklarasikan fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello(); // mendeklarasikan fungsi hello\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}"
  },
  {
    "pertanyaan": "cara mengisi fungsi di C",
    "jawaban": "Untuk mengisi fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses fungsi di C",
    "jawaban": "Untuk mengakses fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu tipe data enum dalam bahasa C?",
    "jawaban": "Enum adalah tipe data yang digunakan untuk mendefinisikan variabel yang dapat memiliki satu dari beberapa nilai tetap. Enum digunakan untuk meningkatkan keterbacaan kode dan menghindari penggunaan angka magic.",
    "kode": null
  },
  {
    "pertanyaan": "enum sangat berguna untuk?",
    "jawaban": "Enum sangat berguna untuk mendefinisikan variabel yang dapat memiliki satu dari beberapa nilai tetap. Dengan menggunakan enum, kita bisa meningkatkan keterbacaan kode dan menghindari penggunaan angka magic.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks enum di C",
    "jawaban": "Untuk menggunakan enum di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef enum {\n    RED,\n    GREEN,\n    BLUE\n} Color;\nint main() {\n    Color c = RED;\n    printf(\"Color: %d\", c);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan enum di C",
    "jawaban": "Untuk mendeklarasikan enum di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef enum {\n    RED,\n    GREEN,\n    BLUE\n} Color;\nint main() {\n    Color c = RED;\n    printf(\"Color: %d\", c);\n    return 0;\n}"
  },

  {
    "pertanyaan": "apa itu tipe data struct dalam bahasa C?",
    "jawaban": "Struct adalah tipe data yang digunakan untuk mendefinisikan variabel yang dapat memiliki beberapa nilai dengan tipe yang berbeda. Struct digunakan untuk mengelompokkan data yang terkait.",
    "kode": null
  },
  {
    "pertanyaan": "struct sangat berguna untuk?",
    "jawaban": "Struct sangat berguna untuk mendefinisikan variabel yang dapat memiliki beberapa nilai dengan tipe yang berbeda. Dengan menggunakan struct, kita bisa mengelompokkan data yang terkait dan meningkatkan keterbacaan kode.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks struct di C",
    "jawaban": "Untuk menggunakan struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan struct di C",
    "jawaban": "Untuk mendeklarasikan struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengisi struct di C",
    "jawaban": "Untuk mengisi struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses struct di C",
    "jawaban": "Untuk mengakses struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membaca dan menulis file di C",
    "jawaban": "Untuk membaca dan menulis file di bahasa C, digunakan fungsi dari pustaka stdio.h seperti fopen, fprintf, fscanf, fgets, fputs, fread, fwrite, dan fclose. File dapat dibuka dalam mode 'r' (read), 'w' (write), atau 'a' (append).",
    "kode": "#include <stdio.h>\n\nint main() {\n    FILE *file;\n\n    // Menulis ke file\n    file = fopen(\"data.txt\", \"w\");\n    if (file != NULL) {\n        fprintf(file, \"Halo dunia!\\n\");\n        fclose(file);\n    }\n\n    // Membaca dari file\n    file = fopen(\"data.txt\", \"r\");\n    if (file != NULL) {\n        char buffer[100];\n        while (fgets(buffer, 100, file)) {\n            printf(\"%s\", buffer);\n        }\n        fclose(file);\n    }\n\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu malloc dalam bahasa C?",
    "jawaban": "malloc adalah fungsi yang digunakan untuk mengalokasikan memori secara dinamis. Fungsi ini mengembalikan pointer ke blok memori yang dialokasikan.",
    "kode": null
  },
  {
    "pertanyaan": "malloc sangat berguna untuk?",
    "jawaban": "malloc sangat berguna untuk mengalokasikan memori secara dinamis saat program berjalan. Dengan menggunakan malloc, kita bisa mengalokasikan memori sesuai kebutuhan dan menghindari pemborosan memori.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks malloc di C",
    "jawaban": "Untuk menggunakan malloc di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int *arr;\n    arr = (int *)malloc(5 * sizeof(int)); // mengalokasikan memori untuk array dengan 5 elemen\n    if (arr == NULL) {\n        printf(\"Memory allocation failed\");\n        return 1;\n    }\n    free(arr); // membebaskan memori\n    return 0;\n}"
  },

  {
    "pertanyaan": "untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan fungsi fopen. Fungsi ini menerima dua argumen, yaitu nama file dan mode pembukaan (misalnya 'r' untuk membaca, 'w' untuk menulis, dan 'a' untuk menambahkan).",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "Daftar mode membuka file di C",
    "jawaban": "Berikut adalah daftar mode membuka file di C:\n1. 'r' - Membuka file untuk dibaca.\n2. 'w' - Membuka file untuk ditulis (menghapus isi file jika sudah ada).\n3. 'a' - Membuka file untuk ditambahkan (menulis di akhir file).\n4. 'rb' - Membuka file biner untuk dibaca.\n5. 'wb' - Membuka file biner untuk ditulis.\n6. 'ab' - Membuka file biner untuk ditambahkan.",
    "kode": null
  },
  {
    "pertanyaan": "program sederhana untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fungsi dasar untuk membuka file di C",
    "jawaban": "Berikut adalah beberapa fungsi dasar untuk membuka file di C:\n1. fopen - Membuka file.\n2. fclose - Menutup file.\n3. fprintf - Menulis ke file.\n4. fscanf - Membaca dari file.\n5. fgets - Membaca baris dari file.\n6. fputs - Menulis baris ke file.",
    "kode": null
  },
  {
    "pertanyaan": "fungsi fclose di C",
    "jawaban": "fclose adalah fungsi yang digunakan untuk menutup file yang telah dibuka. Fungsi ini menerima satu argumen, yaitu pointer ke file yang ingin ditutup.",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk menutup file di C",
    "jawaban": "Untuk menutup file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fopen di C",
    "jawaban": "fopen adalah fungsi yang digunakan untuk membuka file. Fungsi ini menerima dua argumen, yaitu nama file dan mode pembukaan (misalnya 'r' untuk membaca, 'w' untuk menulis, dan 'a' untuk menambahkan).",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fprintf di C",
    "jawaban": "fprintf adalah fungsi yang digunakan untuk menulis ke file. Fungsi ini menerima dua argumen, yaitu pointer ke file dan format string yang ingin ditulis.",
    "kode": null
  },
  {
    "pertanyaan": "apa fungsi fgets di C?",
    "jawaban": "fgets adalah fungsi yang digunakan untuk membaca baris dari file. Fungsi ini menerima tiga argumen, yaitu buffer untuk menyimpan hasil pembacaan, ukuran buffer, dan pointer ke file.",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk membaca baris dari file di C",
    "jawaban": "Untuk membaca baris dari file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    char buffer[100];\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fgets(buffer, 100, file); // membaca baris dari file\n    printf(\"%s\", buffer);\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fputs di C",
    "jawaban": "fputs adalah fungsi yang digunakan untuk menulis baris ke file. Fungsi ini menerima dua argumen, yaitu string yang ingin ditulis dan pointer ke file.",
    "kode": null
  },
  {
    "pertanyaan": "contoh latihan program catatan sederhana di C",
    "jawaban": "Berikut adalah contoh program catatan sederhana di C:\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    FILE *file;\n    char note[100];\n\n    file = fopen(\"notes.txt\", \"a\"); // membuka file notes.txt dalam mode tambah\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n\n    printf(\"Masukkan catatan: \");\n    fgets(note, 100, stdin); // membaca catatan dari input\n    fputs(note, file); // menulis catatan ke file\n\n    fclose(file); // menutup file\n    return 0;\n}",
    "kode": null
  },
  {
    "pertanyaan": "apa itu nested loop dalam bahasa C?",
    "jawaban": "Nested loop adalah perulangan di dalam perulangan. Loop bagian dalam akan dieksekusi setiap kali loop bagian luar berjalan satu kali.",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 1; i <= 3; i++) {\n        for (int j = 1; j <= 2; j++) {\n            printf(\"i = %d, j = %d\\n\", i, j);\n        }\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana membuat fungsi dengan parameter dan nilai kembali di C?",
    "jawaban": "Fungsi dapat menerima parameter dan mengembalikan nilai menggunakan keyword return.",
    "kode": "#include <stdio.h>\nint tambah(int a, int b) {\n    return a + b;\n}\nint main() {\n    int hasil = tambah(5, 3);\n    printf(\"Hasil penjumlahan: %d\", hasil);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu pointer ke pointer di C?",
    "jawaban": "Pointer ke pointer adalah variabel yang menyimpan alamat dari pointer lain.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a;\n    int **pp = &p;\n    printf(\"Nilai a: %d\\n\", **pp);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu array of struct di C?",
    "jawaban": "Array of struct adalah array yang elemennya berupa struct.",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char nama[20];\n    int umur;\n} Mahasiswa;\nint main() {\n    Mahasiswa mhs[2] = {{\"Andi\", 20}, {\"Budi\", 21}};\n    for (int i = 0; i < 2; i++) {\n        printf(\"%s berumur %d tahun\\n\", mhs[i].nama, mhs[i].umur);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana penggunaan pointer untuk mengakses array di fungsi C?",
    "jawaban": "Kita bisa menggunakan pointer sebagai parameter fungsi untuk memproses array.",
    "kode": "#include <stdio.h>\nvoid cetak(int *arr, int size) {\n    for (int i = 0; i < size; i++) {\n        printf(\"%d \", *(arr + i));\n    }\n}\nint main() {\n    int data[] = {1, 2, 3};\n    cetak(data, 3);\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana cara menulis dan membaca file biner di C?",
    "jawaban": "Gunakan mode 'wb' dan 'rb' untuk menulis dan membaca file biner di C.",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    int data = 123;\n    file = fopen(\"file.bin\", \"wb\");\n    fwrite(&data, sizeof(int), 1, file);\n    fclose(file);\n\n    int baca;\n    file = fopen(\"file.bin\", \"rb\");\n    fread(&baca, sizeof(int), 1, file);\n    fclose(file);\n\n    printf(\"Data: %d\\n\", baca);\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana cara membuat header file sendiri di C?",
    "jawaban": "Header file dapat dibuat dengan ekstensi .h dan digunakan untuk mendefinisikan fungsi dan konstanta.",
    "kode": "// math_utils.h\n#ifndef MATH_UTILS_H\n#define MATH_UTILS_H\nint tambah(int a, int b);\n#endif\n\n// math_utils.c\n#include \"math_utils.h\"\nint tambah(int a, int b) {\n    return a + b;\n}\n\n// main.c\n#include <stdio.h>\n#include \"math_utils.h\"\nint main() {\n    printf(\"%d\\n\", tambah(3, 4));\n    return 0;\n}"
  },

  {
    "pertanyaan": "Apa itu CSS?",
    "jawaban": "CSS adalah singkatan dari Cascading Style Sheets, yaitu bahasa yang digunakan untuk mendesain tampilan halaman web.",
    "kode": null
  },
  {
    "pertanyaan": "CSS itu maksudnya apa ya?",
    "jawaban": "CSS adalah teknologi untuk mengatur warna, layout, font, dan tampilan visual sebuah halaman web.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa jelasin tentang CSS?",
    "jawaban": "CSS digunakan untuk mempercantik halaman HTML dengan mengatur gaya seperti warna, ukuran, dan posisi elemen.",
    "kode": null
  },
  {
    "pertanyaan": "Gimana cara pakai CSS dalam HTML?",
    "jawaban": "CSS bisa digunakan dengan tiga cara: inline style, internal style di tag <style>, atau dengan file eksternal .css.",
    "kode": null
  },
  {
    "pertanyaan": "Saya baru belajar, CSS itu gimana sih?",
    "jawaban": "CSS itu ibarat 'bajunya' halaman web, biar kelihatan rapi dan menarik dibanding HTML polos.",
    "kode": null
  },
  {
    "pertanyaan": "CSS dipakai buat apa dalam website?",
    "jawaban": "CSS dipakai untuk mengatur desain visual halaman web seperti warna, ukuran teks, dan posisi elemen.",
    "kode": null
  },
  {
    "pertanyaan": "Ada contoh simpel tentang CSS nggak?",
    "jawaban": "Contohnya, kamu bisa ubah warna teks menjadi merah dengan CSS: `p { color: red; }`",
    "kode": "<style>p { color: red; }</style>"
  },
  {
    "pertanyaan": "Kalau mau mulai belajar CSS, dari mana?",
    "jawaban": "Mulailah dari memahami selector, property, dan value dalam CSS seperti mengatur warna atau font.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh penggunaan CSS dalam halaman web dong!",
    "jawaban": "CSS digunakan untuk mengatur layout, warna background, ukuran teks, dan banyak lagi.",
    "kode": "<!DOCTYPE html>\n<html>\n<head>\n<style>\nbody { background-color: lightblue; }\nh1 { color: navy; }\n</style>\n</head>\n<body>\n<h1>Halo CSS!</h1>\n</body>\n</html>"
  },
  {
    "pertanyaan": "CSS itu penting nggak sih buat bikin website?",
    "jawaban": "Penting banget! Tanpa CSS, halaman web akan terlihat membosankan dan sulit diatur tampilannya.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu cara kerja internal CSS?",
    "jawaban": "Cara kerja internal css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Cara kerja internal css itu maksudnya apa ya?",
    "jawaban": "Untuk cara kerja internal CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang cara kerja internal CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang cara kerja internal CSS.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara kerja internal CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan cara kerja internal CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, cara kerja internal CSS itu gimana sih?",
    "jawaban": "Tenang, cara kerja internal CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "cara kerja internal CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang cara kerja internal CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti cara kerja internal CSS.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai cara kerja internal CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan cara kerja internal CSS berikut ini.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan cara kerja internal CSS dong!",
    "jawaban": "Biasanya cara kerja internal CSS digunakan seperti ini.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Cara kerja internal css itu penting gak sih?",
    "jawaban": "Ingat ya, cara kerja internal CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Apa itu cara menggunakan eksternal CSS?",
    "jawaban": "Cara menggunakan eksternal css adalah salah satu konsep penting dalam CSS.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Cara menggunakan eksternal css itu maksudnya apa ya?",
    "jawaban": "Untuk cara menggunakan eksternal CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang cara menggunakan eksternal CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang cara menggunakan eksternal CSS.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Gimana cara pakai cara menggunakan eksternal CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan cara menggunakan eksternal CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Saya baru belajar, cara menggunakan eksternal CSS itu gimana sih?",
    "jawaban": "Tenang, cara menggunakan eksternal CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "cara menggunakan eksternal CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang cara menggunakan eksternal CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti cara menggunakan eksternal CSS.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Kalau mau pakai cara menggunakan eksternal CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan cara menggunakan eksternal CSS berikut ini.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Contoh penggunaan cara menggunakan eksternal CSS dong!",
    "jawaban": "Biasanya cara menggunakan eksternal CSS digunakan seperti ini.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Cara menggunakan eksternal css itu penting gak sih?",
    "jawaban": "Ingat ya, cara menggunakan eksternal CSS sangat sering dipakai saat membuat website.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Apa itu penggunaan id dalam CSS?",
    "jawaban": "Penggunaan id dalam css adalah salah satu konsep penting dalam CSS.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Penggunaan id dalam css itu maksudnya apa ya?",
    "jawaban": "Untuk penggunaan id dalam CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang penggunaan id dalam CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang penggunaan id dalam CSS.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai penggunaan id dalam CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan penggunaan id dalam CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, penggunaan id dalam CSS itu gimana sih?",
    "jawaban": "Tenang, penggunaan id dalam CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "penggunaan id dalam CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang penggunaan id dalam CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti penggunaan id dalam CSS.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai penggunaan id dalam CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan penggunaan id dalam CSS berikut ini.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan penggunaan id dalam CSS dong!",
    "jawaban": "Biasanya penggunaan id dalam CSS digunakan seperti ini.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Penggunaan id dalam css itu penting gak sih?",
    "jawaban": "Ingat ya, penggunaan id dalam CSS sangat sering dipakai saat membuat website.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Apa itu penggunaan class dalam CSS?",
    "jawaban": "Penggunaan class dalam css adalah salah satu konsep penting dalam CSS.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Penggunaan class dalam css itu maksudnya apa ya?",
    "jawaban": "Untuk penggunaan class dalam CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang penggunaan class dalam CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang penggunaan class dalam CSS.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai penggunaan class dalam CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan penggunaan class dalam CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, penggunaan class dalam CSS itu gimana sih?",
    "jawaban": "Tenang, penggunaan class dalam CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "penggunaan class dalam CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang penggunaan class dalam CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti penggunaan class dalam CSS.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai penggunaan class dalam CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan penggunaan class dalam CSS berikut ini.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan penggunaan class dalam CSS dong!",
    "jawaban": "Biasanya penggunaan class dalam CSS digunakan seperti ini.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Penggunaan class dalam css itu penting gak sih?",
    "jawaban": "Ingat ya, penggunaan class dalam CSS sangat sering dipakai saat membuat website.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu combinator?",
    "jawaban": "Apa itu combinator adalah salah satu konsep penting dalam CSS.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Apa itu combinator itu maksudnya apa ya?",
    "jawaban": "Untuk apa itu combinator, biasanya digunakan dalam styling HTML.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang apa itu combinator?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang apa itu combinator.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu combinator dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan apa itu combinator, kamu bisa ikuti contoh berikut.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Saya baru belajar, apa itu combinator itu gimana sih?",
    "jawaban": "Tenang, apa itu combinator itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "apa itu combinator dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang apa itu combinator nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti apa itu combinator.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Kalau mau pakai apa itu combinator, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan apa itu combinator berikut ini.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu combinator dong!",
    "jawaban": "Biasanya apa itu combinator digunakan seperti ini.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Apa itu combinator itu penting gak sih?",
    "jawaban": "Ingat ya, apa itu combinator sangat sering dipakai saat membuat website.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Apa itu apa itu child selector?",
    "jawaban": "Apa itu child selector adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Apa itu child selector itu maksudnya apa ya?",
    "jawaban": "Untuk apa itu child selector, biasanya digunakan dalam styling HTML.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang apa itu child selector?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang apa itu child selector.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu child selector dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan apa itu child selector, kamu bisa ikuti contoh berikut.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, apa itu child selector itu gimana sih?",
    "jawaban": "Tenang, apa itu child selector itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "apa itu child selector dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang apa itu child selector nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti apa itu child selector.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai apa itu child selector, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan apa itu child selector berikut ini.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu child selector dong!",
    "jawaban": "Biasanya apa itu child selector digunakan seperti ini.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Apa itu child selector itu penting gak sih?",
    "jawaban": "Ingat ya, apa itu child selector sangat sering dipakai saat membuat website.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu sibling selector?",
    "jawaban": "Apa itu sibling selector adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Apa itu sibling selector itu maksudnya apa ya?",
    "jawaban": "Untuk apa itu sibling selector, biasanya digunakan dalam styling HTML.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang apa itu sibling selector?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang apa itu sibling selector.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu sibling selector dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan apa itu sibling selector, kamu bisa ikuti contoh berikut.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, apa itu sibling selector itu gimana sih?",
    "jawaban": "Tenang, apa itu sibling selector itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "apa itu sibling selector dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang apa itu sibling selector nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti apa itu sibling selector.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai apa itu sibling selector, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan apa itu sibling selector berikut ini.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu sibling selector dong!",
    "jawaban": "Biasanya apa itu sibling selector digunakan seperti ini.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Apa itu sibling selector itu penting gak sih?",
    "jawaban": "Ingat ya, apa itu sibling selector sangat sering dipakai saat membuat website.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Apa itu selector atribut?",
    "jawaban": "Selector atribut adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Selector atribut itu maksudnya apa ya?",
    "jawaban": "Untuk selector atribut, biasanya digunakan dalam styling HTML.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang selector atribut?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang selector atribut.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai selector atribut dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan selector atribut, kamu bisa ikuti contoh berikut.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, selector atribut itu gimana sih?",
    "jawaban": "Tenang, selector atribut itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "selector atribut dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang selector atribut nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti selector atribut.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai selector atribut, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan selector atribut berikut ini.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan selector atribut dong!",
    "jawaban": "Biasanya selector atribut digunakan seperti ini.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Selector atribut itu penting gak sih?",
    "jawaban": "Ingat ya, selector atribut sangat sering dipakai saat membuat website.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur warna dengan CSS?",
    "jawaban": "Mengatur warna dengan css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Mengatur warna dengan css itu maksudnya apa ya?",
    "jawaban": "Untuk mengatur warna dengan CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang mengatur warna dengan CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang mengatur warna dengan CSS.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur warna dengan CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan mengatur warna dengan CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, mengatur warna dengan CSS itu gimana sih?",
    "jawaban": "Tenang, mengatur warna dengan CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "mengatur warna dengan CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang mengatur warna dengan CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti mengatur warna dengan CSS.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai mengatur warna dengan CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan mengatur warna dengan CSS berikut ini.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur warna dengan CSS dong!",
    "jawaban": "Biasanya mengatur warna dengan CSS digunakan seperti ini.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Mengatur warna dengan css itu penting gak sih?",
    "jawaban": "Ingat ya, mengatur warna dengan CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur font dengan CSS?",
    "jawaban": "Mengatur font dengan css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Mengatur font dengan css itu maksudnya apa ya?",
    "jawaban": "Untuk mengatur font dengan CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang mengatur font dengan CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang mengatur font dengan CSS.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur font dengan CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan mengatur font dengan CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, mengatur font dengan CSS itu gimana sih?",
    "jawaban": "Tenang, mengatur font dengan CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "mengatur font dengan CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang mengatur font dengan CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti mengatur font dengan CSS.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai mengatur font dengan CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan mengatur font dengan CSS berikut ini.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur font dengan CSS dong!",
    "jawaban": "Biasanya mengatur font dengan CSS digunakan seperti ini.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Mengatur font dengan css itu penting gak sih?",
    "jawaban": "Ingat ya, mengatur font dengan CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur jarak (spacing) di CSS?",
    "jawaban": "Mengatur jarak (spacing) di css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak (spacing) di css itu maksudnya apa ya?",
    "jawaban": "Untuk mengatur jarak (spacing) di CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang mengatur jarak (spacing) di CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang mengatur jarak (spacing) di CSS.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur jarak (spacing) di CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan mengatur jarak (spacing) di CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, mengatur jarak (spacing) di CSS itu gimana sih?",
    "jawaban": "Tenang, mengatur jarak (spacing) di CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "mengatur jarak (spacing) di CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang mengatur jarak (spacing) di CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti mengatur jarak (spacing) di CSS.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai mengatur jarak (spacing) di CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan mengatur jarak (spacing) di CSS berikut ini.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur jarak (spacing) di CSS dong!",
    "jawaban": "Biasanya mengatur jarak (spacing) di CSS digunakan seperti ini.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak (spacing) di css itu penting gak sih?",
    "jawaban": "Ingat ya, mengatur jarak (spacing) di CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Apa itu pakai font dari Google Font?",
    "jawaban": "Pakai font dari google font adalah salah satu konsep penting dalam CSS.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Pakai font dari google font itu maksudnya apa ya?",
    "jawaban": "Untuk pakai font dari Google Font, biasanya digunakan dalam styling HTML.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang pakai font dari Google Font?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang pakai font dari Google Font.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai pakai font dari Google Font dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan pakai font dari Google Font, kamu bisa ikuti contoh berikut.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, pakai font dari Google Font itu gimana sih?",
    "jawaban": "Tenang, pakai font dari Google Font itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "pakai font dari Google Font dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang pakai font dari Google Font nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti pakai font dari Google Font.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai pakai font dari Google Font, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan pakai font dari Google Font berikut ini.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan pakai font dari Google Font dong!",
    "jawaban": "Biasanya pakai font dari Google Font digunakan seperti ini.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Pakai font dari google font itu penting gak sih?",
    "jawaban": "Ingat ya, pakai font dari Google Font sangat sering dipakai saat membuat website.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Apa itu arti istilah CSS umum?",
    "jawaban": "Arti istilah css umum adalah salah satu konsep penting dalam CSS.",
    "kode": null
  },
  {
    "pertanyaan": "Arti istilah css umum itu maksudnya apa ya?",
    "jawaban": "Untuk arti istilah CSS umum, biasanya digunakan dalam styling HTML.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa dijelasin tentang arti istilah CSS umum?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang arti istilah CSS umum.",
    "kode": null
  },
  {
    "pertanyaan": "Gimana cara pakai arti istilah CSS umum dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan arti istilah CSS umum, kamu bisa ikuti contoh berikut.",
    "kode": null
  },
  {
    "pertanyaan": "Saya baru belajar, arti istilah CSS umum itu gimana sih?",
    "jawaban": "Tenang, arti istilah CSS umum itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": null
  },
  {
    "pertanyaan": "arti istilah CSS umum dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": null
  },
  {
    "pertanyaan": "Ada contoh simpel tentang arti istilah CSS umum nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti arti istilah CSS umum.",
    "kode": null
  },
  {
    "pertanyaan": "Kalau mau pakai arti istilah CSS umum, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan arti istilah CSS umum berikut ini.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh penggunaan arti istilah CSS umum dong!",
    "jawaban": "Biasanya arti istilah CSS umum digunakan seperti ini.",
    "kode": null
  },
  {
    "pertanyaan": "Arti istilah css umum itu penting gak sih?",
    "jawaban": "Ingat ya, arti istilah CSS umum sangat sering dipakai saat membuat website.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu normal flow dalam CSS?",
    "jawaban": "Normal flow dalam css adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": null
  },
  {
    "pertanyaan": "Normal flow dalam css itu dipakai buat apa sih?",
    "jawaban": "Untuk normal flow dalam CSS, kamu bisa lihat contoh kode berikut.",
    "kode": null
  },
  {
    "pertanyaan": "Gimana cara pakai normal flow dalam CSS di CSS?",
    "jawaban": "Normal flow dalam css digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh kode untuk normal flow dalam CSS gimana ya?",
    "jawaban": "Ini contoh pemakaian normal flow dalam CSS yang umum digunakan di banyak website.",
    "kode": null
  },
  {
    "pertanyaan": "Normal flow dalam css itu susah nggak?",
    "jawaban": "Jangan khawatir, normal flow dalam CSS itu gampang dipahami kok!",
    "kode": null
  },
  {
    "pertanyaan": "Saya bingung, normal flow dalam CSS itu maksudnya apa?",
    "jawaban": "Normal flow dalam css membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": null
  },
  {
    "pertanyaan": "Kalau mau styling pakai normal flow dalam CSS, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan normal flow dalam CSS.",
    "kode": null
  },
  {
    "pertanyaan": "normal flow dalam CSS sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti normal flow dalam CSS, coba perhatikan contoh ini.",
    "kode": null
  },
  {
    "pertanyaan": "Cara paling gampang ngerti normal flow dalam CSS gimana?",
    "jawaban": "normal flow dalam CSS bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan normal flow dalam CSS yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja normal flow dalam CSS.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu penggunaan properti display?",
    "jawaban": "Penggunaan properti display adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Penggunaan properti display itu dipakai buat apa sih?",
    "jawaban": "Untuk penggunaan properti display, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai penggunaan properti display di CSS?",
    "jawaban": "Penggunaan properti display digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk penggunaan properti display gimana ya?",
    "jawaban": "Ini contoh pemakaian penggunaan properti display yang umum digunakan di banyak website.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Penggunaan properti display itu susah nggak?",
    "jawaban": "Jangan khawatir, penggunaan properti display itu gampang dipahami kok!",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, penggunaan properti display itu maksudnya apa?",
    "jawaban": "Penggunaan properti display membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai penggunaan properti display, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan penggunaan properti display.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "penggunaan properti display sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti penggunaan properti display, coba perhatikan contoh ini.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti penggunaan properti display gimana?",
    "jawaban": "penggunaan properti display bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan penggunaan properti display yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja penggunaan properti display.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu flexbox?",
    "jawaban": "Apa itu flexbox adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Apa itu flexbox itu dipakai buat apa sih?",
    "jawaban": "Untuk apa itu flexbox, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu flexbox di CSS?",
    "jawaban": "Apa itu flexbox digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk apa itu flexbox gimana ya?",
    "jawaban": "Ini contoh pemakaian apa itu flexbox yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Apa itu flexbox itu susah nggak?",
    "jawaban": "Jangan khawatir, apa itu flexbox itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, apa itu flexbox itu maksudnya apa?",
    "jawaban": "Apa itu flexbox membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai apa itu flexbox, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan apa itu flexbox.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "apa itu flexbox sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti apa itu flexbox, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti apa itu flexbox gimana?",
    "jawaban": "apa itu flexbox bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan apa itu flexbox yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja apa itu flexbox.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur urutan item flex dengan order?",
    "jawaban": "Mengatur urutan item flex dengan order adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Mengatur urutan item flex dengan order itu dipakai buat apa sih?",
    "jawaban": "Untuk mengatur urutan item flex dengan order, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur urutan item flex dengan order di CSS?",
    "jawaban": "Mengatur urutan item flex dengan order digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengatur urutan item flex dengan order gimana ya?",
    "jawaban": "Ini contoh pemakaian mengatur urutan item flex dengan order yang umum digunakan di banyak website.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Mengatur urutan item flex dengan order itu susah nggak?",
    "jawaban": "Jangan khawatir, mengatur urutan item flex dengan order itu gampang dipahami kok!",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur urutan item flex dengan order itu maksudnya apa?",
    "jawaban": "Mengatur urutan item flex dengan order membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai mengatur urutan item flex dengan order, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan mengatur urutan item flex dengan order.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "mengatur urutan item flex dengan order sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti mengatur urutan item flex dengan order, coba perhatikan contoh ini.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti mengatur urutan item flex dengan order gimana?",
    "jawaban": "mengatur urutan item flex dengan order bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur urutan item flex dengan order yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja mengatur urutan item flex dengan order.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Apa itu membuat item flex bisa membesar dengan flex-grow?",
    "jawaban": "Membuat item flex bisa membesar dengan flex-grow adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Membuat item flex bisa membesar dengan flex-grow itu dipakai buat apa sih?",
    "jawaban": "Untuk membuat item flex bisa membesar dengan flex-grow, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai membuat item flex bisa membesar dengan flex-grow di CSS?",
    "jawaban": "Membuat item flex bisa membesar dengan flex-grow digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk membuat item flex bisa membesar dengan flex-grow gimana ya?",
    "jawaban": "Ini contoh pemakaian membuat item flex bisa membesar dengan flex-grow yang umum digunakan di banyak website.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Membuat item flex bisa membesar dengan flex-grow itu susah nggak?",
    "jawaban": "Jangan khawatir, membuat item flex bisa membesar dengan flex-grow itu gampang dipahami kok!",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, membuat item flex bisa membesar dengan flex-grow itu maksudnya apa?",
    "jawaban": "Membuat item flex bisa membesar dengan flex-grow membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai membuat item flex bisa membesar dengan flex-grow, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan membuat item flex bisa membesar dengan flex-grow.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "membuat item flex bisa membesar dengan flex-grow sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti membuat item flex bisa membesar dengan flex-grow, coba perhatikan contoh ini.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti membuat item flex bisa membesar dengan flex-grow gimana?",
    "jawaban": "membuat item flex bisa membesar dengan flex-grow bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan membuat item flex bisa membesar dengan flex-grow yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja membuat item flex bisa membesar dengan flex-grow.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur posisi item dengan justify-content?",
    "jawaban": "Mengatur posisi item dengan justify-content adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Mengatur posisi item dengan justify-content itu dipakai buat apa sih?",
    "jawaban": "Untuk mengatur posisi item dengan justify-content, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur posisi item dengan justify-content di CSS?",
    "jawaban": "Mengatur posisi item dengan justify-content digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengatur posisi item dengan justify-content gimana ya?",
    "jawaban": "Ini contoh pemakaian mengatur posisi item dengan justify-content yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Mengatur posisi item dengan justify-content itu susah nggak?",
    "jawaban": "Jangan khawatir, mengatur posisi item dengan justify-content itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur posisi item dengan justify-content itu maksudnya apa?",
    "jawaban": "Mengatur posisi item dengan justify-content membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai mengatur posisi item dengan justify-content, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan mengatur posisi item dengan justify-content.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "mengatur posisi item dengan justify-content sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti mengatur posisi item dengan justify-content, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti mengatur posisi item dengan justify-content gimana?",
    "jawaban": "mengatur posisi item dengan justify-content bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur posisi item dengan justify-content yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja mengatur posisi item dengan justify-content.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Apa itu align item secara vertikal dengan align-items?",
    "jawaban": "Align item secara vertikal dengan align-items adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Align item secara vertikal dengan align-items itu dipakai buat apa sih?",
    "jawaban": "Untuk align item secara vertikal dengan align-items, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai align item secara vertikal dengan align-items di CSS?",
    "jawaban": "Align item secara vertikal dengan align-items digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk align item secara vertikal dengan align-items gimana ya?",
    "jawaban": "Ini contoh pemakaian align item secara vertikal dengan align-items yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Align item secara vertikal dengan align-items itu susah nggak?",
    "jawaban": "Jangan khawatir, align item secara vertikal dengan align-items itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, align item secara vertikal dengan align-items itu maksudnya apa?",
    "jawaban": "Align item secara vertikal dengan align-items membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai align item secara vertikal dengan align-items, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan align item secara vertikal dengan align-items.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "align item secara vertikal dengan align-items sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti align item secara vertikal dengan align-items, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti align item secara vertikal dengan align-items gimana?",
    "jawaban": "align item secara vertikal dengan align-items bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan align item secara vertikal dengan align-items yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja align item secara vertikal dengan align-items.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Apa itu membungkus flex item dengan flex-wrap?",
    "jawaban": "Membungkus flex item dengan flex-wrap adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Membungkus flex item dengan flex-wrap itu dipakai buat apa sih?",
    "jawaban": "Untuk membungkus flex item dengan flex-wrap, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai membungkus flex item dengan flex-wrap di CSS?",
    "jawaban": "Membungkus flex item dengan flex-wrap digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk membungkus flex item dengan flex-wrap gimana ya?",
    "jawaban": "Ini contoh pemakaian membungkus flex item dengan flex-wrap yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Membungkus flex item dengan flex-wrap itu susah nggak?",
    "jawaban": "Jangan khawatir, membungkus flex item dengan flex-wrap itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, membungkus flex item dengan flex-wrap itu maksudnya apa?",
    "jawaban": "Membungkus flex item dengan flex-wrap membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai membungkus flex item dengan flex-wrap, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan membungkus flex item dengan flex-wrap.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "membungkus flex item dengan flex-wrap sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti membungkus flex item dengan flex-wrap, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti membungkus flex item dengan flex-wrap gimana?",
    "jawaban": "membungkus flex item dengan flex-wrap bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan membungkus flex item dengan flex-wrap yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja membungkus flex item dengan flex-wrap.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur arah baris flex dengan flex-direction?",
    "jawaban": "Mengatur arah baris flex dengan flex-direction adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Mengatur arah baris flex dengan flex-direction itu dipakai buat apa sih?",
    "jawaban": "Untuk mengatur arah baris flex dengan flex-direction, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur arah baris flex dengan flex-direction di CSS?",
    "jawaban": "Mengatur arah baris flex dengan flex-direction digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengatur arah baris flex dengan flex-direction gimana ya?",
    "jawaban": "Ini contoh pemakaian mengatur arah baris flex dengan flex-direction yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Mengatur arah baris flex dengan flex-direction itu susah nggak?",
    "jawaban": "Jangan khawatir, mengatur arah baris flex dengan flex-direction itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur arah baris flex dengan flex-direction itu maksudnya apa?",
    "jawaban": "Mengatur arah baris flex dengan flex-direction membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai mengatur arah baris flex dengan flex-direction, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan mengatur arah baris flex dengan flex-direction.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "mengatur arah baris flex dengan flex-direction sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti mengatur arah baris flex dengan flex-direction, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti mengatur arah baris flex dengan flex-direction gimana?",
    "jawaban": "mengatur arah baris flex dengan flex-direction bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur arah baris flex dengan flex-direction yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja mengatur arah baris flex dengan flex-direction.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu CSS Grid?",
    "jawaban": "Apa itu css grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan apa itu CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu css grid biasanya dipakai buat apa?",
    "jawaban": "Apa itu css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan apa itu CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian apa itu CSS Grid.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, apa itu CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba apa itu CSS Grid.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Contoh kode apa itu CSS Grid yang gampang dong.",
    "jawaban": "Apa itu css grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai apa itu CSS Grid dalam proyek kamu.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai apa itu CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar apa itu CSS Grid lewat contoh ini.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan apa itu CSS Grid?",
    "jawaban": "apa itu CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "apa itu CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh apa itu CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu cara mengatur kolom di CSS Grid?",
    "jawaban": "Cara mengatur kolom di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara mengatur kolom di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan cara mengatur kolom di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Cara mengatur kolom di css grid biasanya dipakai buat apa?",
    "jawaban": "Cara mengatur kolom di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan cara mengatur kolom di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian cara mengatur kolom di CSS Grid.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, cara mengatur kolom di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba cara mengatur kolom di CSS Grid.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Contoh kode cara mengatur kolom di CSS Grid yang gampang dong.",
    "jawaban": "Cara mengatur kolom di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Cara mengatur kolom di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai cara mengatur kolom di CSS Grid dalam proyek kamu.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai cara mengatur kolom di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar cara mengatur kolom di CSS Grid lewat contoh ini.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan cara mengatur kolom di CSS Grid?",
    "jawaban": "cara mengatur kolom di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "cara mengatur kolom di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh cara mengatur kolom di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur baris di CSS Grid?",
    "jawaban": "Mengatur baris di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur baris di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan mengatur baris di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Mengatur baris di css grid biasanya dipakai buat apa?",
    "jawaban": "Mengatur baris di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur baris di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian mengatur baris di CSS Grid.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur baris di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba mengatur baris di CSS Grid.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Contoh kode mengatur baris di CSS Grid yang gampang dong.",
    "jawaban": "Mengatur baris di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Mengatur baris di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai mengatur baris di CSS Grid dalam proyek kamu.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai mengatur baris di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar mengatur baris di CSS Grid lewat contoh ini.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan mengatur baris di CSS Grid?",
    "jawaban": "mengatur baris di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "mengatur baris di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh mengatur baris di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur jarak antar grid?",
    "jawaban": "Mengatur jarak antar grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur jarak antar grid dalam CSS?",
    "jawaban": "Untuk menggunakan mengatur jarak antar grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak antar grid biasanya dipakai buat apa?",
    "jawaban": "Mengatur jarak antar grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur jarak antar grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian mengatur jarak antar grid.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur jarak antar grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba mengatur jarak antar grid.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Contoh kode mengatur jarak antar grid yang gampang dong.",
    "jawaban": "Mengatur jarak antar grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak antar grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai mengatur jarak antar grid dalam proyek kamu.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai mengatur jarak antar grid?",
    "jawaban": "Yuk pahami konsep dasar mengatur jarak antar grid lewat contoh ini.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan mengatur jarak antar grid?",
    "jawaban": "mengatur jarak antar grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "mengatur jarak antar grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh mengatur jarak antar grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Apa itu menggabungkan kolom di CSS Grid?",
    "jawaban": "Menggabungkan kolom di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai menggabungkan kolom di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan menggabungkan kolom di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan kolom di css grid biasanya dipakai buat apa?",
    "jawaban": "Menggabungkan kolom di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan menggabungkan kolom di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian menggabungkan kolom di CSS Grid.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, menggabungkan kolom di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba menggabungkan kolom di CSS Grid.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Contoh kode menggabungkan kolom di CSS Grid yang gampang dong.",
    "jawaban": "Menggabungkan kolom di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan kolom di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai menggabungkan kolom di CSS Grid dalam proyek kamu.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai menggabungkan kolom di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar menggabungkan kolom di CSS Grid lewat contoh ini.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan menggabungkan kolom di CSS Grid?",
    "jawaban": "menggabungkan kolom di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "menggabungkan kolom di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh menggabungkan kolom di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Apa itu menggabungkan baris di CSS Grid?",
    "jawaban": "Menggabungkan baris di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai menggabungkan baris di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan menggabungkan baris di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan baris di css grid biasanya dipakai buat apa?",
    "jawaban": "Menggabungkan baris di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan menggabungkan baris di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian menggabungkan baris di CSS Grid.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, menggabungkan baris di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba menggabungkan baris di CSS Grid.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Contoh kode menggabungkan baris di CSS Grid yang gampang dong.",
    "jawaban": "Menggabungkan baris di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan baris di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai menggabungkan baris di CSS Grid dalam proyek kamu.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai menggabungkan baris di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar menggabungkan baris di CSS Grid lewat contoh ini.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan menggabungkan baris di CSS Grid?",
    "jawaban": "menggabungkan baris di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "menggabungkan baris di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh menggabungkan baris di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Apa itu cara membuat layout responsif?",
    "jawaban": "Cara membuat layout responsif sangat berguna dalam layout modern.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara membuat layout responsif dalam CSS?",
    "jawaban": "Untuk menggunakan cara membuat layout responsif, perhatikan contoh berikut ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Cara membuat layout responsif biasanya dipakai buat apa?",
    "jawaban": "Cara membuat layout responsif bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan cara membuat layout responsif?",
    "jawaban": "Ini salah satu contoh umum pemakaian cara membuat layout responsif.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Saya bingung, cara membuat layout responsif itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba cara membuat layout responsif.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Contoh kode cara membuat layout responsif yang gampang dong.",
    "jawaban": "Cara membuat layout responsif termasuk bagian dari responsive design.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Cara membuat layout responsif itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai cara membuat layout responsif dalam proyek kamu.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai cara membuat layout responsif?",
    "jawaban": "Yuk pahami konsep dasar cara membuat layout responsif lewat contoh ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan cara membuat layout responsif?",
    "jawaban": "cara membuat layout responsif bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "cara membuat layout responsif sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh cara membuat layout responsif biar tampilannya rapi di semua perangkat.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu media query?",
    "jawaban": "Apa itu media query sangat berguna dalam layout modern.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu media query dalam CSS?",
    "jawaban": "Untuk menggunakan apa itu media query, perhatikan contoh berikut ini.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Apa itu media query biasanya dipakai buat apa?",
    "jawaban": "Apa itu media query bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan apa itu media query?",
    "jawaban": "Ini salah satu contoh umum pemakaian apa itu media query.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Saya bingung, apa itu media query itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba apa itu media query.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Contoh kode apa itu media query yang gampang dong.",
    "jawaban": "Apa itu media query termasuk bagian dari responsive design.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Apa itu media query itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai apa itu media query dalam proyek kamu.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai apa itu media query?",
    "jawaban": "Yuk pahami konsep dasar apa itu media query lewat contoh ini.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan apa itu media query?",
    "jawaban": "apa itu media query bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "apa itu media query sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh apa itu media query biar tampilannya rapi di semua perangkat.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Apa itu viewport itu apa?",
    "jawaban": "Viewport itu apa sangat berguna dalam layout modern.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Gimana cara pakai viewport itu apa dalam CSS?",
    "jawaban": "Untuk menggunakan viewport itu apa, perhatikan contoh berikut ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Viewport itu apa biasanya dipakai buat apa?",
    "jawaban": "Viewport itu apa bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan viewport itu apa?",
    "jawaban": "Ini salah satu contoh umum pemakaian viewport itu apa.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Saya bingung, viewport itu apa itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba viewport itu apa.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Contoh kode viewport itu apa yang gampang dong.",
    "jawaban": "Viewport itu apa termasuk bagian dari responsive design.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Viewport itu apa itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai viewport itu apa dalam proyek kamu.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai viewport itu apa?",
    "jawaban": "Yuk pahami konsep dasar viewport itu apa lewat contoh ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan viewport itu apa?",
    "jawaban": "viewport itu apa bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "viewport itu apa sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh viewport itu apa biar tampilannya rapi di semua perangkat.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Apa itu cara membuat website mobile-friendly?",
    "jawaban": "Cara membuat website mobile-friendly sangat berguna dalam layout modern.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara membuat website mobile-friendly dalam CSS?",
    "jawaban": "Untuk menggunakan cara membuat website mobile-friendly, perhatikan contoh berikut ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Cara membuat website mobile-friendly biasanya dipakai buat apa?",
    "jawaban": "Cara membuat website mobile-friendly bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan cara membuat website mobile-friendly?",
    "jawaban": "Ini salah satu contoh umum pemakaian cara membuat website mobile-friendly.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, cara membuat website mobile-friendly itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba cara membuat website mobile-friendly.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Contoh kode cara membuat website mobile-friendly yang gampang dong.",
    "jawaban": "Cara membuat website mobile-friendly termasuk bagian dari responsive design.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Cara membuat website mobile-friendly itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai cara membuat website mobile-friendly dalam proyek kamu.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai cara membuat website mobile-friendly?",
    "jawaban": "Yuk pahami konsep dasar cara membuat website mobile-friendly lewat contoh ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan cara membuat website mobile-friendly?",
    "jawaban": "cara membuat website mobile-friendly bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "cara membuat website mobile-friendly sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh cara membuat website mobile-friendly biar tampilannya rapi di semua perangkat.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu transition dalam CSS?",
    "jawaban": "Apa itu transition digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai apa itu transition?",
    "jawaban": "Untuk pakai apa itu transition, kamu bisa lihat contoh ini.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu transition itu sering dipakai buat apa?",
    "jawaban": "Apa itu transition bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu transition dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan apa itu transition.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal apa itu transition, bisa dijelaskan?",
    "jawaban": "Apa itu transition sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai apa itu transition?",
    "jawaban": "Kalau kamu mau efek halus, apa itu transition solusinya.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu transition itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai apa itu transition.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai apa itu transition bisa gak?",
    "jawaban": "apa itu transition bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai apa itu transition?",
    "jawaban": "Yuk belajar cara gampang bikin apa itu transition.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu transition itu cocok untuk efek hover nggak?",
    "jawaban": "Apa itu transition bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu cara menggunakan transform di CSS dalam CSS?",
    "jawaban": "Cara menggunakan transform di css digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai cara menggunakan transform di CSS?",
    "jawaban": "Untuk pakai cara menggunakan transform di CSS, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Cara menggunakan transform di css itu sering dipakai buat apa?",
    "jawaban": "Cara menggunakan transform di css bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan cara menggunakan transform di CSS dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan cara menggunakan transform di CSS.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal cara menggunakan transform di CSS, bisa dijelaskan?",
    "jawaban": "Cara menggunakan transform di css sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai cara menggunakan transform di CSS?",
    "jawaban": "Kalau kamu mau efek halus, cara menggunakan transform di CSS solusinya.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Cara menggunakan transform di css itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai cara menggunakan transform di CSS.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai cara menggunakan transform di CSS bisa gak?",
    "jawaban": "cara menggunakan transform di CSS bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai cara menggunakan transform di CSS?",
    "jawaban": "Yuk belajar cara gampang bikin cara menggunakan transform di CSS.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Cara menggunakan transform di css itu cocok untuk efek hover nggak?",
    "jawaban": "Cara menggunakan transform di css bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Apa itu membuat animasi dengan keyframes dalam CSS?",
    "jawaban": "Membuat animasi dengan keyframes digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai membuat animasi dengan keyframes?",
    "jawaban": "Untuk pakai membuat animasi dengan keyframes, kamu bisa lihat contoh ini.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Membuat animasi dengan keyframes itu sering dipakai buat apa?",
    "jawaban": "Membuat animasi dengan keyframes bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan membuat animasi dengan keyframes dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan membuat animasi dengan keyframes.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal membuat animasi dengan keyframes, bisa dijelaskan?",
    "jawaban": "Membuat animasi dengan keyframes sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai membuat animasi dengan keyframes?",
    "jawaban": "Kalau kamu mau efek halus, membuat animasi dengan keyframes solusinya.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Membuat animasi dengan keyframes itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai membuat animasi dengan keyframes.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai membuat animasi dengan keyframes bisa gak?",
    "jawaban": "membuat animasi dengan keyframes bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai membuat animasi dengan keyframes?",
    "jawaban": "Yuk belajar cara gampang bikin membuat animasi dengan keyframes.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Membuat animasi dengan keyframes itu cocok untuk efek hover nggak?",
    "jawaban": "Membuat animasi dengan keyframes bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengubah ukuran elemen dengan scale dalam CSS?",
    "jawaban": "Mengubah ukuran elemen dengan scale digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai mengubah ukuran elemen dengan scale?",
    "jawaban": "Untuk pakai mengubah ukuran elemen dengan scale, kamu bisa lihat contoh ini.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Mengubah ukuran elemen dengan scale itu sering dipakai buat apa?",
    "jawaban": "Mengubah ukuran elemen dengan scale bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengubah ukuran elemen dengan scale dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan mengubah ukuran elemen dengan scale.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal mengubah ukuran elemen dengan scale, bisa dijelaskan?",
    "jawaban": "Mengubah ukuran elemen dengan scale sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai mengubah ukuran elemen dengan scale?",
    "jawaban": "Kalau kamu mau efek halus, mengubah ukuran elemen dengan scale solusinya.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Mengubah ukuran elemen dengan scale itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai mengubah ukuran elemen dengan scale.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai mengubah ukuran elemen dengan scale bisa gak?",
    "jawaban": "mengubah ukuran elemen dengan scale bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai mengubah ukuran elemen dengan scale?",
    "jawaban": "Yuk belajar cara gampang bikin mengubah ukuran elemen dengan scale.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Mengubah ukuran elemen dengan scale itu cocok untuk efek hover nggak?",
    "jawaban": "Mengubah ukuran elemen dengan scale bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Apa itu memutar elemen dengan rotate dalam CSS?",
    "jawaban": "Memutar elemen dengan rotate digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai memutar elemen dengan rotate?",
    "jawaban": "Untuk pakai memutar elemen dengan rotate, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Memutar elemen dengan rotate itu sering dipakai buat apa?",
    "jawaban": "Memutar elemen dengan rotate bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan memutar elemen dengan rotate dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan memutar elemen dengan rotate.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal memutar elemen dengan rotate, bisa dijelaskan?",
    "jawaban": "Memutar elemen dengan rotate sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai memutar elemen dengan rotate?",
    "jawaban": "Kalau kamu mau efek halus, memutar elemen dengan rotate solusinya.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Memutar elemen dengan rotate itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai memutar elemen dengan rotate.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai memutar elemen dengan rotate bisa gak?",
    "jawaban": "memutar elemen dengan rotate bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai memutar elemen dengan rotate?",
    "jawaban": "Yuk belajar cara gampang bikin memutar elemen dengan rotate.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Memutar elemen dengan rotate itu cocok untuk efek hover nggak?",
    "jawaban": "Memutar elemen dengan rotate bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Apa itu memindahkan elemen dengan translate dalam CSS?",
    "jawaban": "Memindahkan elemen dengan translate digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai memindahkan elemen dengan translate?",
    "jawaban": "Untuk pakai memindahkan elemen dengan translate, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Memindahkan elemen dengan translate itu sering dipakai buat apa?",
    "jawaban": "Memindahkan elemen dengan translate bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan memindahkan elemen dengan translate dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan memindahkan elemen dengan translate.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal memindahkan elemen dengan translate, bisa dijelaskan?",
    "jawaban": "Memindahkan elemen dengan translate sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai memindahkan elemen dengan translate?",
    "jawaban": "Kalau kamu mau efek halus, memindahkan elemen dengan translate solusinya.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Memindahkan elemen dengan translate itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai memindahkan elemen dengan translate.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai memindahkan elemen dengan translate bisa gak?",
    "jawaban": "memindahkan elemen dengan translate bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai memindahkan elemen dengan translate?",
    "jawaban": "Yuk belajar cara gampang bikin memindahkan elemen dengan translate.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Memindahkan elemen dengan translate itu cocok untuk efek hover nggak?",
    "jawaban": "Memindahkan elemen dengan translate bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Apa itu membuat efek hover dengan transition dalam CSS?",
    "jawaban": "Membuat efek hover dengan transition digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai membuat efek hover dengan transition?",
    "jawaban": "Untuk pakai membuat efek hover dengan transition, kamu bisa lihat contoh ini.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Membuat efek hover dengan transition itu sering dipakai buat apa?",
    "jawaban": "Membuat efek hover dengan transition bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan membuat efek hover dengan transition dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan membuat efek hover dengan transition.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal membuat efek hover dengan transition, bisa dijelaskan?",
    "jawaban": "Membuat efek hover dengan transition sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai membuat efek hover dengan transition?",
    "jawaban": "Kalau kamu mau efek halus, membuat efek hover dengan transition solusinya.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Membuat efek hover dengan transition itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai membuat efek hover dengan transition.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai membuat efek hover dengan transition bisa gak?",
    "jawaban": "membuat efek hover dengan transition bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai membuat efek hover dengan transition?",
    "jawaban": "Yuk belajar cara gampang bikin membuat efek hover dengan transition.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Membuat efek hover dengan transition itu cocok untuk efek hover nggak?",
    "jawaban": "Membuat efek hover dengan transition bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu ease-in dan ease-out dalam CSS?",
    "jawaban": "Apa itu ease-in dan ease-out digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai apa itu ease-in dan ease-out?",
    "jawaban": "Untuk pakai apa itu ease-in dan ease-out, kamu bisa lihat contoh ini.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu ease-in dan ease-out itu sering dipakai buat apa?",
    "jawaban": "Apa itu ease-in dan ease-out bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu ease-in dan ease-out dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan apa itu ease-in dan ease-out.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal apa itu ease-in dan ease-out, bisa dijelaskan?",
    "jawaban": "Apa itu ease-in dan ease-out sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai apa itu ease-in dan ease-out?",
    "jawaban": "Kalau kamu mau efek halus, apa itu ease-in dan ease-out solusinya.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu ease-in dan ease-out itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai apa itu ease-in dan ease-out.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai apa itu ease-in dan ease-out bisa gak?",
    "jawaban": "apa itu ease-in dan ease-out bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai apa itu ease-in dan ease-out?",
    "jawaban": "Yuk belajar cara gampang bikin apa itu ease-in dan ease-out.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu ease-in dan ease-out itu cocok untuk efek hover nggak?",
    "jawaban": "Apa itu ease-in dan ease-out bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur delay animasi dalam CSS?",
    "jawaban": "Mengatur delay animasi digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai mengatur delay animasi?",
    "jawaban": "Untuk pakai mengatur delay animasi, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Mengatur delay animasi itu sering dipakai buat apa?",
    "jawaban": "Mengatur delay animasi bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur delay animasi dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan mengatur delay animasi.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal mengatur delay animasi, bisa dijelaskan?",
    "jawaban": "Mengatur delay animasi sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai mengatur delay animasi?",
    "jawaban": "Kalau kamu mau efek halus, mengatur delay animasi solusinya.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Mengatur delay animasi itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai mengatur delay animasi.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai mengatur delay animasi bisa gak?",
    "jawaban": "mengatur delay animasi bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai mengatur delay animasi?",
    "jawaban": "Yuk belajar cara gampang bikin mengatur delay animasi.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Mengatur delay animasi itu cocok untuk efek hover nggak?",
    "jawaban": "Mengatur delay animasi bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengulang animasi terus-menerus dalam CSS?",
    "jawaban": "Mengulang animasi terus-menerus digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai mengulang animasi terus-menerus?",
    "jawaban": "Untuk pakai mengulang animasi terus-menerus, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Mengulang animasi terus-menerus itu sering dipakai buat apa?",
    "jawaban": "Mengulang animasi terus-menerus bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengulang animasi terus-menerus dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan mengulang animasi terus-menerus.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal mengulang animasi terus-menerus, bisa dijelaskan?",
    "jawaban": "Mengulang animasi terus-menerus sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai mengulang animasi terus-menerus?",
    "jawaban": "Kalau kamu mau efek halus, mengulang animasi terus-menerus solusinya.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Mengulang animasi terus-menerus itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai mengulang animasi terus-menerus.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai mengulang animasi terus-menerus bisa gak?",
    "jawaban": "mengulang animasi terus-menerus bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai mengulang animasi terus-menerus?",
    "jawaban": "Yuk belajar cara gampang bikin mengulang animasi terus-menerus.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Mengulang animasi terus-menerus itu cocok untuk efek hover nggak?",
    "jawaban": "Mengulang animasi terus-menerus bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },

  {
    "pertanyaan": "Bagaimana cara menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Gimana sih caranya menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Tuliskan langkah menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Salah satu cara yaitu: Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Apa itu heading dalam HTML?",
    "jawaban": "Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Jelaskan apa itu heading dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu heading dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Apa fungsi dari HTML entities?",
    "jawaban": "HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari HTML entities?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari HTML entities?",
    "jawaban": "Salah satu cara yaitu: HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Bagaimana cara membuat baris baru di HTML?",
    "jawaban": "Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Gimana sih caranya membuat baris baru di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Tuliskan langkah membuat baris baru di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <style> di HTML?",
    "jawaban": "Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari tag <style> di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari tag <style> di HTML?",
    "jawaban": "Salah satu cara yaitu: Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Apa saja jenis formatting teks dalam HTML?",
    "jawaban": "Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Jelaskan apa saja jenis formatting teks dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian saja jenis formatting teks dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis komentar di HTML?",
    "jawaban": "Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Gimana sih caranya menulis komentar di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Tuliskan langkah menulis komentar di HTML?",
    "jawaban": "Salah satu cara yaitu: Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Bagaimana cara memberi warna pada elemen HTML?",
    "jawaban": "Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Gimana sih caranya memberi warna pada elemen HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Tuliskan langkah memberi warna pada elemen HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Apa saja jenis list di HTML?",
    "jawaban": "HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Jelaskan apa saja jenis list di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian saja jenis list di HTML?",
    "jawaban": "Salah satu cara yaitu: HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat link di HTML?",
    "jawaban": "Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Gimana sih caranya membuat link di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Tuliskan langkah membuat link di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan gambar di HTML?",
    "jawaban": "Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Gimana sih caranya menampilkan gambar di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Tuliskan langkah menampilkan gambar di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <p> dalam HTML?",
    "jawaban": "Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari tag <p> dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari tag <p> dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan kode komputer di HTML?",
    "jawaban": "Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Gimana sih caranya menampilkan kode komputer di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Tuliskan langkah menampilkan kode komputer di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan emoji di HTML?",
    "jawaban": "Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Jelaskan bagaimana menambahkan emoji di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Menurutmu gimana menambahkan emoji di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Apa fungsi tag <head> di HTML?",
    "jawaban": "Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi tag <head> di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi tag <head> di HTML?",
    "jawaban": "Salah satu cara yaitu: Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Apa itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Jelaskan apa itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Salah satu cara yaitu: Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Apa itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Jelaskan apa itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Salah satu cara yaitu: Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <span>?",
    "jawaban": "Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari tag <span>?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari tag <span>?",
    "jawaban": "Salah satu cara yaitu: Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan video ke HTML?",
    "jawaban": "Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Gimana sih caranya menambahkan video ke HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Tuliskan langkah menambahkan video ke HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan HTML5?",
    "jawaban": "HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Jelaskan apa yang dimaksud dengan HTML5?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Coba jelaskan pengertian yang dimaksud dengan HTML5?",
    "jawaban": "Salah satu cara yaitu: HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara membuat tabel di HTML?",
    "jawaban": "Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Gimana sih caranya membuat tabel di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Tuliskan langkah membuat tabel di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Apa itu elemen semantik di HTML?",
    "jawaban": "Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Jelaskan apa itu elemen semantik di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu elemen semantik di HTML?",
    "jawaban": "Salah satu cara yaitu: Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Apa fungsi dari atribut id dalam HTML?",
    "jawaban": "Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari atribut id dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari atribut id dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Apa itu heading dalam HTML?",
    "jawaban": "Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Apa fungsi dari HTML entities?",
    "jawaban": "HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Bagaimana cara membuat baris baru di HTML?",
    "jawaban": "Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <style> di HTML?",
    "jawaban": "Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Apa saja jenis formatting teks dalam HTML?",
    "jawaban": "Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis komentar di HTML?",
    "jawaban": "Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Bagaimana cara memberi warna pada elemen HTML?",
    "jawaban": "Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Apa saja jenis list di HTML?",
    "jawaban": "HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat link di HTML?",
    "jawaban": "Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan gambar di HTML?",
    "jawaban": "Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <p> dalam HTML?",
    "jawaban": "Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan kode komputer di HTML?",
    "jawaban": "Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan emoji di HTML?",
    "jawaban": "Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Apa fungsi tag <head> di HTML?",
    "jawaban": "Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Apa itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Apa itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <span>?",
    "jawaban": "Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan video ke HTML?",
    "jawaban": "Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan HTML5?",
    "jawaban": "HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara membuat tabel di HTML?",
    "jawaban": "Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Apa itu elemen semantik di HTML?",
    "jawaban": "Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Apa fungsi dari atribut id dalam HTML?",
    "jawaban": "Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Kalau mau nampilin teks hello world gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk nampilin teks hello world.\n",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Apa tag HTML buat nampilin teks hello world?",
    "jawaban": "Gunakan tag ini kalau kamu mau nampilin teks hello world:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk nampilin teks hello world itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat nampilin teks hello world:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk nampilin teks hello world apa ya?",
    "jawaban": "Biar bisa nampilin teks hello world, tinggal gunakan struktur HTML berikut:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk nampilin teks hello world dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat nampilin teks hello world:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Kalau mau bikin judul besar gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin judul besar.\n",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin judul besar?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin judul besar:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin judul besar itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin judul besar:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin judul besar apa ya?",
    "jawaban": "Biar bisa bikin judul besar, tinggal gunakan struktur HTML berikut:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin judul besar dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin judul besar:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Kalau mau ganti baris di paragraf gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk ganti baris di paragraf.\n",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Apa tag HTML buat ganti baris di paragraf?",
    "jawaban": "Gunakan tag ini kalau kamu mau ganti baris di paragraf:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Cara paling gampang untuk ganti baris di paragraf itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat ganti baris di paragraf:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk ganti baris di paragraf apa ya?",
    "jawaban": "Biar bisa ganti baris di paragraf, tinggal gunakan struktur HTML berikut:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk ganti baris di paragraf dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat ganti baris di paragraf:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Kalau mau nampilin gambar gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk nampilin gambar.\n",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Apa tag HTML buat nampilin gambar?",
    "jawaban": "Gunakan tag ini kalau kamu mau nampilin gambar:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Cara paling gampang untuk nampilin gambar itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat nampilin gambar:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk nampilin gambar apa ya?",
    "jawaban": "Biar bisa nampilin gambar, tinggal gunakan struktur HTML berikut:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk nampilin gambar dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat nampilin gambar:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Kalau mau bikin link ke halaman lain gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin link ke halaman lain.\n",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin link ke halaman lain?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin link ke halaman lain:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin link ke halaman lain itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin link ke halaman lain:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin link ke halaman lain apa ya?",
    "jawaban": "Biar bisa bikin link ke halaman lain, tinggal gunakan struktur HTML berikut:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin link ke halaman lain dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin link ke halaman lain:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Kalau mau tambah warna teks gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk tambah warna teks.\n",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Apa tag HTML buat tambah warna teks?",
    "jawaban": "Gunakan tag ini kalau kamu mau tambah warna teks:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk tambah warna teks itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat tambah warna teks:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk tambah warna teks apa ya?",
    "jawaban": "Biar bisa tambah warna teks, tinggal gunakan struktur HTML berikut:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk tambah warna teks dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat tambah warna teks:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Kalau mau bikin daftar belanja gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin daftar belanja.\n",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin daftar belanja?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin daftar belanja:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin daftar belanja itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin daftar belanja:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin daftar belanja apa ya?",
    "jawaban": "Biar bisa bikin daftar belanja, tinggal gunakan struktur HTML berikut:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin daftar belanja dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin daftar belanja:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Kalau mau nampilin video gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk nampilin video.\n",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Apa tag HTML buat nampilin video?",
    "jawaban": "Gunakan tag ini kalau kamu mau nampilin video:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk nampilin video itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat nampilin video:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk nampilin video apa ya?",
    "jawaban": "Biar bisa nampilin video, tinggal gunakan struktur HTML berikut:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk nampilin video dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat nampilin video:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Kalau mau kasih komentar di html gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk kasih komentar di html.\n",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Apa tag HTML buat kasih komentar di html?",
    "jawaban": "Gunakan tag ini kalau kamu mau kasih komentar di html:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Cara paling gampang untuk kasih komentar di html itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat kasih komentar di html:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk kasih komentar di html apa ya?",
    "jawaban": "Biar bisa kasih komentar di html, tinggal gunakan struktur HTML berikut:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk kasih komentar di html dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat kasih komentar di html:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Kalau mau bikin paragraf gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin paragraf.\n",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin paragraf?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin paragraf:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin paragraf itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin paragraf:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin paragraf apa ya?",
    "jawaban": "Biar bisa bikin paragraf, tinggal gunakan struktur HTML berikut:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin paragraf dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin paragraf:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Gimana sih cara bikin form HTML di HTML?",
    "jawaban": "Untuk bikin form HTML, biasanya kita pakai tag seperti ini:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Saya mau bikin form HTML, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk bikin form HTML:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Apa nama tag buat bikin form HTML ya?",
    "jawaban": "Tag <form> dipakai untuk bikin form HTML. Ini contohnya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Contoh simpel bikin form HTML dong!",
    "jawaban": "Cara umum untuk bikin form HTML bisa kamu lihat di bawah ini:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Apa gunanya tag form dalam HTML?",
    "jawaban": "Tenang, bikin bikin form HTML itu gampang kok. Coba lihat contoh ini:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Baru belajar nih, bikin form HTML gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk bikin form HTML?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Kalau mau bikin form HTML, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk bikin form HTML, berikut contohnya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Bikin form html itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk bikin form HTML:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat bikin form HTML gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Gimana sih cara nampilin kotak input teks di HTML?",
    "jawaban": "Untuk nampilin kotak input teks, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Saya mau nampilin kotak input teks, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk nampilin kotak input teks:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Apa nama tag buat nampilin kotak input teks ya?",
    "jawaban": "Tag <input text> dipakai untuk nampilin kotak input teks. Ini contohnya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Contoh simpel nampilin kotak input teks dong!",
    "jawaban": "Cara umum untuk nampilin kotak input teks bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Apa gunanya tag input text dalam HTML?",
    "jawaban": "Tenang, bikin nampilin kotak input teks itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Baru belajar nih, nampilin kotak input teks gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk nampilin kotak input teks?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Kalau mau nampilin kotak input teks, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk nampilin kotak input teks, berikut contohnya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Nampilin kotak input teks itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk nampilin kotak input teks:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat nampilin kotak input teks gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Gimana sih cara nampilin label buat input di HTML?",
    "jawaban": "Untuk nampilin label buat input, biasanya kita pakai tag seperti ini:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Saya mau nampilin label buat input, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk nampilin label buat input:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Apa nama tag buat nampilin label buat input ya?",
    "jawaban": "Tag <label> dipakai untuk nampilin label buat input. Ini contohnya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Contoh simpel nampilin label buat input dong!",
    "jawaban": "Cara umum untuk nampilin label buat input bisa kamu lihat di bawah ini:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Apa gunanya tag label dalam HTML?",
    "jawaban": "Tenang, bikin nampilin label buat input itu gampang kok. Coba lihat contoh ini:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Baru belajar nih, nampilin label buat input gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk nampilin label buat input?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Kalau mau nampilin label buat input, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk nampilin label buat input, berikut contohnya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Nampilin label buat input itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk nampilin label buat input:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat nampilin label buat input gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Gimana sih cara buat tombol submit di HTML?",
    "jawaban": "Untuk buat tombol submit, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Saya mau buat tombol submit, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk buat tombol submit:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Apa nama tag buat buat tombol submit ya?",
    "jawaban": "Tag <submit> dipakai untuk buat tombol submit. Ini contohnya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Contoh simpel buat tombol submit dong!",
    "jawaban": "Cara umum untuk buat tombol submit bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Apa gunanya tag submit dalam HTML?",
    "jawaban": "Tenang, bikin buat tombol submit itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Baru belajar nih, buat tombol submit gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk buat tombol submit?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Kalau mau buat tombol submit, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk buat tombol submit, berikut contohnya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Buat tombol submit itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk buat tombol submit:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat buat tombol submit gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Gimana sih cara bikin tombol reset di HTML?",
    "jawaban": "Untuk bikin tombol reset, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Saya mau bikin tombol reset, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk bikin tombol reset:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Apa nama tag buat bikin tombol reset ya?",
    "jawaban": "Tag <reset> dipakai untuk bikin tombol reset. Ini contohnya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Contoh simpel bikin tombol reset dong!",
    "jawaban": "Cara umum untuk bikin tombol reset bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Apa gunanya tag reset dalam HTML?",
    "jawaban": "Tenang, bikin bikin tombol reset itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Baru belajar nih, bikin tombol reset gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk bikin tombol reset?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Kalau mau bikin tombol reset, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk bikin tombol reset, berikut contohnya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Bikin tombol reset itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk bikin tombol reset:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat bikin tombol reset gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Gimana sih cara pake tombol biasa di HTML?",
    "jawaban": "Untuk pake tombol biasa, biasanya kita pakai tag seperti ini:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Saya mau pake tombol biasa, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk pake tombol biasa:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Apa nama tag buat pake tombol biasa ya?",
    "jawaban": "Tag <button> dipakai untuk pake tombol biasa. Ini contohnya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Contoh simpel pake tombol biasa dong!",
    "jawaban": "Cara umum untuk pake tombol biasa bisa kamu lihat di bawah ini:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Apa gunanya tag button dalam HTML?",
    "jawaban": "Tenang, bikin pake tombol biasa itu gampang kok. Coba lihat contoh ini:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Baru belajar nih, pake tombol biasa gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk pake tombol biasa?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Kalau mau pake tombol biasa, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk pake tombol biasa, berikut contohnya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Pake tombol biasa itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk pake tombol biasa:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat pake tombol biasa gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Gimana sih cara buat kotak centang di HTML?",
    "jawaban": "Untuk buat kotak centang, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Saya mau buat kotak centang, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk buat kotak centang:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Apa nama tag buat buat kotak centang ya?",
    "jawaban": "Tag <checkbox> dipakai untuk buat kotak centang. Ini contohnya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Contoh simpel buat kotak centang dong!",
    "jawaban": "Cara umum untuk buat kotak centang bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Apa gunanya tag checkbox dalam HTML?",
    "jawaban": "Tenang, bikin buat kotak centang itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Baru belajar nih, buat kotak centang gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk buat kotak centang?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Kalau mau buat kotak centang, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk buat kotak centang, berikut contohnya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Buat kotak centang itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk buat kotak centang:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat buat kotak centang gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Gimana sih cara milih warna di HTML?",
    "jawaban": "Untuk milih warna, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Saya mau milih warna, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk milih warna:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Apa nama tag buat milih warna ya?",
    "jawaban": "Tag <color> dipakai untuk milih warna. Ini contohnya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Contoh simpel milih warna dong!",
    "jawaban": "Cara umum untuk milih warna bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Apa gunanya tag color dalam HTML?",
    "jawaban": "Tenang, bikin milih warna itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Baru belajar nih, milih warna gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk milih warna?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Kalau mau milih warna, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk milih warna, berikut contohnya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Milih warna itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk milih warna:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat milih warna gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Gimana sih cara input tanggal di HTML?",
    "jawaban": "Untuk input tanggal, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Saya mau input tanggal, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input tanggal:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input tanggal ya?",
    "jawaban": "Tag <date> dipakai untuk input tanggal. Ini contohnya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Contoh simpel input tanggal dong!",
    "jawaban": "Cara umum untuk input tanggal bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Apa gunanya tag date dalam HTML?",
    "jawaban": "Tenang, bikin input tanggal itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input tanggal gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input tanggal?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Kalau mau input tanggal, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input tanggal, berikut contohnya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Input tanggal itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input tanggal:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input tanggal gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Gimana sih cara input tanggal dan waktu di HTML?",
    "jawaban": "Untuk input tanggal dan waktu, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Saya mau input tanggal dan waktu, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input tanggal dan waktu:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input tanggal dan waktu ya?",
    "jawaban": "Tag <datetime-local> dipakai untuk input tanggal dan waktu. Ini contohnya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Contoh simpel input tanggal dan waktu dong!",
    "jawaban": "Cara umum untuk input tanggal dan waktu bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Apa gunanya tag datetime-local dalam HTML?",
    "jawaban": "Tenang, bikin input tanggal dan waktu itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input tanggal dan waktu gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input tanggal dan waktu?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Kalau mau input tanggal dan waktu, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input tanggal dan waktu, berikut contohnya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Input tanggal dan waktu itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input tanggal dan waktu:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input tanggal dan waktu gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Gimana sih cara input minggu di HTML?",
    "jawaban": "Untuk input minggu, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Saya mau input minggu, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input minggu:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input minggu ya?",
    "jawaban": "Tag <week> dipakai untuk input minggu. Ini contohnya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Contoh simpel input minggu dong!",
    "jawaban": "Cara umum untuk input minggu bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Apa gunanya tag week dalam HTML?",
    "jawaban": "Tenang, bikin input minggu itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input minggu gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input minggu?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Kalau mau input minggu, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input minggu, berikut contohnya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Input minggu itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input minggu:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input minggu gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Gimana sih cara input email di HTML?",
    "jawaban": "Untuk input email, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Saya mau input email, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input email:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input email ya?",
    "jawaban": "Tag <email> dipakai untuk input email. Ini contohnya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Contoh simpel input email dong!",
    "jawaban": "Cara umum untuk input email bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Apa gunanya tag email dalam HTML?",
    "jawaban": "Tenang, bikin input email itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input email gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input email?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Kalau mau input email, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input email, berikut contohnya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Input email itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input email:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input email gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Gimana sih cara upload file di HTML?",
    "jawaban": "Untuk upload file, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Saya mau upload file, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk upload file:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Apa nama tag buat upload file ya?",
    "jawaban": "Tag <file> dipakai untuk upload file. Ini contohnya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Contoh simpel upload file dong!",
    "jawaban": "Cara umum untuk upload file bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Apa gunanya tag file dalam HTML?",
    "jawaban": "Tenang, bikin upload file itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Baru belajar nih, upload file gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk upload file?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Kalau mau upload file, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk upload file, berikut contohnya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Upload file itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk upload file:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat upload file gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Gimana sih cara input tersembunyi di HTML?",
    "jawaban": "Untuk input tersembunyi, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Saya mau input tersembunyi, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input tersembunyi:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input tersembunyi ya?",
    "jawaban": "Tag <hidden> dipakai untuk input tersembunyi. Ini contohnya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Contoh simpel input tersembunyi dong!",
    "jawaban": "Cara umum untuk input tersembunyi bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Apa gunanya tag hidden dalam HTML?",
    "jawaban": "Tenang, bikin input tersembunyi itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input tersembunyi gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input tersembunyi?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Kalau mau input tersembunyi, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input tersembunyi, berikut contohnya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Input tersembunyi itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input tersembunyi:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input tersembunyi gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Gimana sih cara input berupa gambar di HTML?",
    "jawaban": "Untuk input berupa gambar, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Saya mau input berupa gambar, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input berupa gambar:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input berupa gambar ya?",
    "jawaban": "Tag <image> dipakai untuk input berupa gambar. Ini contohnya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Contoh simpel input berupa gambar dong!",
    "jawaban": "Cara umum untuk input berupa gambar bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Apa gunanya tag image dalam HTML?",
    "jawaban": "Tenang, bikin input berupa gambar itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input berupa gambar gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input berupa gambar?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Kalau mau input berupa gambar, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input berupa gambar, berikut contohnya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Input berupa gambar itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input berupa gambar:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input berupa gambar gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Bagaimana cara membuat form login sederhana dengan HTML?",
    "jawaban": "Form login sederhana bisa dibuat menggunakan tag <form> dengan input untuk username dan password.",
    "kode": "<form action=\"login.php\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br>\n  <input type=\"submit\" value=\"Login\">\n</form>"
  },
  {
    "pertanyaan": "Gimana sih cara bikin form login pakai HTML doang?",
    "jawaban": "Tenang, kamu cukup pakai tag form dan input aja. Nih contohnya:",
    "kode": "<form>\n  <input type=\"text\" placeholder=\"Username\"><br>\n  <input type=\"password\" placeholder=\"Password\"><br>\n  <button type=\"submit\">Login</button>\n</form>"
  },
  {
    "pertanyaan": "Apa perbedaan antara ordered list, unordered list, dan description list dalam HTML?",
    "jawaban": "Ordered list menggunakan <ol>, unordered list <ul>, dan description list <dl>. Masing-masing punya fungsi berbeda.",
    "kode": "<ol><li>Satu</li><li>Dua</li></ol>\n<ul><li>Kucing</li><li>Anjing</li></ul>\n<dl><dt>HTML</dt><dd>Bahasa markup untuk web</dd></dl>"
  },
  {
    "pertanyaan": "Kalau mau bikin daftar yang ada nomornya gimana?",
    "jawaban": "Pakai tag <ol>. Kalau yang titik-titik, pakai <ul>. Nih contoh lengkapnya:",
    "kode": "<ol><li>Langkah 1</li><li>Langkah 2</li></ol>\n<ul><li>Item A</li><li>Item B</li></ul>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar halaman web HTML?",
    "jawaban": "Struktur dasar HTML terdiri dari tag <!DOCTYPE>, <html>, <head>, dan <body>.",
    "kode": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Halaman Pertama Saya</title>\n</head>\n<body>\n  <h1>Selamat Datang</h1>\n  <p>Ini halaman web pertama saya.</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, gimana sih bikin web paling dasar pakai HTML?",
    "jawaban": "Kamu bisa mulai dari struktur ini. Simpan sebagai .html dan buka di browser ya!",
    "kode": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Website Saya</title>\n</head>\n<body>\n  <h2>Hello, Dunia!</h2>\n  <p>Belajar HTML itu asik.</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Apa itu HTML?",
    "jawaban": "HTML adalah singkatan dari HyperText Markup Language, yaitu bahasa markah standar untuk membuat halaman web.",
    "kode": null
  },
  {
    "pertanyaan": "HTML itu buat apa sih?",
    "jawaban": "HTML dipakai untuk menyusun struktur halaman web, seperti paragraf, gambar, link, dan lainnya.",
    "kode": null
  },
  {
    "pertanyaan": "Dari mana asal HTML?",
    "jawaban": "HTML pertama kali dibuat oleh Tim Berners-Lee pada tahun 1991 untuk keperluan berbagi dokumen melalui internet.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan HTML pertama kali muncul?",
    "jawaban": "HTML muncul pertama kali pada tahun 1991, dan sejak itu terus berkembang hingga sekarang.",
    "kode": null
  },
  {
    "pertanyaan": "Apa saja versi HTML yang pernah ada?",
    "jawaban": "Versi HTML antara lain: HTML 1.0, 2.0, 3.2, 4.01, XHTML, dan yang terbaru adalah HTML5.",
    "kode": null
  },
  {
    "pertanyaan": "Bedanya HTML sama HTML5 apa ya?",
    "jawaban": "HTML5 adalah versi terbaru yang mendukung elemen semantik, audio, video, dan penyimpanan lokal.",
    "kode": null
  },
  {
    "pertanyaan": "HTML itu bahasa pemrograman bukan sih?",
    "jawaban": "HTML bukan bahasa pemrograman, tapi bahasa markah yang digunakan untuk menyusun struktur konten web.",
    "kode": null
  },
  {
    "pertanyaan": "Saya baru belajar, HTML itu kayak gimana sih?",
    "jawaban": "HTML itu kayak kerangka atau rangka dari sebuah halaman web. Isinya bisa teks, gambar, dan tombol.",
    "kode": null
  },
  {
    "pertanyaan": "Apa pengertian JavaScript?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana penulisan JavaScript secara internal?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Bagaimana penulisan JavaScript secara eksternal?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa itu sintaks dasar JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Bagaimana cara membuat komentar di JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Bagaimana penggunaan fungsi alert di JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Bagaimana penggunaan fungsi prompt di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Bagaimana penggunaan fungsi confirm di JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak output ke console di JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak output menggunakan document.writeln di JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa itu tipe data string dalam JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Apa itu tipe data number dalam JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa itu tipe data boolean dalam JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Apa itu tipe data null dalam JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa itu tipe data undefined dalam JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa itu tipe data object dalam JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa itu tipe data array dalam JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah nilai array berdasarkan indeks?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen ke array menggunakan `push()` dan `unshift()`?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen dari array menggunakan `pop()` dan `shift()`?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menyisipkan atau menghapus elemen di tengah array menggunakan `splice()`?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung jumlah elemen dalam array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa itu array dua dimensi dalam JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },

  {
    "pertanyaan": "Apa itu operator aritmatika dalam JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa itu operator modulus (%) dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Mengapa hasil dari 'a + b' dalam string menjadi tidak sesuai?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Apa itu operator perbandingan dalam JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan antara `==` dan `===` dalam JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apa fungsi operator `!=` dan `!==` dalam JavaScript?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa arti operator `<`, `>`, `<=`, dan `>=` dalam JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa itu operator logika dalam JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi dari operator `&&` dalam JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa fungsi dari operator `||` dalam JavaScript?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa fungsi dari operator `!` dalam JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa itu if dalam JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Kapan menggunakan `else` dalam JavaScript?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa fungsi dari `else if` dalam JavaScript?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa itu switch case dalam JavaScript?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa itu perulangan for dalam JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar sintaks `for` dalam JavaScript?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa itu perulangan while dalam JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `while` untuk membaca input hingga kondisi tertentu?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Apa itu perulangan do while dalam JavaScript?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa itu perintah break dalam JavaScript?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa itu perintah continue dalam JavaScript?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa itu function dalam JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa itu function dengan parameter dalam JavaScript?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa itu function dengan return dalam JavaScript?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa itu arrow function dalam JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa perbedaan var, let, dan const dalam JavaScript?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa itu hoisting dalam JavaScript?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek tipe data suatu variabel?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa itu operator ternary dalam JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa itu template literal dalam JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa itu event listener dalam JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana cara manipulasi elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa itu localStorage dalam JavaScript?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Bagaimana cara menangani error di JavaScript?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa itu callback function dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa itu DOM dalam JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara mengambil elemen HTML dengan `getElementById`?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apa perbedaan antara `getElementById`, `getElementsByClassName`, dan `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah isi teks HTML menggunakan JavaScript?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah style elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Bagaimana cara membuat elemen baru secara dinamis dengan JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa perbedaan antara `==` dan `===` dalam JavaScript?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa perbedaan antara `null` dan `undefined` dalam JavaScript?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `for` daripada `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa itu `this` dalam JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Apa itu callback function dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa itu PHP?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan output di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks dasar PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis komentar dalam PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa itu tipe data string dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Apa itu tipe data integer dan float dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apa saja operator aritmatika dalam PHP?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Apa saja fungsi matematika dasar yang tersedia di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `strlen()` dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `strtolower()` dan `strtoupper()` dalam PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `str_word_count()` dalam PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `str_replace()` dalam PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `str_repeat()` dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti teks dan mengulang hasilnya dalam PHP?",
    "jawaban": "Gabungkan `str_replace()` untuk mengganti teks dan `str_repeat()` untuk mengulang hasilnya.",
    "kode": "<?php\n$name = \"Budi Gaming <br>\";\necho str_repeat(str_replace(\"Budi\", \"Saya\", $name), 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apakah array di PHP bisa menyimpan berbagai tipe data?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen dalam array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan isi array di PHP dengan jelas?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unique()` dalam PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_reverse()` dalam PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `shuffle()` dalam PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `count()` dalam PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `sort()` dan `rsort()` dalam PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_push()` dalam PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unshift()` dalam PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_merge()` dalam PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa itu associative array dalam PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses data dalam associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah nilai dalam associative array di PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa itu array multidimensi dalam PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen dalam array multidimensi di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_keys()` dalam associative array PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_values()` dalam associative array PHP?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa itu looping dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan perulangan `for` di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melakukan perulangan array menggunakan `for` di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat perulangan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `foreach` dalam PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `foreach` untuk associative array di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `while` dalam PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `while` bernilai false dari awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `do while` dalam PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `while` dan kapan `do while` dalam PHP?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu tipe data boolean dalam PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `if else` untuk memvalidasi kondisi dalam PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `if else` untuk menentukan status umur?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menentukan apakah sebuah angka genap atau ganjil dengan `if else` di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `elseif` dalam PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan pernyataan `if` saja dalam PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu pernyataan `if` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` saja dalam PHP?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi operator `==` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `==` dan `===` dalam PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!=` dalam PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `>` dan `<` dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `>=` dan `<=` dalam PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat program PHP untuk menentukan nilai huruf berdasarkan skor ujian?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nama hari berdasarkan angka menggunakan `if` di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu `if` bersarang (nested if) dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` bersarang dalam PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan nilai boolean dalam kondisi `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` bersarang yang menggunakan variabel boolean sebagai kondisi awal?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu `$_GET` dalam PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa itu `$_POST` dalam PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara metode GET dan POST dalam pengiriman form di PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana contoh form HTML yang mengirim data dengan metode POST ke PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa itu operator logika dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu ternary operator dalam PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat function dengan parameter dan return dalam PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan include dan require dalam PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melakukan validasi form dengan `isset()` dalam PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat function dengan parameter dalam PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu return dalam function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan default parameter dalam PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bisakah satu function memanggil function lain dalam PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa itu arrow function dalam PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu anonymous function dalam PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu fungsi rekursif dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "bapak Nusi",
    "jawaban": "Bapaknya fadliii",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  }
]
