[
  {
    "pertanyaan": "Apa itu JavaScript dalam pengembangan web?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Jelaskan pengertian JavaScript!",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Untuk apa JavaScript digunakan?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi utama dari JavaScript?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa JavaScript penting dalam web development?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa peran JavaScript di dalam website?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kegunaan JavaScript di browser?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana JavaScript bekerja di sebuah website?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Sebutkan definisi JavaScript!",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan JavaScript dengan HTML?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "JavaScript itu termasuk bahasa pemrograman apa?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "JavaScript digunakan untuk apa saja di halaman web?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan JavaScript?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana peran JavaScript dalam website modern?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa JavaScript sering digunakan oleh developer web?",
    "jawaban": "JavaScript adalah bahasa pemrograman yang berjalan di sisi klien (browser) dan digunakan untuk membuat halaman web menjadi interaktif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menulis JavaScript secara internal di HTML?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Apa itu penulisan JavaScript internal?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Contoh penulisan JavaScript internal itu seperti apa?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Dimana menulis JavaScript secara internal di file HTML?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Bagaimana format menulis JavaScript langsung di HTML?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Bagaimana struktur JavaScript internal pada HTML?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Di bagian mana JavaScript internal ditulis dalam HTML?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Apa ciri penulisan JavaScript internal?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Bagaimana menyisipkan JavaScript langsung ke file HTML?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Dimana meletakkan kode JavaScript internal di HTML?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Tuliskan cara menulis JavaScript internal di HTML!",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Apa sintaks dasar JavaScript internal?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Bagaimana membuat alert menggunakan JavaScript internal?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan internal script dalam JavaScript?",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Tuliskan contoh JavaScript internal yang benar!",
    "jawaban": "Penulisan JavaScript secara internal dilakukan dengan menyisipkan kode JavaScript di dalam tag <script> di dalam file HTML.",
    "kode": "<script>\n  alert('Ini adalah JavaScript internal');\n</script>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis JavaScript secara eksternal?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa itu penulisan JavaScript eksternal?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Bagaimana format JavaScript eksternal di HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Tuliskan cara menggunakan JavaScript eksternal!",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa sintaks untuk memanggil file JavaScript eksternal?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Bagaimana menyambungkan file .js ke HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Bagaimana menautkan JavaScript eksternal di HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa fungsi tag script dengan atribut src?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Bagaimana menyisipkan file JavaScript dari luar ke HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa cara pemanggilan file eksternal JavaScript?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Di mana menempatkan JavaScript eksternal dalam HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan JavaScript eksternal?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa contoh penulisan JavaScript eksternal di HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Bagaimana cara menghubungkan file JavaScript eksternal ke HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa cara terbaik menambahkan JavaScript eksternal di HTML?",
    "jawaban": "Penulisan JavaScript secara eksternal dilakukan dengan memisahkan file JavaScript (.js) dan memanggilnya di HTML menggunakan tag <script src='...'>.",
    "kode": "<script src=\"script.js\"></script>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan sintaks dasar dalam JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa saja elemen dasar dalam sintaks JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Sebutkan komponen sintaks dasar JavaScript!",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa saja yang termasuk dalam sintaks dasar JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar dari JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Jelaskan sintaks dasar JavaScript!",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa dasar penulisan kode JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Elemen dasar apa yang digunakan dalam JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa sintaks awal yang harus dipahami dalam JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Bagaimana contoh sintaks dasar JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa hal pertama yang harus dipelajari dari sintaks JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Sebutkan dasar-dasar penulisan kode dalam JavaScript!",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa perintah dasar yang sering digunakan dalam JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa saja bagian penting dari sintaks dasar JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Apa struktur paling dasar dalam JavaScript?",
    "jawaban": "Sintaks dasar JavaScript mencakup variabel, operator, dan perintah seperti alert, prompt, dan fungsi.",
    "kode": "let nama = 'Rizkon';\nalert('Halo ' + nama);"
  },
  {
    "pertanyaan": "Bagaimana menulis komentar di JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Apa sintaks komentar di JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Tunjukkan cara membuat komentar di JavaScript!",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Apa tanda komentar satu baris di JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Bagaimana format komentar di JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Komentar dalam JavaScript ditulis dengan apa?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Apa cara menambahkan komentar pada kode JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Contoh komentar dalam JavaScript seperti apa?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Apa bedanya komentar satu baris dan banyak baris di JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Bagaimana cara memberi catatan pada kode JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Apa fungsi komentar di JavaScript dan cara menulisnya?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Kapan menggunakan komentar di JavaScript dan bagaimana menulisnya?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Sebutkan dua jenis komentar dalam JavaScript!",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Apa simbol untuk membuat komentar di JavaScript?",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Tuliskan contoh komentar satu baris dan banyak baris di JavaScript!",
    "jawaban": "Komentar satu baris menggunakan `//`, sedangkan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "// Ini komentar satu baris\n/* Ini komentar\n   banyak baris */"
  },
  {
    "pertanyaan": "Apa fungsi dari alert di JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Untuk apa fungsi alert digunakan dalam JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Apa kegunaan alert() di JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Apa tujuan penggunaan alert() dalam JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Bagaimana cara kerja alert() di JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh perintah alert di JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Jelaskan penggunaan alert di JavaScript!",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Apa output dari alert() dalam JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Bagaimana menampilkan notifikasi di browser dengan JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Apa itu alert() dalam JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Bagaimana membuat popup sederhana di JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan fungsi alert pada JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Apa fungsi alert untuk user interface di JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Alert digunakan untuk apa dalam JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Contoh penggunaan fungsi alert dalam JavaScript?",
    "jawaban": "Fungsi `alert()` digunakan untuk menampilkan kotak dialog pemberitahuan kepada pengguna.",
    "kode": "alert(\"halo!, saya sedang belajar js dasar\");"
  },
  {
    "pertanyaan": "Apa fungsi dari prompt di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan prompt() dalam JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Apa kegunaan prompt di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Jelaskan fungsi prompt dalam JavaScript!",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Untuk apa method prompt digunakan di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Apa itu prompt dalam pemrograman JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Bagaimana prompt bekerja pada JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Apa hasil dari fungsi prompt di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Apa perbedaan alert dan prompt dalam JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Bagaimana menampilkan kotak input dengan prompt di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Berikan contoh penggunaan prompt dalam JavaScript!",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Bagaimana menanyakan nama pengguna dengan JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Metode apa yang digunakan untuk meminta input di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Bagaimana cara menangkap input dari user di JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Apa manfaat dari fungsi prompt pada JavaScript?",
    "jawaban": "`prompt()` digunakan untuk meminta input dari pengguna melalui kotak dialog.",
    "kode": "let nama = prompt(\"Masukan nama anda:\");\nalert(\"Halo, \" + nama);"
  },
  {
    "pertanyaan": "Apa fungsi confirm dalam JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan confirm di JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Apa itu fungsi confirm dalam JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Untuk apa confirm digunakan dalam JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Jelaskan penggunaan fungsi confirm di JavaScript!",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Bagaimana confirm digunakan untuk meminta persetujuan pengguna?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Apa kegunaan confirm dalam browser?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Bagaimana sintaks confirm dalam JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari fungsi confirm di JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Contoh penggunaan confirm di JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Bagaimana menampilkan dialog konfirmasi di JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Apa yang dilakukan confirm() pada JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menangani hasil dari confirm di JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Apa perbedaan antara alert dan confirm di JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Kapan menggunakan confirm() dalam alur program JavaScript?",
    "jawaban": "`confirm()` digunakan untuk meminta konfirmasi dari pengguna (OK atau Cancel), biasanya dalam bentuk pertanyaan ya/tidak.",
    "kode": "let yakin = confirm(\"Apakah anda yakin ingin keluar?\");\nif (yakin) {\n  alert(\"Anda memilih keluar\");\n} else {\n  alert(\"Anda memilih tinggal disini\");\n}"
  },
  {
    "pertanyaan": "Bagaimana menampilkan output ke console di JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Apa fungsi console.log() di JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan console.log dalam JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Untuk apa console.log() digunakan?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Apa tujuan penggunaan console.log di JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Jelaskan penggunaan console.log di JavaScript!",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Bagaimana menampilkan log ke konsol di JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Apa sintaks untuk mencetak ke console di JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Bagaimana menampilkan pesan ke console?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Apa peran console.log dalam debugging JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Contoh penggunaan console.log() di JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Bagaimana melihat hasil output program JavaScript di console?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Apa manfaat console.log bagi developer JavaScript?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Kode apa yang digunakan untuk mencetak teks ke console?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Bagaimana men-debug JavaScript menggunakan console?",
    "jawaban": "Gunakan `console.log()` untuk menampilkan informasi ke jendela console, berguna untuk debugging.",
    "kode": "console.log(\"Ini output di console\");"
  },
  {
    "pertanyaan": "Apa fungsi dari document.writeln di JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan document.writeln di JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa kegunaan document.writeln dalam JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Bagaimana mencetak teks ke halaman web dengan JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa itu document.writeln di JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Bagaimana menampilkan output ke HTML menggunakan JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa perbedaan document.writeln dan console.log?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Kode apa yang digunakan untuk menulis teks ke halaman HTML?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Bagaimana mencetak teks di browser melalui JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Contoh penggunaan document.writeln dalam JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa hasil dari document.writeln() di JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Bagaimana menampilkan pesan langsung ke halaman web?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa peran document.writeln di dalam kode JavaScript?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Bagaimana menulis teks dari JavaScript ke dokumen HTML?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa kegunaan document.writeln saat membuat halaman web dinamis?",
    "jawaban": "`document.writeln()` digunakan untuk menulis output langsung ke dokumen HTML.",
    "kode": "document.writeln(\"Selamat datang di JavaScript!\");"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan tipe data string di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Apa itu string dalam JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Jelaskan tipe data string pada JavaScript!",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Tipe data apa yang digunakan untuk menyimpan teks di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan teks di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Contoh penggunaan tipe data string dalam JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Apa kegunaan tipe data string di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Kapan kita menggunakan string di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Apa karakteristik tipe data string pada JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Bagaimana menyimpan kata atau kalimat dalam JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "String termasuk tipe data apa di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Apa perbedaan antara string dan number di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Apa jenis data untuk menyimpan kalimat di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Bagaimana mendeklarasikan variabel string di JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "String bisa berisi apa saja dalam JavaScript?",
    "jawaban": "Tipe data string digunakan untuk menyimpan teks, yang bisa berisi huruf, angka, dan simbol.",
    "kode": "let nama = \"budi\";\nlet angka = \"200\";\ndocument.writeln(nama + \" \" + angka);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan tipe data number di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa itu number dalam JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Jelaskan tipe data number pada JavaScript!",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Tipe data apa yang digunakan untuk angka di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan angka di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Contoh penggunaan tipe data number dalam JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa kegunaan tipe data number di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa jenis data untuk angka di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa perbedaan number dan string di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Bagaimana menyimpan angka desimal dalam JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Number termasuk tipe data apa di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa karakteristik dari tipe data number di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa saja yang bisa disimpan dalam tipe number di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan angka di JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Kapan kita menggunakan tipe number dalam JavaScript?",
    "jawaban": "Tipe data number digunakan untuk menyimpan nilai berupa angka, baik bilangan bulat maupun desimal.",
    "kode": "let umur = 25;\nlet angka1 = 26;\ndocument.writeln(umur + \" \" + angka1);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan tipe data boolean di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Apa itu boolean dalam JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Jelaskan tipe data boolean pada JavaScript!",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Tipe data apa yang hanya bernilai true atau false di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Bagaimana cara menyatakan nilai benar atau salah di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Contoh penggunaan tipe data boolean dalam JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Apa kegunaan boolean di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Kapan kita menggunakan tipe data boolean dalam JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Apa karakteristik dari tipe data boolean di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Bagaimana boolean digunakan dalam logika program JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Boolean termasuk tipe data apa dalam JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Nilai apa saja yang bisa disimpan dalam tipe boolean di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Bagaimana mendeklarasikan variabel boolean di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Boolean dalam JavaScript digunakan untuk apa?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Bagaimana contoh nilai true dan false di JavaScript?",
    "jawaban": "Tipe data boolean hanya memiliki dua nilai: `true` dan `false`, dan sering digunakan untuk percabangan atau logika keputusan.",
    "kode": "let kamuBisa = true;\nlet kamuNyerah = false;\nconsole.log(kamuBisa);\nconsole.log(kamuNyerah);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan tipe data null di JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa itu nilai null dalam JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Jelaskan arti null dalam JavaScript!",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa peran null dalam JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Kapan kita menggunakan null di JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa fungsi nilai null dalam JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa bedanya null dan undefined di JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan null dalam JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa hasil dari document.writeln(null) di JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Bagaimana menyatakan variabel kosong di JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa maksud dari null dalam pemrograman JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Bagaimana mendeklarasikan variabel null di JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Tipe data null menyatakan apa dalam JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Nilai apa yang digunakan untuk menyatakan kosong secara sengaja?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa arti dari nilai null ketika digunakan dalam variabel JavaScript?",
    "jawaban": "Tipe data null adalah nilai khusus yang berarti 'kosong' secara sengaja.",
    "kode": "let nama = null;\ndocument.writeln(null);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan tipe data undefined di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa arti undefined dalam JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Jelaskan tipe data undefined pada JavaScript!",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa maksud dari nilai undefined dalam JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa perbedaan null dan undefined di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa yang terjadi jika variabel belum diberi nilai di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Bagaimana JavaScript menangani variabel tanpa nilai awal?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Contoh penggunaan tipe data undefined dalam JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa nilai default dari variabel yang belum diisi di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa itu nilai undefined dalam pemrograman JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Bagaimana cara mendeteksi variabel yang belum memiliki nilai di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa hasil dari mencetak variabel yang belum diisi nilainya?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa tipe data dari variabel kosong yang belum diberi nilai di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Bagaimana status variabel baru yang belum diberi nilai di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Kenapa variabel bisa bernilai undefined di JavaScript?",
    "jawaban": "Tipe data undefined menunjukkan bahwa variabel sudah dideklarasikan tetapi belum diberi nilai.",
    "kode": "let pekerjaan;\ndocument.writeln(pekerjaan);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan tipe data object di JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa itu object dalam JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Jelaskan tipe data object dalam JavaScript!",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Untuk apa tipe data object digunakan dalam JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Bagaimana struktur object di JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa karakteristik tipe data object di JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan data kompleks dalam JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa itu pasangan key dan value dalam JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Contoh object yang bersarang dalam JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa itu nested object di JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nilai dari properti dalam object JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa manfaat object dalam pengelolaan data JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Kapan kita menggunakan object dalam JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa perbedaan array dan object di JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Bagaimana mendefinisikan object di JavaScript?",
    "jawaban": "Tipe data object menyimpan data dalam bentuk pasangan key dan value, serta bisa bersarang dengan objek lain.",
    "kode": "let mahasiswa = {\n  nama: \"Budi\",\n  nim: 20220222212,\n  jurusan: \"Teknik Informatika\",\n  email: \"budi@gmail.com\",\n  hobi: {\n    hobi1: \"memancing\",\n    hobi2: \"reading\",\n    hobi3: \"running\",\n    hobi4: \"futsal\"\n  }\n};\nconsole.log(mahasiswa);\ndocument.writeln(mahasiswa.hobi.hobi4);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan tipe data array di JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa itu array dalam JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Jelaskan tipe data array pada JavaScript!",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa fungsi array di JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa kegunaan array dalam pemrograman JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan banyak nilai dalam satu variabel di JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa struktur data array digunakan untuk apa dalam JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen array di JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Contoh penggunaan array dalam JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa hasil dari buah[2] pada array di JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menyimpan daftar nama dalam JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa itu indeks dalam array JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa kelebihan penggunaan array di JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana mendeklarasikan array dalam JavaScript?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa saja isi dalam array dan bagaimana cara memanggilnya?",
    "jawaban": "Array adalah struktur data yang menyimpan sekumpulan nilai dalam satu variabel, dan setiap elemen memiliki indeks yang dimulai dari 0.",
    "kode": "let buah = [\"apel\", \"jeruk\", \"mangga\"];\ndocument.writeln(buah[2]);\ndocument.writeln(\"<br>\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti elemen array dengan indeks tertentu di JavaScript?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara update nilai array berdasarkan indeks di JavaScript?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa cara untuk mengubah isi array di JavaScript pada indeks tertentu?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana memodifikasi nilai array pada posisi tertentu di JavaScript?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa cara mengganti isi array pada index ke-2 di JavaScript?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana mengganti elemen array ke-n di JavaScript?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana mengubah elemen array dengan indeks tertentu?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Cara mengganti data array di index tertentu?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menimpa nilai lama di array berdasarkan indeks?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa metode untuk mengganti nilai di dalam array pada index tertentu?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bisakah kita mengubah isi array di JavaScript berdasarkan indeks? Bagaimana caranya?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara edit nilai array di posisi tertentu?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana mengubah elemen ketiga dalam array di JavaScript?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa cara cepat mengganti nilai pada array?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana mengubah item array yang ada di index ke-2?",
    "jawaban": "Kita bisa mengakses elemen array berdasarkan indeksnya dan mengubah nilainya langsung.",
    "kode": "buah[2] = \"pisang\";\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menambahkan elemen ke array di JavaScript dengan push dan unshift?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa fungsi dari push() dan unshift() dalam array JavaScript?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen di awal dan akhir array JavaScript?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa perbedaan antara push dan unshift dalam array?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan metode push dan unshift pada array?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Metode apa yang digunakan untuk menambah elemen array di JavaScript?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa kegunaan push() dan unshift() pada array?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa cara menambah item di awal dan akhir array di JavaScript?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Jelaskan cara kerja push dan unshift di array JavaScript!",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa hasil dari push dan unshift terhadap array?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menambahkan elemen baru ke dalam array dengan push/unshift?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita menggunakan push dan unshift dalam array?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan push atau unshift di array JavaScript?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa peran push() dan unshift() dalam manipulasi array?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menambah data ke depan dan belakang array dengan JavaScript?",
    "jawaban": "`push()` menambahkan elemen di akhir array, sedangkan `unshift()` menambahkan elemen di awal array.",
    "kode": "buah.push(\"nanas\");\ndocument.writeln(buah);\nbuah.unshift(\"manggis\");\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menghapus elemen array dengan metode pop dan shift di JavaScript?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa fungsi pop() dan shift() dalam array JavaScript?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen pertama dan terakhir dari array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa perbedaan pop() dan shift() pada array di JavaScript?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menggunakan fungsi pop dan shift di JavaScript?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Metode apa yang digunakan untuk menghapus elemen dari array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa kegunaan pop() dan shift() dalam manipulasi array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa hasil dari penggunaan pop dan shift pada array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menghapus elemen array dari posisi awal dan akhir?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa efek dari pop dan shift terhadap isi array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menghapus item terakhir dan pertama array dengan JavaScript?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa metode yang menghapus elemen awal dan akhir array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Jelaskan fungsi pop dan shift dalam array JavaScript!",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Kapan kita menggunakan pop dan shift pada array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen pada ujung array?",
    "jawaban": "`pop()` menghapus elemen terakhir dari array, sedangkan `shift()` menghapus elemen pertama.",
    "kode": "buah.pop();\ndocument.writeln(buah);\nbuah.shift();\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan splice untuk menghapus dan menambahkan elemen di array?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa fungsi metode splice dalam array JavaScript?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menyisipkan elemen di tengah array dengan splice()?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa kegunaan splice() di array JavaScript?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Jelaskan cara kerja splice() untuk manipulasi array!",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh splice(index, count) pada array?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen dari posisi tertentu dengan splice()?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menyisipkan data ke tengah array menggunakan splice?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa hasil dari buah.splice(1, 1) dan buah.splice(1, 0, \"jeruk\")?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana cara menyisipkan sekaligus menghapus elemen array dengan satu metode?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Metode apa yang bisa menyisipkan dan menghapus elemen array sekaligus?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa kelebihan splice() dibanding pop() dan shift() dalam array?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Apa maksud dari parameter dalam fungsi splice?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana menggunakan splice untuk edit elemen di posisi tengah array?",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Jelaskan penggunaan splice untuk manipulasi array secara fleksibel!",
    "jawaban": "`splice(index, jumlah)` digunakan untuk menghapus elemen mulai dari index tertentu. Kita juga bisa menyisipkan elemen baru dengan menambahkan argumen tambahan.",
    "kode": "buah.splice(1, 1); // hapus elemen index 1\ndocument.writeln(buah);\nbuah.splice(1, 0, \"jeruk\"); // sisipkan \"jeruk\" di index 1\ndocument.writeln(buah);"
  },
  {
    "pertanyaan": "Bagaimana mengetahui jumlah elemen dalam array di JavaScript?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa fungsi dari properti .length pada array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung panjang array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa cara termudah untuk mengetahui jumlah item dalam array JavaScript?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan jumlah data di array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menghitung isi array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Bagaimana mengecek berapa banyak data dalam array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa output dari Nama.length jika array memiliki 4 elemen?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh properti length pada array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Berapa panjang array Nama jika berisi empat nama?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Bagaimana menghitung jumlah item dalam variabel array?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa cara melihat jumlah elemen dalam array menggunakan JavaScript?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa hasil dari properti length pada array dengan 4 elemen?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Berapa hasil dari Nama.length jika array berisi empat string?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa properti untuk menghitung jumlah elemen array di JavaScript?",
    "jawaban": "Gunakan properti `.length` untuk mengetahui panjang array atau jumlah elemennya.",
    "kode": "let Nama = [\"budi\", \"candra\", \"doni\", \"april\"];\ndocument.writeln(Nama.length);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan array dua dimensi di JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Bagaimana struktur array dua dimensi dalam JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Apa fungsi dari array dua dimensi di JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array dua dimensi di JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Apa itu matriks dalam JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses nilai dalam array dua dimensi?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Contoh array dua dimensi dalam JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Apa keuntungan menggunakan array dua dimensi?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Bagaimana mendeklarasikan array matriks di JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Bagaimana struktur data array bersarang dalam JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Apa hasil dari matrix[2][2] dalam array dua dimensi?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Apa arti array bertingkat dalam JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Bagaimana cara membuat tabel data menggunakan array di JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Apa perbedaan array satu dimensi dan dua dimensi?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan isi array 2D di JavaScript?",
    "jawaban": "Array dua dimensi adalah array yang berisi array lain sebagai elemennya, membentuk struktur seperti matriks.",
    "kode": "let matrix = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9]\n];\ndocument.writeln(matrix[0][2]);\ndocument.writeln(matrix[2]);\ndocument.writeln(matrix[2][2]);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator aritmatika di JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa itu operator matematika dalam JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Sebutkan operator aritmatika dalam JavaScript!",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Untuk apa operator aritmatika digunakan dalam JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa saja jenis operator aritmatika di JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan operator +, -, *, / dalam JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa hasil dari operasi a + b jika a = 10 dan b = 20?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa arti operator modulus (%) dalam JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Berikan contoh penggunaan operator aritmatika dalam JavaScript!",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Bagaimana melakukan operasi matematika di JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa fungsi operator + dalam JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung penjumlahan dua angka di JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa peran operator aritmatika dalam coding JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Bagaimana menggunakan operator aritmatika untuk logika perhitungan?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa perbedaan antara operator * dan / di JavaScript?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika seperti penjumlahan, pengurangan, perkalian, pembagian, dan modulus (sisa bagi).",
    "kode": "// +, *, -, /, %\nlet a = 10;\nlet b = 20;\nconsole.log(a + b);"
  },
  {
    "pertanyaan": "Apa fungsi operator modulus dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Untuk apa operator % digunakan dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Apa arti dari simbol % dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Apa yang dihasilkan oleh operator modulus (%)?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung sisa bagi di JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Apa hasil dari 7 % 3 di JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Contoh penggunaan operator modulus dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan operator % untuk mencari sisa pembagian?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Apa itu operasi modulus dalam pemrograman JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Bagaimana operator modulus bekerja dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Apa perbedaan antara operator / dan % di JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Bagaimana menggunakan operator modulus untuk logika genap/ganjil?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Kenapa kita menggunakan operator % dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Apa yang dimaksud operator sisa bagi dalam JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui apakah angka genap dengan % di JavaScript?",
    "jawaban": "Operator modulus (%) digunakan untuk menghitung sisa bagi dari pembagian dua bilangan. Misalnya, 5 % 2 menghasilkan 1.",
    "kode": "let c = 100;\nlet d = 10;\ndocument.writeln(\"Modulo dari 100 % 10 yaitu: \" + (c % d));"
  },
  {
    "pertanyaan": "Mengapa penjumlahan string dan angka bisa menghasilkan hasil yang salah di JavaScript?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Apa yang menyebabkan hasil dari '10 + 20' di string menjadi 1020?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Kenapa JavaScript menggabungkan angka dan string sebagai teks saat dijumlahkan?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Apa yang terjadi jika menggunakan + antara string dan angka di JavaScript?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Bagaimana cara menjumlahkan angka dalam string agar hasilnya benar di JavaScript?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Mengapa a + b dalam string bisa jadi gabungan, bukan hasil penjumlahan?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Bagaimana menjumlahkan angka di dalam string dengan benar di JavaScript?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Kenapa hasil a + b jadi gabungan string, bukan angka?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Apa kesalahan umum saat menjumlahkan angka dan string di JavaScript?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Bagaimana mencegah hasil 1020 ketika menampilkan penjumlahan angka dalam string?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Apa cara yang tepat untuk mencetak hasil penjumlahan angka dalam string?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Mengapa a + b dalam kalimat string menghasilkan concatenation?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Apa yang menyebabkan output angka salah saat dicetak dalam string?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Bagaimana menampilkan hasil penjumlahan angka di dalam kalimat string secara benar?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Kenapa perlu tanda kurung saat menjumlahkan angka di dalam string?",
    "jawaban": "Jika menggunakan tanda `+` untuk menggabungkan string dan angka tanpa tanda kurung, maka JavaScript akan menggabungkan sebagai string. Untuk menjumlahkan secara benar, gunakan tanda kurung.",
    "kode": "let a = 10;\nlet b = 20;\ndocument.writeln(\"Penjumlahan dari 10 + 20 yaitu: \" + (a + b));"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator perbandingan di JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi operator perbandingan dalam JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa kita menggunakan operator perbandingan di JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hasil dari operator perbandingan dalam JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh operator perbandingan di JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu operator == dan === dalam JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Sebutkan contoh operator perbandingan di JavaScript!",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa beda operator == dan != di JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu nilai boolean dalam konteks operator perbandingan?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa tujuan dari operator perbandingan?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan kita menggunakan operator perbandingan dalam JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh tanda < dan > dalam JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hasil dari 5 > 3 dalam JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah operator === termasuk operator perbandingan?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa jenis operator yang mengembalikan true atau false di JavaScript?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai, dan hasilnya akan berupa boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa bedanya operator `==` dan `===` di JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Mengapa hasil `==` dan `===` bisa berbeda di JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `===` daripada `==` di JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apa peran operator `===` dibanding `==`?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Mengapa `==` menghasilkan true tapi `===` menghasilkan false?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apa arti dari `==` dan `===` dalam JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Perbedaan logika antara `==` dan `===` di JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apa yang terjadi jika membandingkan string dan number dengan `==` dan `===`?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Bagaimana membandingkan nilai dan tipe data sekaligus di JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apa cara membandingkan dua nilai agar hasilnya lebih akurat di JavaScript?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan dua nilai dengan tipe data yang sama?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apakah `==` dan `===` sama dalam hasil perbandingan?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Kenapa hasil a == b bisa true walau berbeda tipe data?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apa rekomendasi penggunaan `==` atau `===` dalam JavaScript modern?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan dua variabel agar hasilnya tidak ambigu?",
    "jawaban": "`==` membandingkan nilai tanpa memperhatikan tipe data, sedangkan `===` membandingkan nilai sekaligus tipe datanya.",
    "kode": "let a = \"10\";\nlet b = 10;\ndocument.writeln(a == b); // true\ndocument.writeln(\"<br>\");\ndocument.writeln(a === b); // false"
  },
  {
    "pertanyaan": "Apa beda operator `!=` dan `!==` dalam JavaScript?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa arti dari operator tidak sama `!=` dan `!==` di JavaScript?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Mengapa `!=` dan `!==` bisa menghasilkan hasil yang berbeda?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh operator `!==` dalam perbandingan JavaScript?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa perbedaan antara perbandingan tidak sama longgar dan ketat di JavaScript?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Bagaimana perbedaan hasil antara `a != b` dan `a !== b`?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa hasil dari perbandingan '5' != 5 dan '5' !== 5?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa makna dari operator perbandingan `!=` dan `!==`?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Mengapa '5' != 5 adalah false, tapi '5' !== 5 adalah true?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa cara membandingkan ketidaksamaan nilai dan tipe secara ketat?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa fungsi dari operator strict not equal (`!==`) di JavaScript?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa perbedaan logika antara != dan !== dalam perbandingan?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Kapan harus menggunakan !== daripada != di JavaScript?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Mengapa perbandingan menggunakan !== lebih direkomendasikan?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan ketidaksamaan dengan mempertimbangkan tipe data?",
    "jawaban": "`!=` membandingkan apakah nilai tidak sama, tanpa memperhatikan tipe data. `!==` membandingkan nilai dan tipe datanya sekaligus.",
    "kode": "let a = \"5\";\nlet b = 5;\ndocument.writeln(a != b); // false\ndocument.writeln(a !== b); // true"
  },
  {
    "pertanyaan": "Apa makna dari operator `<`, `>`, `<=`, dan `>=` di JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa arti simbol perbandingan `<`, `>`, `<=`, dan `>=` dalam JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Untuk apa operator `<`, `>`, `<=`, dan `>=` digunakan di JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Jelaskan fungsi dari `<`, `>`, `<=`, dan `>=` dalam JavaScript!",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa hasil dari operasi 3 < 5 dan 5 >= 5 di JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan dua angka di JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa kegunaan dari operator `<`, `>`, `<=`, dan `>=`?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Sebutkan fungsi dari operator pembanding dalam JavaScript seperti `<`, `>`!",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator kurang dari dan lebih dari?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa arti dari `<=` dan `>=` dalam JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Bagaimana membaca operator perbandingan di JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa hasil dari 5 <= 5 dan 5 > 3 di JavaScript?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `<`, `>`, `<=`, dan `>=` dalam pemrograman?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa makna perbandingan `3 < 5` dan `5 >= 5`?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Bagaimana memahami operator `<`, `>`, `<=`, `>=` dengan benar?",
    "jawaban": "`<` berarti kurang dari, `>` lebih dari, `<=` kurang dari atau sama dengan, dan `>=` lebih dari atau sama dengan.",
    "kode": "console.log(3 < 5); // true\nconsole.log(5 >= 5); // true"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator logika di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Jelaskan pengertian operator logika dalam JavaScript!",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu logical operator di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa kita menggunakan operator logika di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi utama dari operator logika dalam JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dihasilkan oleh operator logika di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Sebutkan kegunaan operator logika dalam JavaScript!",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa hasil dari ekspresi logika dalam JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa output operator logika AND, OR, NOT di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator logika di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa hasil akhir dari operator logika?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa saja jenis operator logika yang ada di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Kapan kita menggunakan operator logika di dalam program JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa peran operator logika dalam pengambilan keputusan?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa hubungan operator logika dengan ekspresi boolean di JavaScript?",
    "jawaban": "Operator logika digunakan untuk menggabungkan dua atau lebih ekspresi logika dan menghasilkan nilai boolean (`true` atau `false`).",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator `&&` dalam JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator `&&` di JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Kapan hasil dari `&&` akan bernilai true?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa hasil dari ekspresi logika dengan `&&` jika salah satu bernilai false?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Mengapa `&&` menghasilkan false jika salah satu kondisi tidak terpenuhi?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa fungsi dari simbol `&&` dalam logika JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa arti operator AND (`&&`) dalam JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan operator `&&` dalam JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa syarat agar hasil dari `&&` bernilai true di JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa efek dari operator logika `&&` jika kondisi pertama true dan kedua false?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apakah `&&` mengembalikan boolean di JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Bagaimana `&&` bekerja dengan dua ekspresi kondisi?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa hasil dari x > 0 && y < 0 jika x = 5 dan y = 10?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa itu operator logika `&&` dan bagaimana cara menggunakannya?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Kapan operator `&&` menghasilkan nilai false di JavaScript?",
    "jawaban": "`&&` (AND) menghasilkan `true` jika kedua kondisi bernilai `true`, dan `false` jika salah satu atau keduanya `false`.",
    "kode": "let x = 5;\nlet y = 10;\nconsole.log(x > 0 && y > 0); // true\nconsole.log(x > 0 && y < 0); // false"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator `||` dalam JavaScript?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator `||` di JavaScript?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Kapan operator `||` bernilai true di JavaScript?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa hasil dari operator `||` jika salah satu kondisi bernilai true?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Untuk apa operator logika `||` digunakan?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa arti simbol `||` dalam JavaScript?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa fungsi dari operator logika OR (`||`)?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa hasil dari ekspresi x > 0 || y < 0?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa perbedaan hasil antara operator `&&` dan `||`?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh operator OR `||` jika satu kondisi benar?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Bagaimana hasil `||` jika kedua kondisi adalah false?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa syarat agar hasil operator `||` menjadi false?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Bagaimana operator `||` digunakan dalam percabangan logika?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa peran operator `||` dalam ekspresi logika JavaScript?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Mengapa operator `||` berguna dalam pengambilan keputusan?",
    "jawaban": "`||` (OR) menghasilkan `true` jika salah satu dari kondisi bernilai `true`, dan hanya `false` jika keduanya `false`.",
    "kode": "console.log(x > 0 || y < 0); // true"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator `!` di JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa fungsi dari tanda seru `!` dalam JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator `!` dalam ekspresi logika?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa hasil dari `!(x > 0)` jika x bernilai positif?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh operator logika NOT `!`?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa arti operator NOT dalam JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa kegunaan dari operator `!` di JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Bagaimana operator `!` mengubah hasil boolean?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa hasil dari operator `!true` dan `!false`?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Bagaimana cara membalik kondisi boolean di JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa gunanya operator logika NOT `!` dalam percabangan?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa efek dari menggunakan `!` sebelum ekspresi logika?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa hasil dari `!false` dalam JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa peran operator `!` dalam pengambilan keputusan logis?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Kapan kita perlu menggunakan operator `!` di JavaScript?",
    "jawaban": "`!` (NOT) membalik nilai boolean. Jika ekspresi bernilai `true`, maka hasilnya `false`, dan sebaliknya.",
    "kode": "console.log(!(x > 0)); // false"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan pernyataan `if` di JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa fungsi `if` dalam JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `if` dalam JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `if` di JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa kegunaan struktur `if` di JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa tujuan dari `if` statement dalam JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari blok `if` jika kondisi terpenuhi?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Jelaskan bagaimana `if` digunakan untuk pengambilan keputusan di JavaScript!",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa syarat agar perintah dalam `if` dijalankan?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan if dalam JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa hasil output dari `if (nilai > 75)` jika nilai = 80?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa itu blok `if` dalam bahasa pemrograman JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Kapan kondisi dalam `if` dianggap benar di JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa peran if dalam pengambilan keputusan di program?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan if dalam logika pemrograman JavaScript?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode jika kondisi yang diberikan bernilai `true`.",
    "kode": "let nilai = 80;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus!\");\n}"
  },
  {
    "pertanyaan": "Apa kegunaan `else` dalam JavaScript?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Kapan blok `else` dijalankan dalam JavaScript?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa fungsi dari struktur `else` pada pernyataan `if`?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa yang dilakukan `else` ketika kondisi `if` salah?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `else` di JavaScript?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Kapan sebaiknya kita menambahkan `else` setelah `if`?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Mengapa perlu menggunakan `else` dalam logika percabangan?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `if` tidak terpenuhi dan ada `else`?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari program if...else jika kondisi salah?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Bagaimana menggunakan else untuk menangani kondisi alternatif?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa peran `else` dalam struktur logika bercabang?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Jika kondisi `if` tidak terpenuhi, bagian mana yang dijalankan?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa yang ditampilkan jika nilai tidak lebih dari 75 dan ada `else`?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Mengapa kita membutuhkan `else` setelah `if`?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita tidak menggunakan `else` dan kondisi `if` salah?",
    "jawaban": "`else` digunakan untuk mengeksekusi blok kode jika kondisi pada `if` bernilai `false`.",
    "kode": "let nilai = 76;\nif (nilai > 75) {\n  document.writeln(\"Selamat, kamu lulus\");\n} else {\n  document.writeln(\"Maaf, anda gagal\");\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `else if` dalam JavaScript?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa kegunaan dari `else if` dalam struktur kontrol JavaScript?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `else if` dalam logika percabangan?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa peran `else if` dalam pemrograman JavaScript?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `else if` dalam percabangan JavaScript?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika `if` salah dan ada `else if`?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Bagaimana menyusun banyak kondisi menggunakan `else if`?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Kapan perlu menggunakan lebih dari satu kondisi dengan `else if`?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Bagaimana menulis percabangan bertingkat dengan `else if`?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan `else if` daripada banyak `if` terpisah?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Bagaimana if, else if, dan else bekerja bersama?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari kode dengan banyak `else if` saat semua kondisi salah?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa bedanya `else if` dengan `if` terpisah?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Kapan kita harus menggunakan `else if` dalam program penilaian?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa solusi untuk banyak kondisi bertingkat dalam satu struktur logika?",
    "jawaban": "`else if` digunakan untuk memeriksa kondisi tambahan jika kondisi sebelumnya `false`. Digunakan untuk membuat percabangan bertingkat.",
    "kode": "let nilai = 49;\nif (nilai >= 90) {\n  document.writeln(\"Nilai kamu A\");\n} else if (nilai >= 75) {\n  document.writeln(\"Nilai kamu B\");\n} else if (nilai >= 60) {\n  document.writeln(\"Nilai kamu C\");\n} else if (nilai >= 50) {\n  document.writeln(\"Nilai kamu D\");\n} else {\n  document.writeln(\"Kamu remidi!!!\");\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan switch case di JavaScript?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa fungsi switch case dalam JavaScript?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan switch case di JavaScript?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa keuntungan menggunakan switch case dibanding if else?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Bagaimana struktur switch case ditulis dalam JavaScript?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari switch case jika tidak ada case yang cocok?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa peran default dalam switch case?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja break dalam switch case?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika tidak ada break dalam switch case?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari switch case jika nilai hari adalah \"Sabtu\"?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa perbedaan switch case dan if else?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menangani beberapa case dengan satu output dalam switch?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa itu keyword case dalam switch statement JavaScript?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Bagaimana struktur switch case untuk mengecek nama hari?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Bagaimana penulisan switch case yang benar di JavaScript?",
    "jawaban": "`switch case` adalah alternatif dari banyak `if else` yang digunakan ketika ada banyak kondisi berdasarkan satu nilai yang dibandingkan. Penulisannya lebih rapi dan mudah dibaca.",
    "kode": "let hari = \"Sabtu\";\nswitch (hari) {\n  case \"Senin\":\n    document.writeln(\"Hari Kerja\");\n    break;\n  case \"Sabtu\":\n  case \"Minggu\":\n    document.writeln(\"weekeeeeeeend\");\n    break;\n  default:\n    document.writeln(\"hari tidak dikenal\");\n}"
  },
  {
    "pertanyaan": "Apa fungsi dari perulangan for di JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Kapan kita menggunakan perulangan `for` dalam JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa itu struktur perulangan `for` di JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh perulangan `for` dalam JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa sintaks dasar dari perulangan `for` di JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana penulisan loop `for` di JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan `for` loop dalam JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa contoh penggunaan perulangan `for` di JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara mengulang kode lima kali dengan `for`?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari for (let i = 0; i < 5; i++)?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja perulangan `for` di JavaScript?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa itu loop `for` dan kapan digunakan?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara mengatur jumlah iterasi dengan `for`?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan `for` dibanding `while` saat iterasi tetap?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita melewatkan increment di `for` loop?",
    "jawaban": "`for` loop digunakan untuk mengulang blok kode sejumlah iterasi yang ditentukan. Cocok digunakan saat jumlah pengulangan sudah diketahui.",
    "kode": "for (let i = 0; i < 5; i++) {\n  document.writeln(\"Perulangan ke \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Seperti apa struktur penulisan `for` loop di JavaScript?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa sintaks lengkap dari perulangan `for` di JavaScript?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Bagaimana format umum dari for loop di JavaScript?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa komponen utama dalam struktur `for`?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Tuliskan struktur dasar perulangan `for`!",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa itu inisialisasi, kondisi, dan increment dalam `for` loop?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa saja bagian penting dari sintaks `for`?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Bagaimana bentuk penulisan loop `for` secara umum?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Jelaskan urutan komponen pada sintaks `for` di JavaScript!",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa yang terdapat dalam kurung pada `for` loop?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa isi dari parameter di dalam perulangan `for`?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa pola umum penulisan perulangan `for`?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Tunjukkan bentuk dasar sintaks `for`!",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Bagaimana menulis `for` loop dari 0 sampai kurang dari 3?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa bentuk umum perulangan `for` yang sering digunakan?",
    "jawaban": "Struktur dasar `for` adalah: `for (inisialisasi; kondisi; increment/decrement) { blok kode }`.",
    "kode": "// Contoh:\nfor (let i = 0; i < 3; i++) {\n  console.log(i);\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan perulangan while di JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan perulangan `while` dalam JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja perulangan `while` di JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa fungsi utama dari while loop dalam JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa perbedaan perulangan `for` dan `while` dalam JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa contoh penggunaan while loop di JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa sintaks dasar perulangan while dalam JavaScript?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Bagaimana bentuk struktur perulangan while?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi while tidak lagi terpenuhi?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa hasil dari kode while jika i dimulai dari 0 dan kondisi i < 5?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan `while` daripada `for`?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Bagaimana kondisi bekerja dalam loop `while`?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika tidak ada increment dalam while loop?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa struktur yang cocok untuk perulangan tidak pasti jumlahnya?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Kapan kondisi while dicek dalam perulangan?",
    "jawaban": "`while` loop digunakan untuk mengulang blok kode selama kondisi bernilai `true`. Cocok digunakan saat jumlah perulangan belum diketahui secara pasti.",
    "kode": "let i = 0;\nwhile (i < 5) {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n}"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `while` untuk membaca input hingga 'exit'?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menghentikan loop `while` saat input adalah 'exit'?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Apa teknik menggunakan `while` untuk membaca input berulang?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana `while` digunakan untuk membaca input sampai kondisi terpenuhi?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Contoh loop `while` yang berjalan hingga user mengetikkan 'exit'?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana loop `while` menghentikan input saat kondisi dipenuhi?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Apa penggunaan umum `while` dalam input pengguna yang berulang?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana membuat program JavaScript yang menunggu input hingga 'exit'?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Apa metode untuk membaca input berulang hingga pengguna berhenti?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana `while` digunakan untuk input tak terbatas hingga kondisi 'exit'?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Apa contoh sederhana penggunaan loop `while` untuk input kondisi berhenti?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara membuat prompt berulang dengan `while` sampai ketik 'exit'?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari program yang memakai while dan prompt hingga exit?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana loop `while` dikombinasikan dengan `prompt`?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Bagaimana implementasi loop `while` untuk input string hingga kondisi tertentu?",
    "jawaban": "`while` dapat digunakan untuk terus meminta input dari pengguna sampai memenuhi syarat tertentu, seperti mengetik kata 'exit'.",
    "kode": "let input = \"\";\nwhile (input !== \"exit\") {\n  input = prompt(\"Ketik (exit) untuk berhenti:\");\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan perulangan `do while` di JavaScript?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa perbedaan `while` dan `do while` di JavaScript?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `do while` dalam JavaScript?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Mengapa `do while` selalu menjalankan blok kode setidaknya sekali?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa kelebihan `do while` dibanding `while`?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `do while` dalam JavaScript?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa struktur sintaks dari `do while` loop?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Tunjukkan contoh perulangan `do while` dalam JavaScript!",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa hasil dari kode do while jika kondisi awal bernilai false?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa yang dilakukan blok `do while` sebelum mengecek kondisi?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Mengapa `do while` cocok untuk perulangan minimal sekali?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa hasil dari perulangan `do while` sebanyak 10 kali?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Bagaimana bentuk umum sintaks `do while` loop di JavaScript?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa keunikan dari `do while` dibandingkan jenis perulangan lainnya?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa contoh `do while` yang langsung menjalankan perintah walau kondisi false?",
    "jawaban": "`do while` adalah jenis perulangan yang mengeksekusi blok kode **setidaknya sekali**, meskipun kondisi bernilai `false`. Kondisi dicek setelah perulangan pertama dijalankan.",
    "kode": "let i = 0;\ndo {\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n  i++;\n} while (i < 10);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan perintah `break` di JavaScript?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa fungsi dari `break` dalam perulangan JavaScript?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `break` dalam perulangan?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `break` di dalam loop JavaScript?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari loop `for` jika ada `break` di tengah?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa yang dilakukan `break` dalam loop jika syarat tertentu terpenuhi?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa tujuan menggunakan `break` pada perulangan `for`?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan `break` untuk menghentikan loop?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa efek dari `break` saat digunakan dalam perulangan?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana `break` menghentikan perulangan meski kondisi belum salah?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Kapan `break` menghentikan eksekusi `for` loop?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa contoh penggunaan `break` untuk keluar dari perulangan?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `break` saat nilai mencapai 5?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari kode `for` dengan `break` saat i === 5?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika `break` dipanggil di tengah perulangan?",
    "jawaban": "`break` digunakan untuk menghentikan perulangan secara paksa sebelum kondisinya `false`, biasanya saat kondisi tertentu terpenuhi.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    break;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan perintah `continue` di JavaScript?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa fungsi dari `continue` dalam perulangan JavaScript?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `continue` dalam loop JavaScript?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa perbedaan `continue` dan `break` dalam perulangan?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `continue` dalam perulangan JavaScript?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa hasil dari loop jika `continue` digunakan saat i === 5?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa tujuan penggunaan `continue` di dalam loop `for`?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa efek `continue` pada loop ketika kondisi terpenuhi?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita menggunakan `continue` dalam `for` loop?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana `continue` dapat melewatkan proses pada nilai tertentu?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Bagaimana cara melompati nilai tertentu dalam perulangan menggunakan `continue`?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa contoh `continue` dalam perulangan yang melewatkan angka 5?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa hasil jika `continue` dijalankan saat i bernilai 5?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Mengapa `continue` tidak menghentikan loop tetapi hanya melewati iterasi?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa perbedaan hasil antara loop biasa dan loop dengan `continue` di iterasi ke-5?",
    "jawaban": "`continue` digunakan untuk melewatkan satu iterasi dalam perulangan dan langsung lanjut ke iterasi berikutnya.",
    "kode": "for (let i = 1; i < 10; i++) {\n  if (i === 5) {\n    continue;\n  }\n  document.writeln(\"Perulangan ke: \" + i + \"<br>\");\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan function di JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa itu fungsi dalam JavaScript dan bagaimana cara kerjanya?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa kegunaan function dalam JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan function dalam JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana cara membuat function di JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa yang terjadi saat function dipanggil berulang kali?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa hasil dari pemanggilan function beberapa kali?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana bentuk dasar penulisan function?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa contoh sederhana dari function di JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana cara memanggil function berkali-kali?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan function untuk tugas berulang?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Kenapa function penting dalam pemrograman JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa yang dilakukan function saat dipanggil di JavaScript?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana fungsi membantu menghindari penulisan kode berulang?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa istilah untuk blok kode yang dapat dipanggil berulang kali?",
    "jawaban": "Function adalah blok kode yang dirancang untuk melakukan tugas tertentu dan bisa dipanggil berulang kali.",
    "kode": "function sapa() {\n  document.writeln(\"Hallo, nama saya evelyn\" + \"<br>\");\n}\n\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();\nsapa();"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan function berparameter di JavaScript?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana cara kerja function dengan parameter di JavaScript?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa kegunaan parameter pada function JavaScript?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan parameter pada function?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana parameter membuat function lebih fleksibel?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa yang terjadi jika function menerima parameter?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa maksud dari nilai default parameter dalam function?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Contoh function yang menerima argumen di JavaScript?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa arti argumen saat memanggil function di JavaScript?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana function bisa menampilkan hasil berbeda dengan parameter?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa bedanya function dengan dan tanpa parameter?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Bagaimana menggunakan nilai default dalam parameter function?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa output dari function jika parameter tidak dikirim?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Mengapa function bisa menyesuaikan output dengan argumen?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa istilah untuk nilai yang diteruskan ke function?",
    "jawaban": "Function dengan parameter memungkinkan kita untuk mengirim nilai dari luar ke dalam fungsi, sehingga hasilnya bisa berbeda tergantung nilai yang dikirim.",
    "kode": "function sapa(nama = \"evelyn\") {\n  document.writeln(\"Hallo, \" + nama + \"<br>\");\n}\n\nsapa();"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan function yang menggunakan return di JavaScript?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa kegunaan `return` dalam sebuah function JavaScript?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Bagaimana function dengan `return` bekerja di JavaScript?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa perbedaan function dengan `return` dan tanpa `return`?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa hasil yang diberikan oleh function yang memiliki return?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil nilai dari function menggunakan return?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa arti nilai yang dikembalikan oleh function di JavaScript?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Contoh penggunaan return dalam function JavaScript?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa yang dilakukan kata kunci `return` dalam function?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Bagaimana menggunakan return untuk menyimpan hasil ke variabel?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan return dalam function JavaScript?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa maksud dari nilai return di dalam function?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh function berikut: `return a + b;`?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Mengapa penting menggunakan return dalam function yang menghasilkan nilai?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa manfaat `return` saat ingin menggunakan hasil fungsi di tempat lain?",
    "jawaban": "Function dengan `return` akan mengembalikan nilai hasil dari proses di dalam fungsi, sehingga nilainya bisa digunakan di luar fungsi tersebut.",
    "kode": "function tambah(a, b) {\n  return a + b;\n}\n\nlet hasil = tambah(5, 3);\ndocument.writeln(\"hasilya yaitu: \" + hasil);"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan arrow function di JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Bagaimana cara menulis arrow function di JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa perbedaan arrow function dengan function biasa?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan arrow function?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa kelebihan arrow function dalam JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan arrow function?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa itu tanda `=>` dalam JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa hasil dari arrow function berikut: `(a, b) => a * b`?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Mengapa arrow function lebih ringkas dibanding function biasa?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Bagaimana cara membuat fungsi `kali` dengan arrow function?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa ciri khas dari arrow function di JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa bentuk penulisan singkat fungsi di JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Bagaimana menulis fungsi tanpa kata kunci `function`?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa nama fungsi pendek dengan `=>` di JavaScript?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa keuntungan memakai arrow function dalam program singkat?",
    "jawaban": "Arrow function adalah cara penulisan fungsi yang lebih ringkas menggunakan tanda panah `=>`. Biasanya digunakan untuk fungsi sederhana.",
    "kode": "const kali = (a, b) => a * b;\ndocument.writeln(\"Hasilnya yaitu: \" + kali(5, 8));"
  },
  {
    "pertanyaan": "Apa beda antara var, let, dan const di JavaScript?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Jelaskan perbedaan var, let, dan const!",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan var, let, atau const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa perbedaan penggunaan var, let, dan const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Bagaimana karakteristik var dibanding let dan const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Mengapa const tidak bisa diubah nilainya?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan let dibanding var?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa itu block scope pada let dan const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Kenapa var dianggap sudah usang dibanding let dan const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa jenis scope dari var, let, dan const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa saja perbedaan penting antara var, let dan const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa pengaruh scope terhadap deklarasi var, let, dan const?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apakah var bisa diubah dan dideklarasikan ulang?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Kenapa let dan const tidak keluar dari blok?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Bagaimana deklarasi variabel yang aman dan efisien di JavaScript?",
    "jawaban": "`var` bersifat function-scoped dan bisa di-redeclare. `let` dan `const` bersifat block-scoped. `let` nilainya bisa diubah, sedangkan `const` tidak bisa.",
    "kode": "var nama = 'Budi';\nlet umur = 25;\nconst jenisKelamin = 'Laki-laki';"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan hoisting di JavaScript?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa itu hoisting dan bagaimana cara kerjanya?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Bagaimana hoisting mempengaruhi eksekusi kode JavaScript?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa efek hoisting pada deklarasi variabel?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita memanggil variabel sebelum dideklarasikan?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Bagaimana contoh hoisting pada variabel dengan `var`?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Mengapa `console.log(nama)` menghasilkan `undefined` meskipun sudah ada deklarasi `var nama`?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apakah `let` dan `const` juga mengalami hoisting?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa perbedaan hoisting antara var, let, dan const?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa yang dimaksud variabel di-hoist dalam JavaScript?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Bagaimana cara kerja hoisting pada fungsi?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa itu hoisting dan kenapa penting diketahui dalam JavaScript?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Mengapa variabel var bisa digunakan sebelum deklarasi?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa hasil dari hoisting pada kode dengan var sebelum inisialisasi?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Apa maksud 'diangkat ke atas' dalam konteks hoisting?",
    "jawaban": "Hoisting adalah mekanisme di mana deklarasi variabel atau fungsi 'diangkat' ke atas sebelum kode dieksekusi.",
    "kode": "console.log(nama); // undefined\nvar nama = 'Evelyn';"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui tipe data dari sebuah variabel di JavaScript?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa cara untuk memeriksa tipe data variabel di JavaScript?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `typeof` di JavaScript?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa fungsi operator `typeof` dalam JavaScript?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa output dari `typeof umur` jika umur = 20?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek apakah nilai bertipe number?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Dengan perintah apa kita mengecek tipe data sebuah nilai?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa hasil `typeof` jika digunakan pada angka?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Bagaimana memeriksa apakah variabel bertipe string atau number?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa cara termudah untuk mengetahui tipe variabel di JavaScript?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Operator apa yang digunakan untuk cek tipe data di JavaScript?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Bagaimana `typeof` membantu dalam debugging?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Contoh penggunaan `typeof` untuk variabel angka?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa hasil dari `typeof` pada variabel bertipe number?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Bagaimana cara melihat jenis data dari sebuah variabel di JavaScript?",
    "jawaban": "Gunakan operator `typeof` untuk mengetahui tipe data suatu nilai atau variabel.",
    "kode": "let umur = 20;\nconsole.log(typeof umur); // number"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator ternary di JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Bagaimana cara menulis operator ternary dalam JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa fungsi operator ternary di JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa contoh penggunaan ternary operator dalam JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa bentuk singkat dari if-else dalam JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa sintaks operator ternary di JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Kapan kita menggunakan ternary operator dalam JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa hasil dari `umur >= 17 ? 'Dewasa' : 'Anak-anak'` jika umur = 18?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan ternary untuk menentukan status umur?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa kelebihan ternary operator dibanding if-else biasa?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Bagaimana cara singkat menulis kondisi di JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa hasil dari ternary jika kondisi bernilai true?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Bagaimana menggunakan ternary untuk menentukan kategori?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Operator apa yang digunakan untuk kondisi singkat dalam JavaScript?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Contoh ternary operator yang menghasilkan 'Dewasa' jika umur >= 17?",
    "jawaban": "Operator ternary adalah bentuk singkat dari if-else. Sintaks: `kondisi ? nilaiJikaBenar : nilaiJikaSalah`.",
    "kode": "let umur = 18;\nlet status = umur >= 17 ? 'Dewasa' : 'Anak-anak';"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan template literal di JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan template literal dalam JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa fungsi dari template literal dalam JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Bagaimana menulis string yang berisi variabel di JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa simbol yang digunakan dalam template literal?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa kelebihan template literal dibanding string biasa?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Bagaimana cara menggabungkan string dan variabel dengan backtick?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa itu interpolasi string dalam JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa perbedaan antara template literal dan string konvensional?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan template literal?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa itu backtick dalam penulisan JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Contoh penulisan template literal di JavaScript?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Bagaimana cara menulis string dinamis dengan template literal?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa gunanya simbol `${}` dalam string?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Bagaimana mencetak nama di dalam string dengan template literal?",
    "jawaban": "Template literal memungkinkan interpolasi variabel dan ekspresi ke dalam string menggunakan tanda backtick (`` ` ``).",
    "kode": "let nama = 'Evelyn';\nlet pesan = `Hallo, nama saya ${nama}`;"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan event listener di JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan addEventListener di JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Apa fungsi addEventListener dalam JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana menangani event klik dengan JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Apa itu event handler dan bagaimana cara menambahkannya?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana mendeteksi klik pada elemen HTML dengan JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Apa yang terjadi saat kita menambahkan addEventListener ke tombol?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana menambahkan event klik ke tombol menggunakan JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Apa itu metode addEventListener dan contohnya?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana cara menjalankan fungsi saat tombol diklik di JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Contoh penggunaan addEventListener pada elemen tombol?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Apa metode untuk merespon aksi pengguna seperti klik di JavaScript?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan event listener ke ID tertentu?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Apa hasil dari event listener saat tombol diklik?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Mengapa penting menggunakan addEventListener dalam interaksi pengguna?",
    "jawaban": "`addEventListener` digunakan untuk menjalankan fungsi ketika suatu event terjadi pada elemen DOM.",
    "kode": "document.getElementById('tombol').addEventListener('click', function() {\n  alert('Tombol diklik!');\n});"
  },
  {
    "pertanyaan": "Bagaimana mengubah isi elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa cara manipulasi konten HTML lewat JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Bagaimana memanipulasi elemen HTML menggunakan DOM?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti teks elemen HTML dari JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Contoh penggunaan `getElementById` untuk mengubah isi HTML?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa fungsi `innerHTML` dalam JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Bagaimana JavaScript dapat memodifikasi halaman web?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa peran DOM dalam manipulasi HTML?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Bagaimana cara JavaScript mengakses elemen HTML?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa yang digunakan JavaScript untuk mengubah konten HTML?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Bagaimana mengakses elemen HTML dengan ID menggunakan JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa contoh manipulasi teks dalam tag HTML menggunakan JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti teks HTML tanpa reload halaman?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa metode untuk memodifikasi elemen dengan ID tertentu?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Bagaimana manipulasi elemen DOM bisa dilakukan dengan JavaScript?",
    "jawaban": "Gunakan DOM seperti `getElementById`, `innerHTML`, dan `style` untuk mengakses dan mengubah elemen HTML.",
    "kode": "document.getElementById('judul').innerHTML = 'Halo Dunia';"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan localStorage di JavaScript?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan data di browser dengan localStorage?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Apa fungsi localStorage dalam JavaScript?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Bagaimana menyimpan dan mengambil data dengan localStorage?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Apa perbedaan localStorage dengan sessionStorage?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Apakah data di localStorage akan hilang saat browser ditutup?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Bagaimana cara kerja localStorage di JavaScript?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Bagaimana menyimpan nilai 'nama' ke dalam localStorage?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Apa contoh penggunaan localStorage di JavaScript?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Bagaimana mengambil kembali data dari localStorage?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Apakah localStorage menyimpan data secara permanen di browser?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Apa metode yang digunakan untuk menyimpan data ke localStorage?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Dengan cara apa kita bisa menyimpan dan membaca data lokal di browser?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Apa hasil dari `localStorage.getItem('nama')` setelah diset?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Mengapa menggunakan localStorage untuk menyimpan data user?",
    "jawaban": "`localStorage` adalah penyimpanan data di browser yang tidak hilang meskipun halaman di-refresh atau browser ditutup.",
    "kode": "localStorage.setItem('nama', 'Evelyn');\nlet nama = localStorage.getItem('nama');"
  },
  {
    "pertanyaan": "Bagaimana cara menangkap error di JavaScript?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa fungsi try-catch dalam JavaScript?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Bagaimana menangani kesalahan agar program tidak berhenti?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Contoh penggunaan try-catch di JavaScript?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa itu blok try-catch dan kapan digunakan?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menjaga program tetap berjalan saat ada error?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan try-catch di JavaScript?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Kapan sebaiknya memakai try-catch?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Bagaimana mencegah crash saat terjadi error?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa yang terjadi jika error tidak ditangani dengan try-catch?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Bagaimana cara debugging dengan try-catch?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa itu error handling di JavaScript?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menghindari program berhenti karena error?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa yang ditulis di dalam catch pada try-catch block?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Mengapa penting menangani error menggunakan try-catch?",
    "jawaban": "Gunakan blok `try-catch` untuk menangkap dan menangani error agar program tetap berjalan.",
    "kode": "try {\n  let hasil = x + y;\n} catch (error) {\n  console.error('Terjadi error:', error);\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan callback function di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa itu callback dalam pemrograman JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Bagaimana cara kerja callback function di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa manfaat callback function dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Mengapa menggunakan callback function di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Contoh penggunaan callback function dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Bagaimana meneruskan fungsi sebagai parameter ke fungsi lain?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa itu fungsi sebagai parameter (callback) di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa hasil dari fungsi prosesData dengan callback?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Bagaimana contoh pemanggilan callback di dalam fungsi?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa maksud callback function sebagai argumen?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Kapan kita menggunakan callback dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa yang terjadi saat fungsi callback dipanggil?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan callback function?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar callback function di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirimkan sebagai argumen ke fungsi lain dan akan dipanggil di dalamnya.",
    "kode": "function prosesData(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nprosesData('Data 1', function() {\n  console.log('Selesai');\n});"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan DOM di JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu Document Object Model (DOM) dalam JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi DOM dalam pengembangan web dengan JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana JavaScript berinteraksi dengan DOM?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hubungan antara JavaScript dan DOM?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana struktur DOM direpresentasikan dalam JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa DOM penting dalam JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa peran DOM saat JavaScript memodifikasi halaman?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu pohon objek DOM dalam JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa maksud struktur pohon DOM di JavaScript?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana elemen HTML diakses melalui DOM?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat DOM untuk manipulasi halaman web?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu DOM dan bagaimana JavaScript menggunakannya?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa arti DOM dalam konteks JavaScript dan HTML?",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Jelaskan konsep DOM dalam JavaScript!",
    "jawaban": "DOM (Document Object Model) adalah representasi struktur halaman web sebagai pohon objek. JavaScript dapat digunakan untuk mengakses dan memanipulasi elemen dalam DOM.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi `getElementById` dalam JavaScript?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `getElementById` untuk akses elemen?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Contoh penggunaan `getElementById` dalam JavaScript?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apa hasil dari `document.getElementById('judul')`?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Bagaimana mengubah isi elemen menggunakan `getElementById`?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Mengapa `getElementById` penting dalam manipulasi DOM?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Bagaimana cara akses elemen HTML berdasarkan id-nya?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apa yang dilakukan `getElementById` pada DOM?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Bagaimana cara menargetkan elemen dengan id tertentu di JavaScript?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apa metode paling umum untuk mengambil elemen HTML berdasarkan id?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Bagaimana cara mendapatkan elemen dengan id 'judul'?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apa hasil dari mengubah `innerHTML` pada elemen yang diambil dengan `getElementById`?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apakah `getElementById` hanya mengambil satu elemen?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apa metode DOM untuk akses elemen berdasarkan id?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Jelaskan cara menggunakan `getElementById` untuk manipulasi teks?",
    "jawaban": "`getElementById` digunakan untuk mengambil elemen berdasarkan atribut id-nya.",
    "kode": "let elemen = document.getElementById('judul');\nelemen.innerHTML = 'Teks diubah';"
  },
  {
    "pertanyaan": "Apa bedanya `getElementById`, `getElementsByClassName`, dan `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apa perbedaan penggunaan `getElementById`, `getElementsByClassName`, dan `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Bagaimana membedakan `getElementById`, `getElementsByClassName`, dan `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apa fungsi masing-masing dari `getElementById`, `getElementsByClassName`, dan `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Kapan harus menggunakan `getElementById`, `getElementsByClassName`, atau `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apa perbedaan output dari `getElementById`, `getElementsByClassName`, dan `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apa bedanya `getElementsByClassName` dan `querySelector`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Mengapa `querySelector` lebih fleksibel dari yang lain?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apa kelebihan `querySelector` dibanding `getElementById` dan `getElementsByClassName`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Bagaimana cara memilih elemen berdasarkan class dan id di JavaScript?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apa perbedaan antara memilih elemen dengan id, class, dan selector?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Manakah yang digunakan untuk mengambil banyak elemen berdasarkan class?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apa hasil `getElementsByClassName` dibanding `querySelectorAll`?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Apakah `querySelector` bisa mengambil elemen berdasarkan id atau class?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil elemen dengan berbagai selector di JavaScript?",
    "jawaban": "`getElementById` mengambil 1 elemen berdasarkan id. `getElementsByClassName` mengambil kumpulan elemen berdasarkan class. `querySelector` lebih fleksibel dan bisa mengambil berdasarkan selector CSS.",
    "kode": "let satu = document.getElementById('judul');\nlet banyak = document.getElementsByClassName('kotak');\nlet selector = document.querySelector('.kotak');"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti teks elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Apa fungsi `.innerHTML` dalam JavaScript?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Bagaimana cara memodifikasi teks dalam elemen HTML?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Apa cara termudah mengubah teks HTML menggunakan JavaScript?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Bagaimana JavaScript dapat mengubah isi elemen HTML?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Dengan metode apa JavaScript mengganti konten elemen?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Contoh penggunaan `.innerHTML` dalam JavaScript?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Apa perbedaan `innerHTML` dengan `textContent`?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Bagaimana mengubah isi paragraf dengan JavaScript?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Apa yang dilakukan properti `innerHTML`?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks baru dalam elemen HTML?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Bagaimana cara JavaScript mengedit isi elemen dengan id tertentu?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Apakah bisa mengganti teks elemen HTML lewat JavaScript?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Apa metode yang digunakan untuk mengubah isi elemen HTML?",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Jelaskan bagaimana `innerHTML` mengubah konten HTML!",
    "jawaban": "Gunakan properti `.innerHTML` untuk mengganti konten dari suatu elemen.",
    "kode": "document.getElementById('judul').innerHTML = 'Selamat Datang!';"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti warna teks elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Apa fungsi `.style` dalam JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah tampilan elemen HTML lewat JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Apa metode untuk mengedit style elemen menggunakan JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Contoh pengubahan warna teks HTML dengan JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Apa cara paling mudah mengatur style elemen HTML di JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Bagaimana JavaScript mengatur CSS pada elemen HTML?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Apa yang dilakukan properti `.style` di JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Bagaimana mengubah warna elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Apa kegunaan `element.style` dalam manipulasi CSS?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Apa cara mengubah properti CSS secara langsung di JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Bagaimana merubah warna font elemen HTML lewat JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Metode apa yang digunakan JavaScript untuk ubah CSS elemen?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Bagaimana menambahkan style pada elemen HTML via JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Apa cara mengubah style inline HTML dengan JavaScript?",
    "jawaban": "Gunakan properti `.style` untuk mengubah gaya CSS secara langsung.",
    "kode": "document.getElementById('judul').style.color = 'red';"
  },
  {
    "pertanyaan": "Bagaimana cara membuat elemen HTML baru dengan JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Apa fungsi dari `createElement` di JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen ke DOM secara dinamis?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Apa metode JavaScript untuk membuat elemen HTML baru?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Contoh kode membuat paragraf baru dengan JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Apa langkah-langkah menambahkan elemen ke halaman dengan JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana JavaScript dapat menambahkan tag baru ke halaman?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `appendChild` untuk menambah elemen?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Apa peran `innerText` saat membuat elemen baru dengan JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana cara membuat dan menambahkan paragraf secara dinamis?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana JavaScript menyisipkan elemen baru ke dalam `body`?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Metode apa yang digunakan untuk membuat node HTML baru?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Apa cara membuat elemen paragraf baru di JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana menambahkan konten baru ke DOM dengan JavaScript?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Langkah membuat elemen baru lalu menampilkannya di halaman?",
    "jawaban": "Gunakan `createElement`, `appendChild`, dan `innerText` untuk membuat dan menambahkan elemen ke halaman.",
    "kode": "let p = document.createElement('p');\np.innerText = 'Ini paragraf baru';\ndocument.body.appendChild(p);"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen dari halaman HTML dengan JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa metode untuk menghapus elemen HTML di JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Bagaimana menghilangkan elemen dari DOM menggunakan JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa fungsi `.remove()` dalam JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Contoh menghapus elemen HTML dengan JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus node HTML lewat JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa kegunaan `removeChild` dalam JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa metode terbaik untuk menghapus elemen berdasarkan id?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Bagaimana cara membersihkan elemen dari halaman secara dinamis?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa hasil dari `document.getElementById('hapusSaya').remove()`?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Bagaimana menghapus elemen berdasarkan id di JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa bedanya `remove()` dengan `removeChild()`?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apakah bisa menghapus elemen HTML hanya dengan JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Langkah menghapus tag HTML dengan JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Bagaimana menghapus elemen dari struktur DOM di JavaScript?",
    "jawaban": "Gunakan `.remove()` atau `parentNode.removeChild()` untuk menghapus elemen dari DOM.",
    "kode": "let elemen = document.getElementById('hapusSaya');\nelemen.remove();"
  },
  {
    "pertanyaan": "Apa perbedaan antara operator `==` dan `===`?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `===` dibanding `==` di JavaScript?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa bedanya `==` dan `===` dalam perbandingan nilai?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa yang dibandingkan oleh `==` dan `===`?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Mengapa hasil `5 == '5'` dan `5 === '5'` berbeda?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa kelebihan `===` dibandingkan `==` di JavaScript?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Kenapa `===` lebih disarankan daripada `==`?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa hasil dari `5 == '5'` dan `5 === '5'` dalam JavaScript?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Perbandingan mana yang memperhatikan tipe data: `==` atau `===`?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apakah `==` dan `===` selalu memberikan hasil yang sama?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Kapan hasil `==` bisa berbeda dengan `===`?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Operator mana yang melakukan perbandingan ketat di JavaScript?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa arti strict equality dalam JavaScript?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apakah `===` membandingkan lebih ketat daripada `==`?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa contoh perbedaan hasil antara `==` dan `===`?",
    "jawaban": "`==` membandingkan nilai saja tanpa memperhatikan tipe data. Sedangkan `===` membandingkan nilai **dan** tipe datanya sekaligus.",
    "kode": "console.log(5 == '5');  // true\nconsole.log(5 === '5'); // false"
  },
  {
    "pertanyaan": "Apa beda `null` dan `undefined` di JavaScript?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `null` dan kapan `undefined` di JavaScript?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa arti `undefined` dan `null` pada variabel JavaScript?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Contoh perbedaan antara `undefined` dan `null`?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa hasil dari console.log untuk `undefined` dan `null`?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa yang dimaksud `undefined` di JavaScript?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa perbedaan penggunaan `null` dan `undefined`?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Bagaimana membedakan variabel bernilai `null` dan `undefined`?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa yang terjadi jika variabel dideklarasikan tapi tidak diberi nilai?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa arti variabel yang bernilai `null`?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Kapan variabel mendapatkan nilai `undefined` secara otomatis?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apakah `null` dan `undefined` dianggap sama?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa nilai default dari variabel tanpa inisialisasi?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Apa yang dimaksud null assignment di JavaScript?",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Jelaskan perbedaan tipe data `null` dan `undefined`!",
    "jawaban": "`undefined` berarti variabel telah dideklarasikan tetapi belum diberi nilai. `null` berarti nilai kosong yang ditetapkan secara eksplisit.",
    "kode": "let a;\nconsole.log(a); // undefined\nlet b = null;\nconsole.log(b); // null"
  },
  {
    "pertanyaan": "Kapan waktu yang tepat memakai `for` loop dibanding `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa kondisi yang menentukan pemakaian `for` daripada `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa kelebihan `for` dibandingkan `while` dalam perulangan tertentu?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Kapan loop `for` lebih efisien daripada `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Jika kita tahu jumlah iterasi, harus pakai `for` atau `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Loop mana yang cocok saat kita tahu batasnya: `for` atau `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Kapan lebih tepat memilih `while` daripada `for` loop?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Perbedaan kondisi penggunaan `for` dan `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Manakah loop yang digunakan untuk iterasi yang pasti jumlahnya?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Kenapa kita menggunakan `for` ketika jumlah iterasi diketahui?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Kapan lebih baik memilih `for loop` daripada `while loop`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Apakah `for` loop bisa diganti dengan `while` loop?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa pertimbangan dalam memilih `for` atau `while`?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa beda utama antara `for` dan `while` loop?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Loop mana yang dipakai kalau iterasi diketahui sebelumnya?",
    "jawaban": "`for` cocok digunakan ketika jumlah perulangan sudah diketahui. `while` lebih baik digunakan ketika jumlah perulangan belum pasti.",
    "kode": "// for loop\nfor (let i = 0; i < 5; i++) {\n  console.log(i);\n}\n\n// while loop\nlet i = 0;\nwhile (i < 5) {\n  console.log(i);\n  i++;\n}"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `this` di JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `this` dalam JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Apa fungsi dari keyword `this` dalam JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Mengapa `this` penting dalam pemrograman JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Bagaimana `this` merujuk objek saat fungsi dipanggil?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Contoh penggunaan `this` dalam object JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Kapan `this` mengacu ke objek saat ini?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Bagaimana cara `this` mengakses properti objek di JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Mengapa `this` mengarah ke objek pemanggil fungsi?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Apa arti `this.nama` dalam contoh object JavaScript?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Bagaimana `this` bekerja dalam method object?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Dalam konteks objek, apa yang diwakili oleh `this`?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Apakah `this` berubah tergantung cara fungsi dipanggil?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Apa nilai `this` jika fungsi dipanggil dari objek?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Bagaimana `this` bekerja saat digunakan dalam objek literal?",
    "jawaban": "`this` merujuk pada objek yang saat ini menjalankan fungsi. Nilainya bergantung pada konteks pemanggilan.",
    "kode": "const user = {\n  nama: 'Evelyn',\n  sapa: function() {\n    console.log('Hallo, ' + this.nama);\n  }\n};\nuser.sapa();"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan callback function di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Bagaimana cara kerja callback function di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa fungsi dari callback dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa itu fungsi callback dan bagaimana digunakan di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Contoh sederhana penggunaan callback function dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa perbedaan callback function dengan function biasa?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Kapan kita menggunakan callback function dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Mengapa callback function penting dalam JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Bagaimana cara mengirim fungsi sebagai parameter di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan callback dalam fungsi JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa hasil dari menjalankan fungsi dengan callback?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa arti callback dalam pemrograman JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apakah callback bisa digunakan di fungsi asinkron JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Bagaimana callback membantu mengatur urutan eksekusi di JavaScript?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa hubungan callback function dengan asynchronous programming?",
    "jawaban": "Callback adalah fungsi yang dikirim sebagai argumen ke fungsi lain dan akan dijalankan setelah proses tertentu selesai.",
    "kode": "function proses(data, callback) {\n  console.log('Memproses:', data);\n  callback();\n}\nproses('Data 1', function() {\n  console.log('Selesai!');\n});"
  },
  {
    "pertanyaan": "Apa itu PHP?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Pengertian PHP itu apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Jelaskan apa itu bahasa pemrograman PHP",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP adalah bahasa apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP fungsinya untuk apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Untuk apa PHP digunakan?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP itu singkatan dari apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Kegunaan PHP dalam pemrograman web",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP dipakai buat apa sih?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa jelaskan PHP itu apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan output di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan hasil di PHP gimana?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Gimana menampilkan teks di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Perintah untuk menampilkan output di PHP apa ya?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Menampilkan tulisan di PHP pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan string di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "PHP untuk cetak teks ke browser pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Echo itu fungsinya apa dalam PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Kalau mau tampilkan kalimat di PHP, pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Fungsi menampilkan output ke layar di PHP",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari perintah `echo` di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Kalau mau print sesuatu di PHP, pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan kalimat ke browser menggunakan PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Print string ke layar di PHP gimana ya?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Di PHP, gimana cara menampilkan hasil dari program?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks dasar PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Sintaks PHP itu seperti apa?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Contoh penulisan dasar PHP",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Awalan dan akhiran kode PHP bagaimana?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Gimana cara menulis skrip PHP paling dasar?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Penulisan skrip PHP yang benar itu gimana?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Struktur dasar penulisan PHP seperti apa?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Bagaimana format dasar PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Apa tag pembuka dan penutup PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Haruskah selalu pakai `<?php` di awal kode PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuka dan menutup kode PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Kode PHP ditulis di dalam apa?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Kenapa kode PHP harus ada tanda `<?php` dan `?>`?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Dimana kita bisa mulai menulis sintaks PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Apa aturan dasar menulis kode PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis komentar dalam PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Gimana bikin komentar di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Komentar di PHP pakai apa?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Contoh menulis komentar di PHP",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apa simbol komentar dalam PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "PHP pakai apa buat nulis komentar?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat komentar satu baris dan banyak baris di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apakah PHP mendukung komentar multi-baris?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apa beda `//` dan `/* */` di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Cara menambahkan catatan dalam kode PHP",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Menulis penjelasan dalam kode PHP pakai apa?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tanda `//` di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Kapan pakai `/* */` dalam PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Komentar di PHP sama kayak di C atau beda?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Bagaimana menandai baris sebagai komentar di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Gimana cara bikin variabel di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Cara membuat variabel di PHP gimana?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Variabel di PHP ditulis seperti apa?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Penulisan variabel dalam PHP gimana sih?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa tanda untuk variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Kenapa variabel PHP pakai tanda `$`?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Contoh deklarasi variabel di PHP",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana menulis variabel string dalam PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan variabel di PHP ke browser",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Variabel itu wajib diketik pakai `$` ya di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Tipe data variabel di PHP perlu ditulis gak?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa bisa langsung isi nilai ke variabel di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa beda `echo` dan variabel di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Haruskah deklarasi variabel PHP menyebutkan tipe data?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa itu variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Pengertian variabel di PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Variabel dalam PHP untuk apa?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan variabel di PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Fungsi dari variabel di PHP apa?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Gunanya variabel di PHP buat apa?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Jelaskan pengertian variabel dalam PHP",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Mengapa variabel penting dalam PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Variabel PHP itu apa sih?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apakah variabel PHP harus ada simbol `$`?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Contoh variabel di PHP",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apakah variabel di PHP harus bertipe data?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "PHP bisa buat nyimpan nilai pakai variabel ya?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa bedanya variabel dan konstanta di PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa itu tipe data string dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Pengertian string dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Apa maksud dari string di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Fungsi tipe data string di PHP apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Kapan kita pakai string dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Contoh tipe data string di PHP",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis string di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Tipe data string itu menyimpan apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Perbedaan kutip tunggal dan kutip ganda dalam string PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "String itu termasuk tipe data apa di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Gimana nulis teks dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Tipe data teks di PHP namanya apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Cara menyimpan kalimat di PHP pakai tipe data apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "PHP bisa simpan karakter pakai tipe apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Apakah string bisa pakai \"\" dan '' di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Apa itu tipe data integer dan float dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Jelaskan tipe data integer dan float di PHP",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Perbedaan antara integer dan float dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Integer dan float di PHP digunakan untuk apa?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tipe data angka dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Kapan pakai integer dan kapan pakai float di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apa itu bilangan bulat dan bilangan desimal dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Contoh integer dan float di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "PHP bisa simpan angka dalam tipe data apa?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Float itu sama dengan double gak di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apakah angka desimal di PHP disebut float?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Cara menyimpan angka dan desimal dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Integer itu apa dalam pemrograman PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apakah PHP bisa membedakan angka bulat dan desimal?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Bilangan bulat dan desimal termasuk tipe data apa di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apa saja operator aritmatika dalam PHP?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Jelaskan operator aritmatika yang ada di PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Operator matematika di PHP ada apa saja?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "PHP mendukung operator aritmatika apa saja?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Daftar operator hitung dalam PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan operator aritmatika di PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tanda `+`, `-`, `*`, `/` di PHP?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Operator `++` dan `--` dalam PHP fungsinya apa?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Apakah ada operator modulus di PHP?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Cara melakukan operasi matematika di PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Apa saja fungsi matematika dasar yang tersedia di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Fungsi-fungsi matematika di PHP itu apa saja?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi matematika dalam PHP",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "PHP punya fungsi matematika apa aja?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan fungsi `round()`, `rand()` di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `min()` dan `max()` di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Gimana cara membuat angka acak di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk mencari nilai terbesar apa?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk mencari nilai terkecil apa?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `strlen()` dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung jumlah karakter dalam string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menghitung panjang string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin mengetahui jumlah karakter dalam teks, fungsi apa yang digunakan dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Dengan apa kita bisa mengukur panjang string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi bawaan PHP apa yang digunakan untuk mengetahui jumlah huruf dalam kalimat?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana cara mengetahui panjang dari sebuah string?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi untuk menghitung banyaknya karakter termasuk spasi dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan fungsi apa untuk menghitung jumlah karakter pada teks?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui jumlah karakter dari kalimat dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP yang bisa digunakan untuk menghitung panjang teks?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Untuk mengetahui jumlah karakter dalam string, kita pakai fungsi apa di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari fungsi `strlen()` ketika bekerja dengan string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi `strlen()` dalam PHP digunakan untuk apa?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menghitung jumlah karakter dalam variabel string?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `strtolower()` dan `strtoupper()` di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah string menjadi huruf kecil dan huruf besar di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk konversi huruf besar dan kecil pada string di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `strtolower()` dan `strtoupper()` dalam pemrosesan string?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin mengubah kalimat menjadi huruf kapital semua di PHP, fungsi apa yang dipakai?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah teks menjadi huruf kecil sepenuhnya di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk membuat huruf besar semua dari string?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `strtolower(\"BELAJAR PHP\")`?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Sebutkan dua fungsi PHP untuk mengubah kapitalisasi teks!",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `strtolower()` dan `strtoupper()` di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah string menjadi huruf kapital penuh di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang mengubah huruf string menjadi semua huruf kecil di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Untuk membuat semua karakter dalam string menjadi huruf besar, fungsi apa yang digunakan di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks dalam huruf kecil dan huruf besar menggunakan PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, fungsi apa yang bisa mengubah huruf kapital menjadi huruf kecil dan sebaliknya?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `str_word_count()` dalam PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menghitung jumlah kata dalam string di PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui berapa banyak kata dalam kalimat menggunakan PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Untuk menghitung jumlah kata dalam sebuah kalimat, fungsi apa yang bisa digunakan di PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi PHP yang bisa menghitung berapa kata dalam sebuah teks?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan fungsi apa untuk menghitung kata dalam sebuah kalimat?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung jumlah kata dari input pengguna di PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin menghitung jumlah kata dari variabel string, fungsi apa yang digunakan?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_word_count()` digunakan untuk apa dalam PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa output dari `str_word_count(\"belajar PHP itu mudah\")`?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk menghitung kata dalam string kalimat?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari fungsi `str_word_count()` jika string kosong diberikan?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `str_word_count()` dalam PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang cocok digunakan untuk menghitung jumlah kata dalam input textarea?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP untuk menghitung total kata dalam sebuah paragraf?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `str_replace()` dalam PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata dalam string menggunakan PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa di PHP yang bisa digunakan untuk mengganti bagian dari teks?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata 'saya' menjadi 'Karina' dalam sebuah string di PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `str_replace()` dalam pemrosesan string PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan fungsi apa untuk mencari dan mengganti kata dalam kalimat?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin mengubah nama dalam teks, fungsi apa yang bisa digunakan di PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi PHP untuk mengganti kata dalam sebuah kalimat?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan jika ingin mengganti bagian tertentu dalam string PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `str_replace(\"saya\", \"Karina\", \"saya sedang belajar PHP\")`?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Untuk mengganti isi teks dalam string, fungsi apa yang dipakai di PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apakah PHP memiliki fungsi untuk mengganti kata secara otomatis dalam teks?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata dalam sebuah string menggunakan PHP tanpa regex?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_replace()` di PHP digunakan untuk apa?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata pertama dalam sebuah kalimat menggunakan fungsi PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `str_repeat()` dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengulang string beberapa kali di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengulang string dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks yang sama sebanyak lima kali dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa digunakan untuk mengulang teks secara otomatis?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Untuk menampilkan kalimat yang sama beberapa kali di halaman web PHP, fungsi apa yang digunakan?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `str_repeat(\"Belajar PHP <br>\", 3)`?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat kalimat yang diulang berkali-kali di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang cocok digunakan untuk menampilkan output berulang di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `str_repeat()` jika digunakan dalam pembuatan pola teks?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Jika saya ingin menampilkan teks yang sama 5 kali, fungsi PHP apa yang saya pakai?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Apa output dari `str_repeat(\"PHP! \", 4)` dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_repeat()` biasanya digunakan dalam situasi seperti apa di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `str_repeat()` dalam menampilkan teks yang sama berulang kali?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_repeat()` di PHP digunakan untuk mengulang apa?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti teks dan mengulang hasilnya dalam PHP?",
    "jawaban": "Gabungkan `str_replace()` untuk mengganti teks dan `str_repeat()` untuk mengulang hasilnya.",
    "kode": "<?php\n$name = \"Budi Gaming <br>\";\necho str_repeat(str_replace(\"Budi\", \"Saya\", $name), 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan banyak nilai dalam satu variabel di PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Fungsi dari array dalam PHP untuk apa?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan array dalam pemrograman PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur data array dalam PHP bekerja?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa output dari kode `echo $hewan[0]` jika array berisi ['Kucing', 'Anjing']?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen pertama dari array di PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa jenis data yang bisa menyimpan daftar nilai seperti nama hewan dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Fungsi indeks pada array dalam PHP digunakan untuk apa?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan indeks array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan elemen ke-2 dari array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apakah array dalam PHP bisa menyimpan data dengan banyak tipe?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa nama tipe data PHP yang menyimpan kumpulan nilai?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan array sederhana dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apa saja cara untuk mendeklarasikan array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Fungsi atau sintaks apa yang digunakan untuk membuat array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "PHP mendukung metode apa saja untuk membuat array?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Tulis dua cara berbeda untuk membuat array di PHP!",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `[]` dan `array()` dalam membuat array PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array berisi nama hewan di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apa sintaks yang digunakan untuk membuat array statis dalam PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Cara membuat array di PHP tanpa fungsi `array()`?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana bentuk sintaks array modern dan lama?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan cara apa saja untuk membuat array?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apakah tanda kurung siku bisa digunakan untuk membuat array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk membuat array dalam PHP seperti apa?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apakah `array()` masih bisa digunakan untuk membuat array di PHP versi baru?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat array dengan isi beberapa nama hewan di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apakah array di PHP bisa menyimpan berbagai tipe data?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bisakah satu array di PHP berisi string, angka, dan boolean sekaligus?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa PHP memperbolehkan array berisi banyak tipe data sekaligus?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Dalam satu array PHP, bolehkah mencampur integer, float, string, dan boolean?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa array di PHP hanya boleh menyimpan satu jenis data?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Contoh array di PHP yang isinya campuran tipe data seperti apa?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa bisa memasukkan array di dalam array di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan data campuran ke dalam satu array di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bisakah array berisi nilai true, angka, dan teks dalam PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apakah array di PHP mendukung penyimpanan berbagai tipe data sekaligus?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur array campuran di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan array di PHP dibandingkan bahasa lain soal tipe data?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bolehkah saya membuat array berisi angka dan teks sekaligus di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apakah PHP mendukung array multidata dalam satu deklarasi?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana menuliskan array dengan campuran berbagai nilai di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen dalam array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa yang digunakan untuk mengambil data dari array di PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil elemen pertama dari array di PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Indeks array di PHP dimulai dari angka berapa?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan data dari posisi kedua dalam array?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Fungsi atau cara apa yang digunakan untuk membaca nilai array di PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengakses item pertama dari array?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nilai tertentu dalam array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apakah indeks array PHP selalu dimulai dari 0?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses item terakhir dalam array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Cara akses nilai berdasarkan posisi di array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Kode PHP apa yang digunakan untuk mengambil data ke-1 dari array?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Dengan apa kita bisa akses isi array berdasarkan urutan?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Untuk menampilkan 'Anjing' dari array hewan, indeks berapa yang digunakan?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita akses indeks yang belum ada di array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan isi array di PHP dengan jelas?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mencetak isi array secara lengkap di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melihat semua elemen dalam array PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi `print_r()` digunakan untuk apa dalam PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan array dalam format yang bisa dibaca manusia?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi paling sederhana untuk debugging array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui isi dari variabel array?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang sering digunakan untuk melihat struktur array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Dengan cara apa kita bisa mencetak isi array tanpa loop di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `print_r()` ketika digunakan pada array?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Saat ingin melihat isi array di PHP, fungsi apa yang dipakai?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Cara paling mudah melihat isi array untuk belajar PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan semua data array sekaligus di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi debugging apa yang digunakan untuk array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Dengan fungsi apa kita bisa melihat struktur dan isi array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unique()` dalam PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus data yang sama dalam array di PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menghilangkan nilai ganda di array PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen yang berulang dalam array di PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_unique()` jika array memiliki nilai yang sama lebih dari satu?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa membersihkan data duplikat dalam array?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Jika ada nilai yang sama dalam array, fungsi apa untuk menghapusnya?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Untuk menghilangkan entri yang sama dalam array, fungsi apa yang digunakan?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi bawaan PHP yang menghapus data ganda dari array?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyaring nilai yang unik dalam array PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apakah `array_unique()` bisa dipakai untuk array string?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `array_unique()` dan `array_filter()`?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_unique()` di PHP seperti apa?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apakah `array_unique()` mengubah urutan indeks array?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membersihkan nilai berulang di array PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_reverse()` dalam PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membalik isi array di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk membalik urutan array di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_reverse([1,2,3])` dalam PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan array dari belakang ke depan di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk membalik isi array adalah?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array tampil dari elemen terakhir ke pertama?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi untuk membalikkan array di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan elemen array dari belakang ke depan?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi `array_reverse()` berfungsi untuk apa?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membalik array tanpa loop di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari membalik array [10, 20, 30] menggunakan `array_reverse()`?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang bisa digunakan untuk menampilkan urutan array secara terbalik?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Jika ingin urutan array dibalik, fungsi mana yang dipakai?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi bawaan PHP untuk membalik isi array?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `shuffle()` dalam PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengacak isi array di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengacak elemen dalam array PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan array dalam urutan acak di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `shuffle()` pada array?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang dapat membuat isi array tampil secara acak?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi untuk mengacak elemen array di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array acak dari array statis di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `shuffle()` jika digunakan pada array angka?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apakah `shuffle()` mengubah indeks asli dari array?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara randomisasi data array di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang dipakai jika ingin merandom elemen array?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP untuk membuat isi array menjadi tidak berurutan?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi `shuffle()` digunakan dalam kasus seperti apa?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Jika ingin membuat kuis pilihan ganda dengan jawaban acak, fungsi apa yang bisa dipakai?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `count()` dalam PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung jumlah data dalam array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengetahui panjang array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui berapa banyak item dalam array PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `count([1,2,3])` dalam PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk menghitung jumlah elemen dalam array adalah?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Dengan apa kita bisa tahu jumlah total item di array?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi bawaan apa yang dipakai untuk menghitung isi array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `count()` saat bekerja dengan array?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui ukuran array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi untuk menghitung jumlah anggota dalam array PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apakah `count()` bisa digunakan untuk array multidimensi?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Cara cepat hitung elemen dalam array tanpa loop di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi `count()` digunakan dalam situasi seperti apa?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode `echo count($angka);` jika array punya 5 elemen?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `sort()` dan `rsort()` dalam PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengurutkan array secara ascending dan descending di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengurutkan nilai array di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengurutkan array angka dari yang terkecil di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `sort()` dan `rsort()` di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk mengurutkan array dari besar ke kecil?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `rsort()` dalam pengurutan array PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Untuk mengurutkan array dari angka terbesar, fungsi apa yang digunakan?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa output dari fungsi `sort()` jika digunakan pada array angka?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Jika ingin array diurutkan dari yang paling kecil ke paling besar, fungsi mana yang dipakai?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengurutkan data array di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membalik urutan array angka dari terbesar ke terkecil di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh `sort()` pada array angka?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `rsort()` dalam array PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `sort()` untuk mengurutkan array angka secara naik?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_push()` dalam PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen baru ke array di PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk memasukkan data ke akhir array PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambah data pada array tanpa mengganti elemen sebelumnya?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_push()` untuk menambah nama ke array?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_push()` jika digunakan pada array nama?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menambahkan banyak elemen ke array sekaligus?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apakah `array_push()` bisa menambahkan lebih dari satu elemen?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memasukkan elemen baru ke ujung array?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk menambahkan data di bagian akhir array?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `array_push()` dibandingkan penambahan manual?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `array_push($arr, $val)` dan `$arr[] = $val` di PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen 'karina' ke array nama yang sudah ada?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_push()` saat bekerja dengan array dinamis?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan data baru ke array nama menggunakan fungsi PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unshift()` dalam PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen di depan array di PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menyisipkan elemen ke indeks pertama array PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan nama baru ke urutan paling awal dalam array PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_unshift()` pada array yang sudah berisi data?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP mana yang dipakai untuk menambahkan elemen ke indeks 0?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan data ke posisi pertama dalam array?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unshift()` saat mengelola array nama?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `array_push()` dan `array_unshift()`?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan elemen sebelum elemen lain di array PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP untuk menambahkan data ke awal array?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana urutan array berubah setelah menggunakan `array_unshift()`?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk menambahkan elemen pertama dalam array di PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika `array_unshift()` dipakai pada array kosong?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menambah elemen di depan array di PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_merge()` dalam PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggabungkan dua array menjadi satu di PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menggabungkan isi dari beberapa array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil dari `array_merge()` jika digabungkan dua array berbeda?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang dipakai untuk menyatukan isi array di PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_merge()` dalam penggabungan data array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa output dari `array_merge(['a'], ['b', 'c'])`?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk menggabungkan beberapa array jadi satu?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggabungkan array nama dan array hewan di PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apakah `array_merge()` mempertahankan indeks asli dari array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa efek dari `array_merge()` jika digunakan pada array numerik?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `array_merge()` dalam pengolahan data array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `array_merge()` dengan operator `+` dalam PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil penggabungan array jika ada key yang sama di `array_merge()`?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa menyatukan beberapa array menjadi satu variabel baru?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa itu associative array dalam PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana bentuk struktur associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara indexed array dan associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array dengan key berupa string di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan key dalam associative array?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan associative array dalam PHP untuk data biodata?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa itu key dan value dalam associative array PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses data dalam associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apakah associative array bisa menyimpan tipe data berbeda dalam nilainya?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Mengapa associative array cocok untuk menyimpan data seperti profil pengguna?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa manfaat utama menggunakan associative array dibanding indexed array?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana format deklarasi associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa hasil output dari `print_r()` pada associative array?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apakah associative array bisa digunakan dalam looping seperti `foreach()`?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses data dalam associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks untuk mengambil nilai dari key pada associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa cara yang benar untuk membaca isi dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen array berdasarkan key string di PHP?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa cara menampilkan nilai dari associative array dengan key tertentu?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nama dan umur dari array berasosiasi?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengakses nilai dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak data dengan key tertentu dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengambil nilai dari array dengan key 'nama'?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis kode PHP untuk membaca nilai berdasarkan key di array asosiatif?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa bentuk penulisan kode untuk akses nilai dari associative array di PHP?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa metode untuk mengambil nilai dari array berdasarkan nama kunci di PHP?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Cara mengambil data dari associative array untuk ditampilkan di halaman web?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana format penulisan untuk mengakses key pada array asosiatif?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa cara paling sederhana untuk membaca isi dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah nilai dalam associative array di PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa cara untuk memperbarui data pada associative array di PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengedit isi key tertentu dalam associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa sintaks untuk mengganti isi dari key 'nama' dalam array asosiatif?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengubah data dalam array asosiatif tanpa menambahkan elemen baru?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Cara mengganti nilai di array PHP dengan key string?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana memperbarui isi array berasosiasi di PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `$data[\"nama\"] = \"Karina\";` pada associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apakah nilai dari key dalam associative array bisa diubah setelah dibuat?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengganti data nama dari 'Budi' menjadi 'Karina' dalam array PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita memberikan nilai baru pada key yang sudah ada di associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana format penulisan untuk mengganti nilai dalam associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa langkah untuk mengupdate isi key di array PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bisakah kita mengganti nilai dalam associative array tanpa membuat array baru?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh pengubahan data pada key tertentu dalam associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa itu array multidimensi dalam PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan array bersarang (nested array) di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur array multidimensi dalam PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan array multidimensi dalam PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan array multidimensi dalam data kompleks di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan array multidimensi di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses nilai dari array multidimensi PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa manfaat penggunaan array multidimensi dibanding array biasa?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara array satu dimensi dan multidimensi di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bisakah array di dalam array menyimpan array lagi di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh struktur array multidimensi untuk data geografis?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan array multidimensi dalam pengolahan data?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan isi array multidimensi menggunakan `print_r()`?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa saja elemen yang bisa disusun dalam array multidimensi?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apakah array multidimensi dapat berisi array asosiatif?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen dalam array multidimensi di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa sintaks untuk mengambil data dari array yang bersarang di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan data dari array multidimensi dengan indeks string dan angka?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengambil data dari array dalam array di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nilai pertama dari array 'hobi' dalam array multidimensi?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa cara mengakses elemen negara dari array multidimensi yang berada dalam array 'asia'?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana format penulisan untuk membaca data dari array 2 tingkat di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan elemen pertama dari array dalam array lainnya?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa metode akses elemen array bersarang menggunakan key dan index di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses array multidimensi untuk key 'Negara' dan subkey 'asia'?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa sintaks yang benar untuk membaca elemen dalam array multidimensi PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Contoh kode akses data dalam array bersarang untuk menampilkan hobi pertama?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa cara paling efisien untuk membaca nilai dari array nested dua tingkat?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apakah bisa mengakses array di dalam array dengan indeks string dan angka bersamaan?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan nilai 'indonesia' dari array $data2['Negara']['asia']?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_keys()` dalam associative array PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendapatkan semua key dari associative array di PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menampilkan seluruh kunci dalam array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengekstrak key dari sebuah associative array?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_keys()` jika digunakan pada array berasosiasi?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan daftar semua key pada associative array di PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa mengambil semua nama kunci dari array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_keys()` untuk associative array?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan `array_keys()` dalam pengolahan array PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil semua indeks string dari array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi mana yang digunakan untuk mendapatkan daftar key array di PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh `array_keys()` jika digunakan pada array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan semua key dari array yang menggunakan string sebagai indeks?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa peran `array_keys()` saat ingin mengetahui struktur array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_keys()` untuk debugging struktur array?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_values()` dalam associative array PHP?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendapatkan semua nilai dari associative array di PHP?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk mengekstrak semua value dari array asosiatif?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_values()` jika digunakan pada array berasosiasi?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan semua data tanpa key dari array asosiatif di PHP?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang menghasilkan array baru hanya berisi nilai-nilai dari array asosiatif?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa gunanya `array_values()` saat bekerja dengan associative array?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengekstrak data dari array asosiatif tanpa menyertakan key-nya?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_values()` pada array berindeks string?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP mana yang dipakai untuk mengubah array asosiatif jadi array numerik?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghilangkan key pada array asosiatif dan hanya menyimpan valuenya?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang bisa digunakan untuk mengambil hanya isi dari array berasosiasi?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh fungsi `array_values()` pada array asosiatif?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa manfaat dari fungsi `array_values()` dalam manipulasi data array?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah associative array menjadi array biasa dengan `array_values()`?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa itu looping dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan perulangan (loop) dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa looping digunakan dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi utama dari perulangan dalam pemrograman PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan kita menggunakan perulangan dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat menggunakan looping dalam kode PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa definisi dari struktur perulangan dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara kerja loop dalam bahasa PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa tujuan utama dari perulangan (looping) dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa konsep looping penting dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu pengulangan kode dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana looping membantu efisiensi dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa peran struktur loop dalam pemrograman PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Looping dalam PHP termasuk ke dalam struktur kontrol apa?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa arti istilah loop dalam dunia pemrograman PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan perulangan `for` di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `for` dalam PHP dan bagaimana cara menggunakannya?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya kita menggunakan `for` loop dalam PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks dasar dari loop `for` di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `for` untuk mencetak angka 0 sampai 4 di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur umum dari perulangan `for` dalam PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis perulangan `for` untuk 5 kali eksekusi?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `for($i=0; $i<5; $i++)` jika dicetak di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana looping `for` bekerja di PHP secara berurutan?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Untuk mencetak teks 5 kali, perulangan apa yang cocok digunakan di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa saja komponen dalam struktur `for` loop di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `for` loop untuk perulangan terkontrol?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari setiap bagian dalam perulangan `for` di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bisakah `for` digunakan untuk iterasi berurutan dalam PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh sederhana dari `for` loop dalam PHP seperti apa?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melakukan perulangan array menggunakan `for` di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak seluruh elemen array dengan `for` loop di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara terbaik menggunakan `for` untuk menelusuri array di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara loop array menggunakan indeks di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran fungsi `count()` dalam perulangan array di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh perulangan array dengan `for` dan `count()` dalam PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mencetak semua isi array secara berurutan dengan `for` di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa teknik dasar untuk melakukan looping array menggunakan `for`?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `count()` penting dalam `for` loop saat memproses array?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara sederhana untuk membaca isi array menggunakan perulangan `for`?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengakses elemen array satu per satu menggunakan `for` loop?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak seluruh nama hewan dari array menggunakan loop `for`?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa sintaks perulangan `for` yang digunakan untuk array indeks numerik?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggabungkan `for` dan array untuk looping dinamis di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan `count()` dalam `for` saat memproses array?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat perulangan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa langkah-langkah membuat loop `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks dasar untuk perulangan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode perulangan `for` dalam PHP seperti apa?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa format umum penggunaan `for` loop di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana perulangan `for` bekerja di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `for` dalam perulangan PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `for` loop dalam PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana bentuk perulangan terstruktur menggunakan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa saja komponen dalam perulangan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Seperti apa struktur `for` yang benar dalam PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `for` loop saat mencetak teks berulang di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa perulangan `for` cocok digunakan untuk iterasi terbatas?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `for` loop dalam menampilkan angka 0-4 di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode `for ($i=0; $i<5; $i++)` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `foreach` dalam PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `foreach` dalam PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `foreach` dalam perulangan array?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan `foreach` dibanding `for` saat memproses array?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `foreach` dalam mencetak isi array di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar penulisan `foreach` loop dalam PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh `foreach ($hewan as $h)` di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `foreach` sering digunakan untuk membaca array?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `foreach` dengan perulangan lainnya di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `foreach` memudahkan perulangan array dibanding `for`?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan `foreach` dalam array PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca seluruh elemen array menggunakan `foreach`?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `foreach` bisa digunakan untuk array asosiatif juga?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `foreach` cocok untuk perulangan pada array di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari perulangan `foreach` pada array hewan di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `foreach` untuk associative array di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca key dan value dari associative array menggunakan `foreach`?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara terbaik untuk looping associative array di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `foreach` untuk array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan key dan value dari associative array menggunakan `foreach`?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur `foreach` untuk array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan seluruh data dari associative array menggunakan loop?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks lengkap `foreach` untuk array yang berisi key dan value?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara menampilkan data `key => value` dari array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kenapa `foreach` cocok untuk array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan loop `foreach` untuk menampilkan data personal?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `foreach ($array as $key => $value)` di array asosiatif?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur terbaik untuk menampilkan key dan value array asosiatif?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan isi associative array baris per baris dengan `foreach`?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `foreach` untuk menampilkan biodata dari associative array?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `while` dalam PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja perulangan `while` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `while` loop dalam PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `while` dibanding `for` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar `while` loop dalam PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `while` langsung bernilai false?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak isi array dengan `while` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan utama antara `while` dan `do...while` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `while` cocok digunakan untuk kondisi yang tidak pasti?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa syarat agar perulangan `while` terus berjalan?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan variabel penghitung dalam `while` loop?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghindari infinite loop dalam `while`?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode `while` sederhana untuk menampilkan isi array?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan kode `while ($i < count($hewan))`?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil output dari contoh `while` yang mencetak isi array hewan?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `while` bernilai false dari awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah kode dalam `while` dijalankan jika kondisinya langsung false?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa output dari `while` jika kondisi tidak terpenuhi sejak awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa blok kode `while` bisa tidak berjalan sama sekali?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Kapan `while` tidak akan menjalankan isi perulangannya?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `while` tidak pernah benar sejak awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah mungkin `while` tidak mencetak apapun? Kapan itu terjadi?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Jika `while` dicek lebih dulu dan salah, apa yang terjadi?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `while` menangani kondisi awal yang tidak memenuhi?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang akan dicetak oleh `while` jika `$i = 10` dan kondisinya `$i < 5`?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah perulangan tetap berjalan jika kondisi awal `while` salah?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Kenapa `while` tidak menampilkan output apapun dalam kondisi tertentu?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kasus ketika `while` tidak melakukan iterasi sama sekali?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `while` akan berjalan jika kondisi tidak pernah benar?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara agar `while` tidak masuk infinite loop sejak awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `do while` dalam PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `do while` loop di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja perulangan `do while` dalam PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `while` dan `do while` di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `do while` dalam PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan dari `do while` dibanding `while`?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apakah `do while` selalu menjalankan kode minimal satu kali?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `do while` sederhana di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `do while` langsung false?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode `do while` jika kondisi tidak terpenuhi sejak awal?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa struktur dasar `do while` di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apakah `do while` bisa menghasilkan infinite loop?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Kenapa `do while` digunakan ketika ingin eksekusi minimal sekali?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa yang membuat `do while` unik dalam perulangan PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis perulangan `do while` dengan output angka?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `while` dan kapan `do while` dalam PHP?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan situasi penggunaan `while` dan `do while` di PHP?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan lebih tepat memakai `do while` dibanding `while` dalam PHP?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan utama penggunaan `while` dan `do while` dalam praktik?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam kasus apa kita wajib memakai `do while` daripada `while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa pertimbangan dalam memilih antara `while` dan `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam pengulangan, kapan `while` lebih efisien dari `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menentukan penggunaan `while` vs `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa memilih `do while` jika kita ingin eksekusi sekali dulu?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kelebihan `while` dibanding `do while` dalam kondisi awal tertentu?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa `do while` dijalankan minimal sekali meski kondisi salah?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa saja pertimbangan memilih `while` daripada `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh logika yang lebih cocok menggunakan `do while` daripada `while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah penggunaan `do while` lebih aman untuk validasi awal?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana menentukan loop yang tepat antara `while` dan `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu tipe data boolean dalam PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari tipe data boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Berapa nilai yang bisa dimiliki oleh tipe data boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo true` dan `echo false` di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa itu nilai `true` dan `false` dalam konteks boolean PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa representasi angka dari `true` dan `false` di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menangani tipe boolean saat dicetak?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan tipe boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apakah boolean termasuk tipe data dasar di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan variabel boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Nilai apa yang dihasilkan oleh boolean `false` saat dicetak?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apakah `true` dan `false` di PHP sama seperti di bahasa lain?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika kita echo `true` dan `false` di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana nilai boolean digunakan dalam logika PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa arti boolean `true` dan `false` saat dicetak di browser?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `if else` untuk memvalidasi kondisi dalam PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana penggunaan `if else` untuk validasi input di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `if else` dalam pemeriksaan password di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `if else` dalam pengkondisian di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana alur logika `if else` saat memeriksa nilai variabel?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana kondisi benar dan salah ditangani dengan `if else`?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika kondisi `if` bernilai false dalam struktur `if else`?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran `else` dalam kondisi bercabang di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if else` membantu menangani keputusan logika dalam program?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan struktur `if else` dalam pemrograman PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `if else` penting dalam pengambilan keputusan program?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `if` tidak terpenuhi?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur logika bercabang ditulis dalam PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa manfaat penggunaan `if else` saat memvalidasi data pengguna?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memeriksa kesesuaian password dengan `if else`?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `if else` untuk menentukan status umur?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `if else` untuk cek apakah seseorang sudah dewasa atau belum?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `if else` untuk menentukan apakah umur >= 17?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara memvalidasi batasan umur dengan `if else` di PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memisahkan status anak-anak dan dewasa menggunakan `if else`?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh program PHP yang menentukan usia dewasa dengan `if else`?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika umur 23, bagaimana hasil `if else` di PHP untuk cek kedewasaan?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if else` menentukan output berdasarkan nilai umur di PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat logika untuk menampilkan status umur dengan PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh skrip PHP untuk cek apakah seseorang masih anak-anak?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana logika kondisi `if else` bekerja pada pengecekan usia?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran operator perbandingan dalam `if else` saat cek umur?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memanfaatkan `if else` untuk logika sederhana tentang umur?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh praktis `if else` berdasarkan input umur di PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika cabang di PHP untuk kategori umur remaja dan dewasa?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menentukan apakah sebuah angka genap atau ganjil dengan `if else` di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `if else` untuk cek angka genap di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memeriksa angka ganjil dengan PHP menggunakan `if else`?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa logika untuk membedakan bilangan genap dan ganjil di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if else` digunakan untuk klasifikasi angka genap/ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `%` dalam menentukan genap atau ganjil di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah angka 8 termasuk genap? Tunjukkan dengan `if else` PHP.",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memeriksa sisa bagi untuk cek genap atau ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Tulis contoh PHP untuk menentukan angka genap atau ganjil.",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membedakan angka ganjil dan genap secara logika?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil dari `$angka % 2 == 0` pada angka genap?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa logika `if else` yang paling sederhana untuk cek genap/ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh if else PHP untuk angka dengan output genap/ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah fungsi `if else` bisa digunakan untuk validasi angka genap?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil cetakan jika angka yang dicek adalah 7?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `elseif` dalam PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `elseif` dalam struktur logika PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan `elseif` dalam pengkondisian bertingkat di PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `if`, `elseif`, dan `else` dalam PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur penggunaan `elseif` dalam logika diskon?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `elseif` bekerja dalam kondisi bertingkat?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `elseif` dalam perhitungan diskon belanja di PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `elseif` dibutuhkan dalam logika percabangan?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menulis `elseif` untuk tiga kondisi berbeda di PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika total belanja adalah 50000 pada kode `elseif` diskon?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `elseif` bisa digunakan lebih dari satu kali dalam satu blok?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran `elseif` dalam kode PHP yang mengevaluasi beberapa syarat?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Dalam logika belanja, bagaimana struktur `elseif` membantu klasifikasi diskon?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `elseif` digunakan dalam sistem diskon bertingkat?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan penggunaan `elseif` dibanding hanya `if` dan `else`?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan pernyataan `if` saja dalam PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari pernyataan `if` tunggal dalam PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana logika `if` bekerja jika tidak ada `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita hanya menggunakan `if` tanpa `else` di PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan pernyataan `if` sederhana di PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur `if` tunggal dalam PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `if` bernilai false tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana logika program jika hanya ada pernyataan `if` di PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti `if ($nilai >= 80)` dalam kode PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `if` bisa berdiri sendiri tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang akan dicetak jika nilai lebih besar dari atau sama dengan 80?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh `if` untuk menilai kelulusan tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan cukup menggunakan `if` saja dalam PHP tanpa kondisi lain?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan `if` tunggal dalam logika program?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana jika kondisi tidak terpenuhi pada `if` tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu pernyataan `if` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `if` di dalam pemrograman PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja pernyataan `if` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `if` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Contoh pernyataan `if` dasar di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu blok kode dalam pernyataan `if` PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa kita perlu `if` dalam struktur logika program PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `if` bernilai true di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks penulisan `if` yang benar di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti dari `if (kondisi)` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa tujuan dari penggunaan `if` di skrip PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika kondisi dalam `if` bernilai salah (false)?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana cara membuat percabangan menggunakan `if`?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana blok `if` bekerja jika kondisi terpenuhi?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa saja komponen utama dari pernyataan `if` di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` saja dalam PHP?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh skrip PHP yang hanya menggunakan `if` tanpa `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur kode `if` sederhana untuk kelulusan?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita cukup menggunakan `if` saja tanpa `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `if` jika nilai lebih dari 75?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memeriksa kelulusan hanya dengan `if`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika `if` sederhana untuk menilai hasil ujian?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa kita bisa hanya memakai `if` tanpa perlu `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `if` harus selalu diikuti dengan `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh `if` di PHP tanpa cabang lain?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if` bisa berdiri sendiri dalam logika program?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika nilai 80, bagaimana hasil dari kode `if ($nilai >= 75)`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa keluaran program jika kondisi `if` terpenuhi?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa isi blok `if` pada contoh penilaian kelulusan PHP?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh implementasi logika satu arah menggunakan `if` saja?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi dari operator perbandingan di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa kita menggunakan operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator perbandingan di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hasil dari penggunaan operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa jenis-jenis operator perbandingan yang ada di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan operator perbandingan digunakan dalam skrip PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa arti dari hasil `true` dan `false` pada operator perbandingan?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa output dari operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam situasi apa kita menggunakan operator perbandingan di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat utama menggunakan operator perbandingan?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa hasil operator perbandingan selalu boolean?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana operator perbandingan berperan dalam `if`?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hubungan antara operator perbandingan dan kondisi logika?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi operator `==` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator `==` di PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari simbol `==` dalam bahasa PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, kapan kita menggunakan `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `==` dan `===` di PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apakah `==` membandingkan tipe data di PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$x == $y` jika `$x = 5` dan `$y = \"5\"`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Kapan hasil dari operator `==` adalah true?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa output dari `5 == \"5\"` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita bandingkan integer dan string dengan `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menangani perbandingan nilai dengan `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, apa yang dibandingkan oleh `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari perbandingan `5 == 10`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana `==` berbeda dari `=` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa maksud dari `==` sebagai operator dalam kondisi logika PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `==` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `==` dan `===` dalam PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Kenapa `5 == \"5\"` bisa true tapi `5 === \"5\"` false di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Kapan kita harus menggunakan `===` dibanding `==` di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa yang membedakan `==` dengan `===` dalam logika PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Mengapa hasil dari `5 === \"5\"` adalah false?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa maksud operator identik `===` di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Contoh kasus perbandingan identik `===` di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Mengapa perbandingan identik penting dalam PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `==` dan `===` dalam membandingkan variabel?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil perbandingan `===` jika tipe data tidak sama?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Mengapa menggunakan `===` lebih ketat daripada `==`?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Dalam kondisi `if`, kapan sebaiknya pakai `===`?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `\"5\" === 5` di PHP dan alasannya?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP membandingkan tipe dan nilai sekaligus?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa keuntungan menggunakan `===` dalam validasi data?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!=` dalam PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti operator `!=` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek dua nilai tidak sama di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$a != $b` jika `$a = 5` dan `$b = 10`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan operator `!=` menghasilkan nilai `true` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `!=` dengan `!==` dalam PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `!=` bisa digunakan meski tipe datanya berbeda?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari operator tidak sama `!=` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `!=` untuk membandingkan angka di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan dua nilai dianggap tidak sama dengan operator `!=`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Contoh kondisi `!=` yang menghasilkan `true`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apakah `5 != \"5\"` akan menghasilkan false di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo 5 != 5;` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana operator `!=` digunakan dalam logika `if`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$a != $b` jika kedua nilainya sama?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti operator `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Kapan hasil dari `!==` bernilai true di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `!=` dan `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `5 !== \"5\"` menghasilkan true?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan nilai dan tipe sekaligus dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan operator identik tidak sama `!==` di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo 5 !== \"5\";` di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Kapan kita sebaiknya menggunakan `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana perbandingan ketat menggunakan `!==` bekerja?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa contoh perbandingan dengan `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `!==` digunakan untuk validasi ketat?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa makna `!==` jika tipe data variabel berbeda di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa peran `!==` dalam perbandingan yang ketat?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana membandingkan dua variabel agar berbeda nilai dan tipe?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `>` dan `<` dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan dua nilai dengan `>` dan `<` di PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari operator lebih besar dan lebih kecil dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan operator `>` dan `<` digunakan dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan operator `>` dan `<` dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `5 > 10` dan `5 < 10` di PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana operator `>` bekerja jika nilai kiri lebih kecil?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari perbandingan `10 > 5` dan `10 < 5`?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa keluaran dari operator `>` dan `<` jika nilainya sama?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `>` bisa digunakan untuk validasi angka lebih besar?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang dicek oleh operator `<` dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan fungsi `>` dan `<` pada logika pemrograman?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo $a > $b;` jika $a = 5 dan $b = 10?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari `a < b` dalam logika perbandingan PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan nilai numerik menggunakan `>` dan `<`?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `>=` dan `<=` dalam PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari operator `>=` dan `<=` di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `>=` dan `<=` dalam PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$a >= $b` jika $a = 5 dan $b = 10?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan operator lebih dari atau sama (`>=`) dalam PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa makna dari `<=` dalam perbandingan angka di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `>=` dan `<=` untuk logika kondisi di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil perbandingan jika nilai kiri dan kanan sama?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika $a dan $b bernilai sama dalam `>=` dan `<=`?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apakah `>=` dan `<=` juga membandingkan tipe data?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek apakah nilai lebih besar atau sama di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo 10 >= 10;` dan `echo 10 <= 10;`?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan perbandingan `>=` menghasilkan false di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari perbandingan `5 <= 10` di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika nilai kiri lebih kecil dari nilai kanan?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat program PHP untuk menentukan nilai huruf berdasarkan skor ujian?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat logika penilaian huruf dari angka menggunakan PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode PHP untuk konversi nilai angka ke huruf?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menentukan grade A sampai E di PHP berdasarkan skor?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh penerapan `if elseif else` untuk penilaian di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat skrip PHP untuk mengubah nilai angka menjadi huruf?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika pengkondisian untuk menentukan nilai A, B, C, D, E?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menilai hasil ujian otomatis di PHP berdasarkan angka?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat penilaian otomatis menggunakan if elseif else?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menyusun kondisi untuk memberikan nilai huruf di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh if elseif else untuk menentukan nilai akademik di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat aplikasi penilaian sederhana di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat logika rentang skor menjadi grade huruf di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika nilai siswa 85, bagaimana menentukan huruf nilai di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nama hari berdasarkan angka menggunakan `if` di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mencetak nama hari dari angka 1–7 dengan `if` di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh program `if` PHP untuk mencetak nama hari dari angka?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan hari berdasarkan input angka di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Cara menyesuaikan angka dengan nama hari dalam PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mencetak nama hari jika diberi angka dari 1 sampai 7?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika $hari = 5, apa output program nama hari di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menyusun kondisi `if` untuk hari Senin–Minggu di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa logika untuk menampilkan hari dari angka 1-7 menggunakan `if`?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa output jika `$hari = 9` pada program nama hari ini?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu `if` bersarang (nested if) dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan nested `if` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara kerja `if` bersarang dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan kita menggunakan `nested if` dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat menggunakan `if` bersarang dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu struktur percabangan bersarang di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana bentuk umum dari `if` di dalam `if` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa pengertian dari nested condition menggunakan `if` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa kita menggunakan `if` bersarang dalam logika program PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `if` di dalam `if` dalam pemrograman PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Seperti apa struktur logika `if` bersarang di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana menerapkan logika bersyarat bertingkat?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu `if` bertingkat dalam sintaks PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana menyusun `if` di dalam `if` untuk kondisi kompleks di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan sebaiknya memakai struktur `nested if` daripada `elseif` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` bersarang dalam PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bisakah beri contoh `if` dalam `if` (nested if) di PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode `nested if` untuk pembelian barang di PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh implementasi `if` bersarang dalam keputusan logika PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur `if` bersarang digunakan dalam pembelian barang di PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh real-life penggunaan `nested if` dalam PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bisa kasih contoh `if` bersarang yang mengevaluasi dua level kondisi?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `if` bersarang dalam kasus cek uang dan pembelian?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh program PHP yang menggunakan nested `if` untuk belanja?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Tunjukkan penggunaan `if` bersarang dalam kondisi keuangan sederhana di PHP.",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kondisi bersyarat dua tingkat dalam PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika `if` bersarang dengan dua sumber dana?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi if bersarang saat kondisi tambahan dibutuhkan?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `if` dalam `elseif` untuk logika kompleks PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan nilai boolean dalam kondisi `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan variabel boolean dalam `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `true` dan `false` bekerja dalam `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kondisi `if` dijalankan jika menggunakan nilai boolean?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika boolean bernilai `false` dalam `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil dari blok `else` jika variabel boolean bernilai `false`?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `if` dengan nilai boolean sederhana di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah kita bisa menggunakan boolean langsung dalam `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memeriksa nilai benar atau salah dalam kondisi `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana boolean berfungsi sebagai kondisi `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang ditampilkan jika nilai boolean dalam `if` adalah `false`?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh pemakaian boolean dalam percabangan PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa boolean `false` tidak menjalankan blok `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana output `if` dipengaruhi oleh nilai boolean?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan `if` dengan nilai boolean dalam PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` bersarang yang menggunakan variabel boolean sebagai kondisi awal?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika `if` bersarang menggunakan boolean sebagai kondisi awal?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur `nested if` dimulai dari variabel boolean di PHP?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan boolean sebagai syarat utama dalam logika bercabang?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana boolean digunakan sebagai awal dari `if` bersarang di PHP?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh `if` bersarang dengan pemeriksaan awal berupa boolean?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memanfaatkan boolean dalam percabangan `elseif` dengan `if` bersarang?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur logika bercabang yang diawali variabel boolean lalu `elseif`?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh `if else` dengan kondisi awal menggunakan nilai boolean?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Dalam situasi apa boolean bisa menjadi syarat awal `if` sebelum logika lain?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan boolean sebagai pemicu utama dalam blok `if` bersarang?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana boolean digunakan untuk memfilter logika pertama dalam percabangan?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana urutan eksekusi jika `if` awal menggunakan variabel boolean `false`?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa efek dari boolean `false` sebagai awal dari struktur `if elseif else`?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu `$_GET` dalam PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Fungsi `$_GET` di PHP digunakan untuk apa?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `$_GET['nama']` di PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil data dari URL menggunakan PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `$_GET` dalam halaman PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca parameter URL di PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `$_GET` dan `$_POST` dalam PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Mengapa `$_GET` cocok untuk data tidak sensitif?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengakses query string dengan PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Untuk apa `$_GET['nama']` digunakan dalam script PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Contoh kode PHP menggunakan `$_GET` untuk menampilkan nama?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika parameter `$_GET` tidak tersedia?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Kenapa data `$_GET` terlihat di URL browser?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana `$_GET` bekerja saat link diklik?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa jenis data yang ditangani oleh `$_GET` di PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa itu `$_POST` dalam PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Untuk apa `$_POST` digunakan dalam PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `$_POST` dalam menangkap input form?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `$_POST` dan `$_GET` dalam PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `$_POST` untuk menampilkan input nama?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menerima data dari form dengan method POST?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Mengapa `$_POST` digunakan untuk data sensitif?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca data dari `$_POST` di PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika key `$_POST['nama']` tidak ada?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `$_POST` daripada `$_GET`?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apakah `$_POST` aman untuk mengirim password pengguna?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan data dari input form menggunakan `$_POST`?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh `$_POST['nama']` jika form diisi?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Mengapa isi `$_POST` tidak terlihat di URL browser?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika form dikirim tanpa method POST?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara metode GET dan POST dalam pengiriman form di PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan metode GET atau POST pada form PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa metode POST lebih aman daripada GET dalam PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kelebihan dan kekurangan metode GET dibanding POST?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa data dari form login sebaiknya dikirim dengan metode POST?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana GET dan POST menyampaikan data ke server dalam PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah data yang dikirim dengan GET bisa dilihat pengguna lain?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa metode POST tidak menampilkan data di URL?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa alasan memilih GET untuk menampilkan hasil pencarian?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam kondisi apa form harus menggunakan GET di PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa efek keamanan dari menggunakan metode GET untuk login form?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah metode POST lebih cocok untuk menyimpan data ke database?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa data form tidak muncul di URL saat pakai POST?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang membedakan cara kerja GET dan POST di PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang terjadi jika data besar dikirim lewat metode GET?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana contoh form HTML yang mengirim data dengan metode POST ke PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat form HTML yang mengirim data ke PHP dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Contoh form sederhana dengan method POST dalam HTML?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja form dengan method POST di PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Form HTML ke PHP: bagaimana mengirim data dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa isi atribut `method` dan `action` pada form HTML ke PHP dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana struktur form HTML untuk kirim data nama ke PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Contoh form input nama dengan POST ke file PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Form HTML kirim data ke `proses.php` pakai POST, bagaimana caranya?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa yang perlu diperhatikan saat membuat form dengan method POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil data dari form POST di `proses.php`?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa isi form HTML untuk input nama dan kirim ke PHP lewat POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Contoh kode form HTML dan cara pengambilan datanya di PHP dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Mengapa harus gunakan method POST untuk form HTML ke PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana form HTML kirim data ke PHP dengan aman menggunakan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa itu operator logika dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Fungsi dari operator `&&`, `||`, dan `!` dalam PHP apa saja?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan operator logika dalam kondisi `if` di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti dari operator `&&` dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan menggunakan operator `||` dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!` dalam kondisi logika PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan operator logika `&&` dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek dua kondisi sekaligus di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika satu kondisi pada operator `&&` bernilai false?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan operator `&&` dan `||` dalam logika PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat kondisi gabungan dalam `if` di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa operator `&&` digunakan dalam pengecekan syarat di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `||` untuk dua pilihan syarat di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan operator `!` berguna dalam logika PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah operator logika bisa digunakan dalam satu pernyataan `if`?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu ternary operator dalam PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis ternary operator di PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari ternary operator di PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan ternary operator untuk menentukan kelulusan?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan ternary operator dibanding `if else` biasa?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan ternary operator dalam PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menentukan hasil dari kondisi dengan ternary operator?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa arti tanda `?` dan `:` dalam ternary operator PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat percabangan pendek dengan ternary operator?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode ternary ini jika nilai = 70?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apakah ternary operator bisa menggantikan semua `if else`?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks ternary operator untuk memeriksa nilai kelulusan?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bisakah ternary operator digunakan untuk mengisi variabel?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan ternary operator dalam kode singkat?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Berikan contoh ternary operator dalam PHP untuk mengecek nilai!",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat function dengan parameter dan return dalam PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP yang menerima parameter dan mengembalikan nilai?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa sintaks untuk membuat fungsi dengan parameter dan return di PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana mendefinisikan function yang menghitung luas dalam PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa peran `return` dalam sebuah function PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan hasil dari fungsi PHP yang memiliki return?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa contoh fungsi yang menerima satu parameter lalu mengembalikan hasil?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar fungsi dengan input dan output dalam PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika fungsi PHP tidak menggunakan return?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memanggil function PHP yang memiliki parameter?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa manfaat function dengan return dibanding hanya `echo` dalam body-nya?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP untuk menghitung luas persegi dengan return?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apakah kita bisa menyimpan hasil function ke dalam variabel?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat function PHP dengan parameter dinamis?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan return dalam sebuah function PHP yang menghitung nilai?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan include dan require dalam PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan include atau require di PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika file tidak ditemukan saat menggunakan require?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa efek dari error pada include dan require dalam PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa risiko menggunakan require jika file tidak tersedia?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Mengapa require lebih ketat dibandingkan include dalam PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan include untuk menyisipkan file di PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Kapan skrip akan berhenti jika menggunakan require?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan utama antara include dan require dalam penanganan error?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apakah include akan menghentikan eksekusi jika file tidak ditemukan?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana perilaku include dan require jika file gagal diakses?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Contoh script PHP yang menggunakan include untuk layout?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Jika file hilang, mana yang lebih aman: include atau require?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Perbedaan penggunaan include dan require untuk file header?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana error handling berbeda antara include dan require di PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melakukan validasi form dengan `isset()` dalam PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa kita perlu menggunakan `isset()` saat menangani form di PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode validasi tombol submit dengan `isset()` di PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek apakah tombol form sudah ditekan di PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa gunanya `isset($_POST['submit'])` dalam script PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Kenapa perlu `isset()` sebelum mengakses `$_POST`?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan isi form hanya setelah submit ditekan?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti `if (isset($_POST['submit']))` dalam PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `isset()` dalam pengecekan input form?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `isset()` agar form tidak error saat halaman dibuka?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Contoh pengecekan tombol submit menggunakan `isset()`?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `isset()` dalam validasi form?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan nama yang diketik setelah tombol diklik?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa form perlu divalidasi dengan `isset()` terlebih dahulu?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghindari error undefined index dengan `isset()`?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan function dalam pemrograman PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendefinisikan function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Contoh function sederhana dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa itu fungsi `salam()` dalam contoh PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memanggil function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa manfaat dari penggunaan function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa itu reusable code dengan function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Mengapa penting membuat function dalam skrip PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan function dengan perintah biasa di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apakah function bisa dipanggil berkali-kali dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa saja keunggulan menggunakan function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa hasil output dari function `salam()` berikut ini?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat function dengan parameter dalam PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu parameter dalam function PHP dan bagaimana cara menulisnya?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur function PHP yang menerima parameter?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP yang menerima nama sebagai input?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari function `sapa($nama)` saat dipanggil dengan `Budi`?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan parameter pada function di PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa manfaat function dengan parameter dibanding tanpa parameter?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika function dipanggil tanpa memberikan parameter?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengirim data ke function di PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bisakah function PHP menerima parameter dari inputan user?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa peran tanda kurung dalam deklarasi parameter function PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana mendefinisikan parameter dalam function PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `$nama` pada function `sapa`?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara agar function PHP bisa digunakan untuk nama yang berbeda-beda?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa arti dari `sapa(\"Budi\")` dalam kode PHP tersebut?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu return dalam function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `return` dalam sebuah function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan `return` di dalam function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengembalikan hasil dari function di PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode function yang menggunakan return di PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan function yang menggunakan return dan yang tidak?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana menyimpan hasil dari function ke dalam variabel?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan return dalam function matematika PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan baris `return $a + $b;` dalam function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana memproses hasil dari function yang dikembalikan oleh return?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bisakah function di PHP digunakan sebagai nilai dari variabel?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa keuntungan menggunakan return di function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan hasil perhitungan dari function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Mengapa function PHP harus menggunakan return untuk kalkulasi?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa arti nilai yang dikembalikan oleh function di PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan default parameter dalam PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa itu default parameter pada function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Kapan default parameter digunakan dalam function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika parameter tidak diberikan saat memanggil function?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa manfaat default parameter dalam function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP dengan default parameter?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari pemanggilan `sapa()` tanpa argumen?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apakah function bisa tetap berjalan meski parameter tidak diisi?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memberikan nilai default untuk parameter function?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `= \"Pengunjung\"` dalam function sapa?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan parameter default di function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Kenapa function tetap bisa jalan meskipun tidak diberi argumen?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Kapan waktu yang tepat menggunakan default parameter?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil output function sapa jika tidak diberi argumen?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bisakah function memiliki lebih dari satu default parameter?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bisakah satu function memanggil function lain dalam PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara satu function memanggil function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika sebuah function memanggil function lain?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Contoh function di PHP yang memanggil function lain?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa manfaat memanggil function lain dalam function PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apakah function bisa dipakai sebagai input function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara chaining function di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa output dari `kuadrat(angka())` dalam kode PHP ini?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Mengapa function dapat memanggil function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan modularisasi kode dengan function dalam function?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bisakah function digunakan untuk membentuk hasil dari function lain?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa contoh sederhana function memanggil function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apakah `kuadrat(angka())` sama seperti `kuadrat(5)`?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bisakah function dijadikan argumen untuk function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Mengapa `echo kuadrat(angka());` valid dalam PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa itu arrow function dalam PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Kapan arrow function diperkenalkan di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan arrow function dibanding function biasa di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Contoh arrow function sederhana dalam PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu sintaks `fn($a, $b) =>` dalam PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis arrow function di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tanda panah `=>` dalam arrow function PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Mengapa arrow function cocok untuk operasi sederhana?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari arrow function `fn($a, $b) => $a * $b;`?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bisakah arrow function mengakses variabel luar?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa beda arrow function dengan closure biasa di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apakah arrow function bisa digunakan seperti function biasa?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana arrow function digunakan untuk perhitungan cepat?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa keuntungan utama arrow function di PHP 7.4?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bisakah arrow function dipakai untuk fungsi matematis?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu anonymous function dalam PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan fungsi tanpa nama di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan anonymous function dalam PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Kapan anonymous function biasanya digunakan di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan anonymous function dibanding function biasa?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari anonymous function berikut saat dipanggil?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan function ke dalam variabel di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu closure atau fungsi tertutup dalam PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana mendefinisikan anonymous function dalam variabel?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apakah anonymous function bisa menerima parameter?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa gunanya anonymous function pada callback atau event handler?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana anonymous function dipanggil setelah disimpan di variabel?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan function biasa dan anonymous function di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Dapatkah anonymous function digunakan sebagai argument?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana menulis anonymous function yang mengembalikan nilai?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu fungsi rekursif dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja fungsi rekursif di PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan fungsi rekursif dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi rekursif untuk hitung mundur dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika fungsi rekursif tidak memiliki kondisi berhenti?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa itu base case dalam fungsi rekursif PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa saja contoh masalah yang cocok diselesaikan dengan rekursi?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan loop biasa dengan rekursi dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bisakah rekursi menggantikan perulangan `for` dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa itu fungsi yang memanggil dirinya sendiri dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Mengapa rekursi perlu kondisi berhenti (base case)?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menghindari infinite loop pada fungsi rekursif?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Contoh sederhana fungsi rekursif hitung mundur dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa peran dari `return` dalam fungsi rekursif?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana rekursi digunakan untuk mencetak angka mundur?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Jelaskan apa itu bahasa pemrograman C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Siapa pencipta bahasa pemrograman C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan bahasa C pertama kali dibuat?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi utama dari bahasa pemrograman C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Untuk apa bahasa C biasa digunakan?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kegunaan dari bahasa C dalam dunia pemrograman?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa bahasa C masih populer digunakan?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa saja aplikasi yang bisa dibuat dengan C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kelebihan dari bahasa pemrograman C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa karakteristik utama dari bahasa C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa sejarah singkat dari bahasa C?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Bahasa C dikembangkan oleh siapa dan kapan?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah bahasa C cocok untuk sistem embedded?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hubungan antara bahasa C dan sistem operasi?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa bahasa C dianggap penting dalam dunia komputer?",
    "jawaban": "C adalah bahasa pemrograman serbaguna yang dibuat oleh Dennis Ritchie di Bell Laboratories pada tahun 1972. Bahasa ini banyak digunakan untuk sistem operasi, embedded system, dan pemrograman tingkat rendah.",
    "kode": null
  },
  {
    "pertanyaan": "Apa alasan penting untuk belajar bahasa C?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa pemula sebaiknya belajar C lebih dulu?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat belajar bahasa C dalam dunia pemrograman?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa bahasa C masih relevan untuk dipelajari saat ini?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa keunggulan mempelajari bahasa C dibandingkan bahasa lain?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa keuntungan menguasai bahasa pemrograman C?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa C disebut sebagai bahasa dasar pemrograman?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang membuat bahasa C penting untuk dipelajari?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa C menjadi fondasi bagi bahasa lain?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang didapatkan jika belajar bahasa C?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hubungan bahasa C dengan bahasa modern seperti Java?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kontribusi bahasa C terhadap perkembangan pemrograman?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana C membantu memahami dasar-dasar coding?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa alasan bahasa C dijadikan dasar kurikulum pemrograman?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah belajar C akan membantu memahami Python?",
    "jawaban": "Bahasa C sangat populer dan menjadi dasar dari banyak bahasa modern seperti C++, Java, dan Python. Sintaks C bersifat minimalis, cepat, dan efisien. Menguasai C akan mempermudah belajar bahasa lain serta memahami konsep dasar pemrograman.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan antara bahasa C dan C++?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana C dan C++ berbeda satu sama lain?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan utama C dengan C++?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "C dan C++ itu sama atau berbeda?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa C++ disebut sebagai versi lanjutan dari C?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam hal apa saja C++ berbeda dari C?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang membedakan C++ dari C secara konsep?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah C++ lebih canggih dari C? Apa alasannya?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa C++ memiliki fitur OOP sedangkan C tidak?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan sintaks antara C dan C++?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana paradigma pemrograman di C dan C++ berbeda?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "C mendukung pemrograman seperti apa dibandingkan C++?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah C bisa menggunakan class seperti di C++?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "C++ berbasis objek, apakah C juga demikian?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah C++ bisa dianggap versi C yang lebih lengkap?",
    "jawaban": "C++ merupakan pengembangan dari bahasa C. Perbedaan utamanya adalah C++ mendukung paradigma pemrograman berorientasi objek (OOP) seperti class dan object, sedangkan C hanya mendukung pemrograman prosedural.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menulis program Hello World dalam bahasa C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Contoh program Hello World di bahasa C seperti apa?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Tuliskan kode program untuk mencetak Hello World di C!",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Apa kode dasar untuk Hello World menggunakan bahasa C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Bagaimana format penulisan Hello World di bahasa C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Kode program C sederhana untuk menampilkan Hello World?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Contoh penggunaan printf untuk menampilkan Hello World di C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Bagaimana menampilkan teks ke layar di C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Apa output dari program Hello World di C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Bagaimana struktur program Hello World pada bahasa C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Apa fungsi printf dalam program Hello World di C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Langkah awal menulis program di C dengan Hello World?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Kode Hello World untuk pemula di bahasa C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Seperti apa program C pertama yang biasa ditulis?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Apa isi program Hello World yang lengkap di C?",
    "jawaban": "Untuk menampilkan teks 'Hello World' di C, kita dapat menggunakan kode berikut:",
    "kode": "#include <stdio.h>\n\nint main() {\n    printf(\"Hello World\\n\");\n    return 0;\n}"
  },
  {
    "pertanyaan": "Apa arti dari return 0 dalam program C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa kita menulis return 0 di akhir fungsi main?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Fungsi return 0 dalam main() di bahasa C untuk apa?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan return 0 digunakan dalam program C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Apa maksud dari kode return 0 pada C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kegunaan pernyataan return 0 dalam C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa program C diakhiri dengan return 0?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Apa peran return 0 dalam sebuah program C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah return 0 wajib di program C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa return 0 digunakan dalam fungsi utama di C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh return 0 dalam main()?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa nilai yang dikembalikan harus 0 di C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Apa output atau efek dari return 0 di C?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah return 0 menandakan program berhasil?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Return 0 di C menandakan hal apa dalam eksekusi program?",
    "jawaban": "Pernyataan return 0; menandakan bahwa fungsi main() telah selesai dijalankan dan program berhasil dieksekusi tanpa error.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa harus menggunakan #include <stdio.h>?",
    "jawaban": "#include <stdio.h> digunakan untuk mengimpor pustaka standar input/output yang dibutuhkan saat menggunakan fungsi seperti printf() dan scanf().",
    "kode": null
  },
  {
    "pertanyaan": "Untuk menampilkan teks ke layar, kita menggunakan fungsi apa?",
    "jawaban": "Kita menggunakan fungsi printf().",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu komentar dalam bahasa C?",
    "jawaban": "Komentar adalah bagian dari kode yang tidak akan dijalankan oleh compiler. Komentar digunakan untuk menjelaskan kode agar mudah dipahami.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh komentar satu baris di C",
    "jawaban": "Komentar satu baris menggunakan simbol //",
    "kode": "// Ini adalah komentar satu baris"
  },
  {
    "pertanyaan": "Contoh komentar multi baris di C",
    "jawaban": "Komentar multi baris menggunakan simbol /* di awal dan */ di akhir.",
    "kode": "/*\nIni adalah komentar\nmulti baris\n*/"
  },
  {
    "pertanyaan": "Variabel adalah?",
    "jawaban": "Variabel adalah tempat untuk menyimpan nilai/data dalam program. Setiap variabel memiliki nama dan tipe data.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu int dalam bahasa C?",
    "jawaban": "int adalah tipe data dalam bahasa C yang digunakan untuk menyimpan bilangan bulat (integer).",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu float dalam bahasa C?",
    "jawaban": "float adalah tipe data dalam bahasa C yang digunakan untuk menyimpan bilangan pecahan (floating point).",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu char dalam bahasa C?",
    "jawaban": "char adalah tipe data dalam bahasa C yang digunakan untuk menyimpan satu karakter.",
    "kode": null
  },
  {
    "pertanyaan": "Cara membuat variabel di C",
    "jawaban": "Untuk membuat variabel, deklarasikan tipe data diikuti nama variabel.",
    "kode": "int a;      // variabel integer\ndouble b;   // variabel pecahanchar c;      // variabel karakter"
  },
  {
    "pertanyaan": "Apakah bisa deklarasi variabel tanpa menginisialisasi nilainya?",
    "jawaban": "Bisa. Namun variabel tersebut belum memiliki nilai awal, sehingga isinya bisa tidak terdefinisi hingga diisi secara eksplisit.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh deklarasi dan inisialisasi variabel di C",
    "jawaban": "Kita bisa mendeklarasikan dan langsung menginisialisasi variabel dalam satu baris.",
    "kode": "int x = 5;\nfloat y = 3.14;\nchar z = 'A';"
  },
  {
    "pertanyaan": "Contoh deklarasi dulu baru inisialisasi variabel di C",
    "jawaban": "Kita juga bisa mendeklarasikan terlebih dahulu, lalu menginisialisasinya kemudian.",
    "kode": "int a;\na = 10;\n\nfloat b;\nb = 3.14;\n\nchar c;\nc = 'A';"
  },
  {
    "pertanyaan": "Format specifier digunakan untuk apa?",
    "jawaban": "Format specifier digunakan dalam fungsi printf() dan scanf() untuk menunjukkan jenis data yang akan ditampilkan atau dibaca.",
    "kode": null
  },
  {
    "pertanyaan": "Format specifier diawali dengan apa?",
    "jawaban": "Format specifier diawali dengan tanda persen (%). Contohnya: %d, %f, %c.",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan integer?",
    "jawaban": "Format specifier untuk menampilkan integer adalah %d",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan float?",
    "jawaban": "Format specifier untuk menampilkan float adalah %f",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan char?",
    "jawaban": "Format specifier untuk menampilkan char adalah %c",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan string?",
    "jawaban": "Format specifier untuk menampilkan string adalah %s",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan octal?",
    "jawaban": "Format specifier untuk menampilkan octal adalah %o",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan hexadecimal?",
    "jawaban": "Format specifier untuk menampilkan hexadecimal adalah %x",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan pointer?",
    "jawaban": "Format specifier untuk menampilkan pointer adalah %p",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier untuk menampilkan string?",
    "jawaban": "Format specifier untuk menampilkan string adalah %s",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode format specifier di C",
    "jawaban": "Untuk menampilkan format specifier di C, kita bisa menggunakan fungsi printf()",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    float b = 3.14;\n    char c = 'A';\n    printf(\"a = %d\\nb = %f\\nc = %c\", a, b, c);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apakah variabel dalam c dapat diubah nilainya?",
    "jawaban": "Ya, variabel dalam C dapat diubah nilainya. Kita bisa mengubah nilai variabel dengan cara menginisialisasi ulang variabel tersebut.",
    "kode": null
  },
  {
    "pertanyaan": "cara overwrite variabel di C",
    "jawaban": "Untuk mengubah nilai variabel di C, kita bisa menginisialisasi ulang variabel tersebut.",
    "kode": "int a = 10; // mendeklarasikan variabel a bertipe int dan menginisialisasi nilainya 10\na = 20; // mengubah nilai variabel a menjadi 20"
  },
  {
    "pertanyaan": "cara menyalin variabel di C",
    "jawaban": "Untuk menyalin variabel di C, kita bisa menginisialisasi variabel baru dengan nilai variabel lama.",
    "kode": "int a = 10; // mendeklarasikan variabel a bertipe int dan menginisialisasi nilainya 10\nint b = a; // menyalin nilai variabel a ke variabel b"
  },
  {
    "pertanyaan": "cara menyalin ke variabel kosong di C",
    "jawaban": "Untuk menyalin ke variabel kosong di C, kita bisa menginisialisasi variabel baru dengan nilai variabel lama.",
    "kode": "int a; // mendeklarasikan variabel a bertipe int\nint b = a; // menyalin nilai variabel a ke variabel b"
  },
  {
    "pertanyaan": "apakah bisa mendeklarasikan variabel dengan nama yang sama?",
    "jawaban": "Tidak bisa, karena akan terjadi error. Nama variabel harus unik dalam satu scope.",
    "kode": null
  },
  {
    "pertanyaan": "apakah bisa mendeklarasikan variabel dalam satu baris dengan tipe data yang sama?",
    "jawaban": "Bisa, kita bisa mendeklarasikan beberapa variabel dengan tipe data yang sama dalam satu baris.",
    "kode": "int a, b, c; // mendeklarasikan variabel a, b, c bertipe int\nfloat d, e, f; // mendeklarasikan variabel d, e, f bertipe float\nchar g, h, i; // mendeklarasikan variabel g, h, i bertipe char"
  },

  {
    "pertanyaan": "apakah bisa memberikan nilai yang sama ke beberapa variabel dengan satu perintah?",
    "jawaban": "Bisa, kita bisa memberikan nilai yang sama ke beberapa variabel dengan satu perintah.",
    "kode": "int a, b, c; // mendeklarasikan variabel a, b, c bertipe int\na = b = c = 10; // memberikan nilai 10 ke variabel a, b, c"
  },
  {
    "pertanyaan": "apakah semua variabel dalam c harus memiliki nama yang unik?",
    "jawaban": "Ya, semua variabel dalam C harus memiliki nama yang unik dalam satu scope. Jika ada dua variabel dengan nama yang sama dalam satu scope, maka akan terjadi error.",
    "kode": null
  },
  {
    "pertanyaan": "apakah tipe data menenetukan ukuran dan jenis data yang dapat disimpan dalam variabel?",
    "jawaban": "Ya, tipe data menentukan ukuran dan jenis data yang dapat disimpan dalam variabel. Setiap tipe data memiliki ukuran yang berbeda-beda.",
    "kode": null
  },
  {
    "pertanyaan": "apa itu konstanta dalam bahasa C?",
    "jawaban": "Konstanta adalah nilai tetap yang tidak dapat diubah selama program berjalan. Konstanta biasanya digunakan untuk menyimpan nilai yang tidak berubah, seperti pi (3.14) atau e (2.71).",
    "kode": null
  },

  {
    "pertanyaan": "cara mendefinisikan konstanta di C",
    "jawaban": "Untuk mendefinisikan konstanta di C, kita bisa menggunakan kata kunci const di depan tipe data.",
    "kode": "const int a = 10; // mendefinisikan konstanta a bertipe int dan nilainya 10\nconst float b = 3.14; // mendefinisikan konstanta b bertipe float dan nilainya 3.14\nconst char c = 'A'; // mendefinisikan konstanta c bertipe char dan nilainya 'A'"
  },
  {
    "pertanyaan": "apa itu scanf() dalam bahasa C?",
    "jawaban": "scanf() adalah fungsi untuk membaca input dari keyboard. Fungsi ini digunakan untuk mengambil data dari pengguna.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode scanf() di C",
    "jawaban": "Untuk menggunakan scanf() di C, kita bisa menggunakan format specifier yang sesuai dengan tipe data yang akan dibaca.",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    float b;\n    char c;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    printf(\"Masukkan nilai b: \");\n    scanf(\"%f\", &b);\n    printf(\"Masukkan nilai c: \");\n    scanf(\"%c\", &c);\n    printf(\"a = %d\\nb = %f\\nc = %c\", a, b, c);\n    return 0;\n}"
  },
  {
    "pertanyaan": "&variabel adalah?",
    "jawaban": "&variabel adalah operator alamat yang digunakan untuk mengambil alamat dari variabel. Operator ini digunakan pada saat membaca input dari keyboard dengan fungsi scanf().",
    "kode": null
  },
  {
    "pertanyaan": "apa format specifier yang umum digunakan dalam scanf()?",
    "jawaban": "Format specifier yang umum digunakan dalam scanf() adalah %d untuk integer, %f untuk float, %c untuk char, dan %s untuk string.",
    "kode": null
  },
  {
    "pertanyaan": "cara membaca bilangan bulat dengan scanf()",
    "jawaban": "Untuk membaca bilangan bulat dengan scanf(), kita bisa menggunakan format specifier %d.",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    printf(\"a = %d\", a);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membaca bilangan pecahan dengan scanf()",
    "jawaban": "Untuk membaca bilangan pecahan dengan scanf(), kita bisa menggunakan format specifier %f.",
    "kode": "#include <stdio.h>\nint main() {\n    float b;\n    printf(\"Masukkan nilai b: \");\n    scanf(\"%f\", &b);\n    printf(\"b = %f\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membaca string dengan scanf()",
    "jawaban": "Untuk membaca string dengan scanf(), kita bisa menggunakan format specifier %s.",
    "kode": "#include <stdio.h>\nint main() {\n    char str[100];\n    printf(\"Masukkan string: \");\n    scanf(\"%s\", str);\n    printf(\"string = %s\", str);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator dalam bahasa C?",
    "jawaban": "Operator adalah simbol yang digunakan untuk melakukan operasi pada variabel atau nilai. Operator dibagi menjadi beberapa jenis, seperti operator aritmatika, operator relasional, operator logika, dan operator bitwise.",
    "kode": null
  },
  {
    "pertanyaan": "apa saja operator aritmatika dalam bahasa C?",
    "jawaban": "Operator aritmatika dalam bahasa C adalah + (penjumlahan), - (pengurangan), * (perkalian), / (pembagian), dan % (modulus).",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator aritmatika di C",
    "jawaban": "Untuk menggunakan operator aritmatika di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    printf(\"a + b = %d\\na - b = %d\\na * b = %d\\na / b = %d\\na %% b = %d\", a + b, a - b, a * b, a / b, a % b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator perbandingan dalam bahasa C?",
    "jawaban": "Operator perbandingan adalah operator yang digunakan untuk membandingkan dua nilai. Operator ini menghasilkan nilai true (1) jika perbandingan benar, dan false (0) jika perbandingan salah.",
    "kode": null
  },
  {
    "pertanyaan": "apa saja operator perbandingan dalam bahasa C?",
    "jawaban": "Operator perbandingan dalam bahasa C adalah == (sama dengan), != (tidak sama dengan), > (lebih besar dari), < (lebih kecil dari), >= (lebih besar sama dengan), dan <= (lebih kecil sama dengan).",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator perbandingan di C",
    "jawaban": "Untuk menggunakan operator perbandingan di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    printf(\"a == b = %d\\na != b = %d\\na > b = %d\\na < b = %d\\na >= b = %d\\na <= b = %d\", a == b, a != b, a > b, a < b, a >= b, a <= b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator logika dalam bahasa C?",
    "jawaban": "Operator logika adalah operator yang digunakan untuk menggabungkan beberapa kondisi. Operator ini menghasilkan nilai true (1) jika semua kondisi benar, dan false (0) jika ada salah satu kondisi yang salah.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator logika di C",
    "jawaban": "Untuk menggunakan operator logika di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    printf(\"a && b = %d\\na || b = %d\\n!a = %d\", a && b, a || b, !a);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator penugasan dalam bahasa C?",
    "jawaban": "operator penugasan adalah operator yang digunakan untuk memberikan nilai pada variabel. Operator ini biasanya digunakan untuk menginisialisasi variabel.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator penugasan di C",
    "jawaban": "Berikut adalah beberapa contoh penggunaan operator penugasan dalam bahasa C:",
    "kode": "#include <stdio.h>\n\nint main() {\n    int a = 10;      // operator penugasan '='\n    a += 5;          // sama dengan a = a + 5\n    a -= 2;          // sama dengan a = a - 2\n    a *= 3;          // sama dengan a = a * 3\n    a /= 4;          // sama dengan a = a / 4\n    a %= 3;          // sama dengan a = a % 3\n\n    printf(\"Nilai a: %d\\n\", a);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu boolean dalam bahasa C?",
    "jawaban": "Boolean adalah tipe data yang hanya memiliki dua nilai, yaitu true (benar) dan false (salah). Tipe data ini biasanya digunakan untuk menyimpan hasil dari operasi logika.",
    "kode": null
  },
  {
    "pertanyaan": "tipe data boolean dalam bahasa C",
    "jawaban": "Tipe data boolean dalam bahasa C tidak ada, tetapi kita bisa menggunakan tipe data int untuk menyimpan nilai boolean. Nilai 0 dianggap false, dan nilai selain 0 dianggap true.",
    "kode": null
  },
  {
    "pertanyaan": "apa itu operator bitwise dalam bahasa C?",
    "jawaban": "Operator bitwise adalah operator yang digunakan untuk melakukan operasi pada bit. Operator ini biasanya digunakan untuk melakukan operasi logika pada bilangan biner.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator bitwise di C",
    "jawaban": "Untuk menggunakan operator bitwise di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10; // 1010\n    int b = 5;  // 0101\n    printf(\"a & b = %d\\na | b = %d\\na ^ b = %d\\n~a = %d\\n<< a = %d\\n>> a = %d\", a & b, a | b, a ^ b, ~a, a << 1, a >> 1);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu operator ternary dalam bahasa C?",
    "jawaban": "Operator ternary adalah operator yang digunakan untuk melakukan operasi kondisional. Operator ini memiliki tiga operand, yaitu kondisi, nilai jika benar, dan nilai jika salah.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode operator ternary di C",
    "jawaban": "Untuk menggunakan operator ternary di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = (a > 5) ? 1 : 0;\n    printf(\"b = %d\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "sejak standar c99, apa itu bool?",
    "jawaban": "Sejak standar C99, bahasa C memiliki tipe data bool yang merupakan tipe data boolean. Tipe data ini didefinisikan dalam pustaka stdbool.h.",
    "kode": null
  },
  {
    "pertanyaan": "cara mendeklarasikan boolean di C",
    "jawaban": "Untuk mendeklarasikan boolean di C, kita bisa menggunakan tipe data bool yang didefinisikan dalam pustaka stdbool.h.",
    "kode": "#include <stdio.h>\n#include <stdbool.h>\nint main() {\n    bool a = true;\n    bool b = false;\n    printf(\"a = %d\\nb = %d\", a, b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membandingkan nilai dan variabel di C",
    "jawaban": "Untuk membandingkan nilai dan variabel di C, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a > b) {\n        printf(\"a lebih besar dari b\");\n    } else {\n        printf(\"a lebih kecil dari b\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membandingkan dua variabel di C",
    "jawaban": "Untuk membandingkan dua variabel di C, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a == b) {\n        printf(\"a sama dengan b\");\n    } else {\n        printf(\"a tidak sama dengan b\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh operator perbandingan == di C",
    "jawaban": "Untuk menggunakan operator perbandingan == di C, kita bisa menggunakan variabel atau nilai langsung.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a == b) {\n        printf(\"a sama dengan b\");\n    } else {\n        printf(\"a tidak sama dengan b\");\n    }\n    return 0;\n}"
  },

  {
    "pertanyaan": "membandingkan boolean di C",
    "jawaban": "Untuk membandingkan boolean di C, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\n#include <stdbool.h>\nint main() {\n    bool a = true;\n    bool b = false;\n    if (a == b) {\n        printf(\"a sama dengan b\");\n    } else {\n        printf(\"a tidak sama dengan b\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh kehidupan sehari-hari dari operator aritmatika",
    "jawaban": "Contoh kehidupan sehari-hari dari operator aritmatika adalah menghitung total belanjaan, menghitung jarak tempuh, menghitung waktu tempuh, dan lain-lain.",
    "kode": null
  },
  {
    "pertanyaan": "contoh kode kehidupan sehari-hari dari operator aritmatika",
    "jawaban": "Untuk menghitung total belanjaan, kita bisa menggunakan operator aritmatika.",
    "kode": "#include <stdio.h>\nint main() {\n    int harga1 = 10000;\n    int harga2 = 20000;\n    int total = harga1 + harga2;\n    printf(\"Total belanjaan: %d\", total);\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh kode kehidupan sehari-hari dari operator perbandingan",
    "jawaban": "Untuk membandingkan harga barang, kita bisa menggunakan operator perbandingan.",
    "kode": "#include <stdio.h>\nint main() {\n    int harga1 = 10000;\n    int harga2 = 20000;\n    if (harga1 < harga2) {\n        printf(\"Harga barang 1 lebih murah dari barang 2\");\n    } else {\n        printf(\"Harga barang 1 lebih mahal dari barang 2\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh kode kehidupan sehari-hari dari operator logika",
    "jawaban": "Untuk membandingkan dua kondisi, kita bisa menggunakan operator logika.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = 5;\n    if (a > 0 && b > 0) {\n        printf(\"a dan b positif\");\n    } else {\n        printf(\"a atau b negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu if dalam bahasa C?",
    "jawaban": "if adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode jika kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "if sangat berguna untuk?",
    "jawaban": "If sangat berguna untuk melakukan percabangan dalam program. Dengan menggunakan if, kita bisa menentukan jalur eksekusi program berdasarkan kondisi yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks if di C",
    "jawaban": "Untuk menggunakan if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    if (a > 0) {\n        printf(\"a positif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu else dalam bahasa C?",
    "jawaban": "else adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode jika kondisi yang diberikan bernilai false (salah).",
    "kode": null
  },
  {
    "pertanyaan": "else sangat berguna untuk?",
    "jawaban": "Else sangat berguna untuk menentukan jalur eksekusi program jika kondisi yang diberikan bernilai false.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks else di C",
    "jawaban": "Untuk menggunakan else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = -10;\n    if (a > 0) {\n        printf(\"a positif\");\n    } else {\n        printf(\"a negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu else if dalam bahasa C?",
    "jawaban": "else if adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode jika kondisi yang diberikan bernilai true (benar) dan kondisi sebelumnya bernilai false (salah).",
    "kode": null
  },
  {
    "pertanyaan": "else if sangat berguna untuk?",
    "jawaban": "Else if sangat berguna untuk menentukan jalur eksekusi program jika ada beberapa kondisi yang harus diperiksa.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks else if di C",
    "jawaban": "Untuk menggunakan else if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 0;\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus if di C",
    "jawaban": "Untuk menggunakan if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },

  {
    "pertanyaan": "contoh studi kasus if else di C",
    "jawaban": "Untuk menggunakan if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else {\n        printf(\"a negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus if else if di C",
    "jawaban": "Untuk menggunakan if else if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus if else if else di C",
    "jawaban": "Untuk menggunakan if else if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    if (a > 0) {\n        printf(\"a positif\");\n    } else if (a < 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a nol\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu switch dalam bahasa C?",
    "jawaban": "switch adalah pernyataan yang digunakan untuk melakukan percabangan. Pernyataan ini akan mengeksekusi blok kode berdasarkan nilai dari variabel yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "switch sangat berguna untuk?",
    "jawaban": "Switch sangat berguna untuk melakukan percabangan jika ada beberapa kondisi yang harus diperiksa dan kita ingin menggunakan nilai dari variabel sebagai dasar percabangan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks switch di C",
    "jawaban": "Untuk menggunakan switch di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 2;\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu case dalam bahasa C?",
    "jawaban": "case adalah pernyataan yang digunakan dalam switch untuk menentukan blok kode mana yang akan dieksekusi berdasarkan nilai dari variabel yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "case sangat berguna untuk?",
    "jawaban": "Case sangat berguna untuk menentukan blok kode mana yang akan dieksekusi berdasarkan nilai dari variabel yang diberikan dalam switch.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks case di C",
    "jawaban": "Untuk menggunakan case di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 2;\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu default dalam bahasa C?",
    "jawaban": "default adalah pernyataan yang digunakan dalam switch untuk menentukan blok kode mana yang akan dieksekusi jika tidak ada case yang cocok dengan nilai dari variabel yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "default sangat berguna untuk?",
    "jawaban": "Default sangat berguna untuk menentukan blok kode mana yang akan dieksekusi jika tidak ada case yang cocok dengan nilai dari variabel yang diberikan dalam switch.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks default di C",
    "jawaban": "Untuk menggunakan default di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 2;\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus switch di C",
    "jawaban": "Untuk menggunakan switch di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus switch case default di C",
    "jawaban": "Untuk menggunakan switch case default di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    switch (a) {\n        case 1:\n            printf(\"a = 1\");\n            break;\n        case 2:\n            printf(\"a = 2\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },

  {
    "pertanyaan": "apa itu ternary operator dalam bahasa C?",
    "jawaban": "ternary operator adalah operator yang digunakan untuk melakukan percabangan. Operator ini memiliki tiga operand, yaitu kondisi, nilai jika benar, dan nilai jika salah.",
    "kode": null
  },
  {
    "pertanyaan": "ternary operator sangat berguna untuk?",
    "jawaban": "ternary operator sangat berguna untuk melakukan percabangan dalam satu baris kode. Dengan menggunakan ternary operator, kita bisa menulis kode yang lebih ringkas dan mudah dibaca.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks ternary operator di C",
    "jawaban": "Untuk menggunakan ternary operator di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int b = (a > 5) ? 1 : 0;\n    printf(\"b = %d\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator di C",
    "jawaban": "Untuk menggunakan ternary operator di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    printf(\"b = %d\", b);\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan if else di C",
    "jawaban": "Untuk menggunakan ternary operator dengan if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    if (b == 1) {\n        printf(\"a positif\");\n    } else {\n        printf(\"a negatif\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan switch case di C",
    "jawaban": "Untuk menggunakan ternary operator dengan switch case di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    switch (b) {\n        case 1:\n            printf(\"a positif\");\n            break;\n        case 0:\n            printf(\"a negatif\");\n            break;\n        default:\n            printf(\"a tidak diketahui\");\n            break;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan if else if di C",
    "jawaban": "Untuk menggunakan ternary operator dengan if else if di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    if (b == 1) {\n        printf(\"a positif\");\n    } else if (b == 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a tidak diketahui\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "contoh studi kasus ternary operator dengan if else if else di C",
    "jawaban": "Untuk menggunakan ternary operator dengan if else if else di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    printf(\"Masukkan nilai a: \");\n    scanf(\"%d\", &a);\n    int b = (a > 0) ? 1 : 0;\n    if (b == 1) {\n        printf(\"a positif\");\n    } else if (b == 0) {\n        printf(\"a negatif\");\n    } else {\n        printf(\"a tidak diketahui\");\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "keuntungan menggunakan ternary operator di C",
    "jawaban": "lebih ringkas dan mudah dibaca, mengurangi jumlah baris kode, dan meningkatkan efisiensi program.",
    "kode": null
  },
  {
    "pertanyaan": "kekurangan menggunakan ternary operator di C",
    "jawaban": "ternary operator bisa membuat kode menjadi sulit dibaca jika digunakan secara berlebihan, dan bisa menyebabkan kesalahan logika jika tidak hati-hati.",
    "kode": null
  },
  {
    "pertanyaan": "apa itu while dalam bahasa C?",
    "jawaban": "while adalah pernyataan yang digunakan untuk melakukan perulangan. Pernyataan ini akan mengeksekusi blok kode selama kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "while sangat berguna untuk?",
    "jawaban": "while sangat berguna untuk melakukan perulangan jika kita tidak tahu berapa kali perulangan harus dilakukan. Dengan menggunakan while, kita bisa menentukan kondisi yang harus dipenuhi untuk melanjutkan perulangan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks while di C",
    "jawaban": "Untuk menggunakan while di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int i = 0;\n    while (i < 5) {\n        printf(\"i = %d\\n\", i);\n        i++;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu do while dalam bahasa C?",
    "jawaban": "do while adalah pernyataan yang digunakan untuk melakukan perulangan. Pernyataan ini akan mengeksekusi blok kode setidaknya satu kali, dan kemudian akan melanjutkan perulangan selama kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "do while sangat berguna untuk?",
    "jawaban": "do while sangat berguna untuk melakukan perulangan jika kita ingin memastikan bahwa blok kode dieksekusi setidaknya satu kali, terlepas dari kondisi yang diberikan.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks do while di C",
    "jawaban": "Untuk menggunakan do while di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int i = 0;\n    do {\n        printf(\"i = %d\\n\", i);\n        i++;\n    } while (i < 5);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu for dalam bahasa C?",
    "jawaban": "for adalah pernyataan yang digunakan untuk melakukan perulangan. Pernyataan ini akan mengeksekusi blok kode selama kondisi yang diberikan bernilai true (benar).",
    "kode": null
  },
  {
    "pertanyaan": "for sangat berguna untuk?",
    "jawaban": "for sangat berguna untuk melakukan perulangan jika kita tahu berapa kali perulangan harus dilakukan. Dengan menggunakan for, kita bisa menentukan inisialisasi, kondisi, dan increment/decrement dalam satu baris kode.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks for di C",
    "jawaban": "Untuk menggunakan for di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 0; i < 5; i++) {\n        printf(\"i = %d\\n\", i);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu break dalam bahasa C?",
    "jawaban": "break adalah pernyataan yang digunakan untuk menghentikan perulangan atau switch. Pernyataan ini akan keluar dari blok kode saat dieksekusi.",
    "kode": null
  },
  {
    "pertanyaan": "break sangat berguna untuk?",
    "jawaban": "break sangat berguna untuk menghentikan perulangan atau switch saat kondisi tertentu terpenuhi. Dengan menggunakan break, kita bisa menghindari eksekusi kode yang tidak perlu.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks break di C",
    "jawaban": "Untuk menggunakan break di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 0; i < 5; i++) {\n        if (i == 3) {\n            break;\n        }\n        printf(\"i = %d\\n\", i);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu continue dalam bahasa C?",
    "jawaban": "continue adalah pernyataan yang digunakan untuk melanjutkan perulangan. Pernyataan ini akan melewatkan iterasi saat dieksekusi.",
    "kode": null
  },
  {
    "pertanyaan": "continue sangat berguna untuk?",
    "jawaban": "continue sangat berguna untuk melewatkan iterasi tertentu dalam perulangan. Dengan menggunakan continue, kita bisa menghindari eksekusi kode yang tidak perlu pada iterasi tersebut.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks continue di C",
    "jawaban": "Untuk menggunakan continue di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 0; i < 5; i++) {\n        if (i == 3) {\n            continue;\n        }\n        printf(\"i = %d\\n\", i);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu goto dalam bahasa C?",
    "jawaban": "goto adalah pernyataan yang digunakan untuk melompat ke label tertentu dalam kode. Pernyataan ini akan mengalihkan alur eksekusi program ke label yang ditentukan.",
    "kode": null
  },
  {
    "pertanyaan": "goto sangat berguna untuk?",
    "jawaban": "goto sangat berguna untuk melompat ke label tertentu dalam kode. Namun, penggunaan goto sebaiknya dihindari karena bisa membuat kode sulit dibaca dan dipelihara.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks goto di C",
    "jawaban": "Untuk menggunakan goto di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int i = 0;\n    label:\n    printf(\"i = %d\\n\", i);\n    i++;\n    if (i < 5) {\n        goto label;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "struktur data array",
    "jawaban": "Array adalah struktur data yang digunakan untuk menyimpan sekumpulan data dengan tipe yang sama. Array memiliki indeks yang dimulai dari 0 hingga n-1, di mana n adalah jumlah elemen dalam array.",
    "kode": null
  },
  {
    "pertanyaan": "cara membuat array di C",
    "jawaban": "Untuk membuat array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5]; // mendeklarasikan array dengan 5 elemen\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengisi array di C",
    "jawaban": "Untuk mengisi array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5];\n    for (int i = 0; i < 5; i++) {\n        arr[i] = i + 1;\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses elemen array di C",
    "jawaban": "Untuk mengakses elemen array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5] = {1, 2, 3, 4, 5};\n    printf(\"Elemen pertama: %d\", arr[0]);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara menampilkan elemen array di C",
    "jawaban": "Untuk menampilkan elemen array di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int arr[5] = {1, 2, 3, 4, 5};\n    for (int i = 0; i < 5; i++) {\n        printf(\"Elemen ke-%d: %d\\n\", i + 1, arr[i]);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu pointer dalam bahasa C?",
    "jawaban": "Pointer adalah variabel yang menyimpan alamat memori dari variabel lain. Pointer digunakan untuk mengakses dan memanipulasi data di memori secara langsung.",
    "kode": null
  },
  {
    "pertanyaan": "pointer sangat berguna untuk?",
    "jawaban": "Pointer sangat berguna untuk menghemat memori, meningkatkan efisiensi program, dan memungkinkan penggunaan struktur data yang lebih kompleks seperti linked list, tree, dan graph.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks pointer di C",
    "jawaban": "Untuk menggunakan pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mendeklarasikan pointer p yang menyimpan alamat a\n    printf(\"Nilai a: %d\", *p); // mengakses nilai a melalui pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan pointer di C",
    "jawaban": "Untuk mendeklarasikan pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a;\n    int *p; // mendeklarasikan pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengisi pointer di C",
    "jawaban": "Untuk mengisi pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mengisi pointer p dengan alamat a\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses nilai melalui pointer di C",
    "jawaban": "Untuk mengakses nilai melalui pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mengisi pointer p dengan alamat a\n    printf(\"Nilai a: %d\", *p); // mengakses nilai a melalui pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara menampilkan nilai melalui pointer di C",
    "jawaban": "Untuk menampilkan nilai melalui pointer di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a; // mengisi pointer p dengan alamat a\n    printf(\"Nilai a: %d\", *p); // menampilkan nilai a melalui pointer p\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu fungsi dalam bahasa C?",
    "jawaban": "Fungsi adalah blok kode yang dapat dipanggil untuk melakukan tugas tertentu. Fungsi digunakan untuk mengorganisir kode, meningkatkan keterbacaan, dan menghindari pengulangan kode.",
    "kode": null
  },
  {
    "pertanyaan": "fungsi sangat berguna untuk?",
    "jawaban": "Fungsi sangat berguna untuk mengorganisir kode, meningkatkan keterbacaan, dan menghindari pengulangan kode. Dengan menggunakan fungsi, kita bisa membagi program menjadi bagian-bagian yang lebih kecil dan lebih mudah dikelola.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks fungsi di C",
    "jawaban": "Untuk menggunakan fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan fungsi di C",
    "jawaban": "Untuk mendeklarasikan fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello(); // mendeklarasikan fungsi hello\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}"
  },
  {
    "pertanyaan": "cara mengisi fungsi di C",
    "jawaban": "Untuk mengisi fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses fungsi di C",
    "jawaban": "Untuk mengakses fungsi di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nvoid hello() {\n    printf(\"Hello, World!\\n\");\n}\nint main() {\n    hello(); // memanggil fungsi hello\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu tipe data enum dalam bahasa C?",
    "jawaban": "Enum adalah tipe data yang digunakan untuk mendefinisikan variabel yang dapat memiliki satu dari beberapa nilai tetap. Enum digunakan untuk meningkatkan keterbacaan kode dan menghindari penggunaan angka magic.",
    "kode": null
  },
  {
    "pertanyaan": "enum sangat berguna untuk?",
    "jawaban": "Enum sangat berguna untuk mendefinisikan variabel yang dapat memiliki satu dari beberapa nilai tetap. Dengan menggunakan enum, kita bisa meningkatkan keterbacaan kode dan menghindari penggunaan angka magic.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks enum di C",
    "jawaban": "Untuk menggunakan enum di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef enum {\n    RED,\n    GREEN,\n    BLUE\n} Color;\nint main() {\n    Color c = RED;\n    printf(\"Color: %d\", c);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan enum di C",
    "jawaban": "Untuk mendeklarasikan enum di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef enum {\n    RED,\n    GREEN,\n    BLUE\n} Color;\nint main() {\n    Color c = RED;\n    printf(\"Color: %d\", c);\n    return 0;\n}"
  },

  {
    "pertanyaan": "apa itu tipe data struct dalam bahasa C?",
    "jawaban": "Struct adalah tipe data yang digunakan untuk mendefinisikan variabel yang dapat memiliki beberapa nilai dengan tipe yang berbeda. Struct digunakan untuk mengelompokkan data yang terkait.",
    "kode": null
  },
  {
    "pertanyaan": "struct sangat berguna untuk?",
    "jawaban": "Struct sangat berguna untuk mendefinisikan variabel yang dapat memiliki beberapa nilai dengan tipe yang berbeda. Dengan menggunakan struct, kita bisa mengelompokkan data yang terkait dan meningkatkan keterbacaan kode.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks struct di C",
    "jawaban": "Untuk menggunakan struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mendeklarasikan struct di C",
    "jawaban": "Untuk mendeklarasikan struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengisi struct di C",
    "jawaban": "Untuk mengisi struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara mengakses struct di C",
    "jawaban": "Untuk mengakses struct di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\nint main() {\n    Person p;\n    strcpy(p.name, \"John\");\n    p.age = 30;\n    printf(\"Name: %s, Age: %d\", p.name, p.age);\n    return 0;\n}"
  },
  {
    "pertanyaan": "cara membaca dan menulis file di C",
    "jawaban": "Untuk membaca dan menulis file di bahasa C, digunakan fungsi dari pustaka stdio.h seperti fopen, fprintf, fscanf, fgets, fputs, fread, fwrite, dan fclose. File dapat dibuka dalam mode 'r' (read), 'w' (write), atau 'a' (append).",
    "kode": "#include <stdio.h>\n\nint main() {\n    FILE *file;\n\n    // Menulis ke file\n    file = fopen(\"data.txt\", \"w\");\n    if (file != NULL) {\n        fprintf(file, \"Halo dunia!\\n\");\n        fclose(file);\n    }\n\n    // Membaca dari file\n    file = fopen(\"data.txt\", \"r\");\n    if (file != NULL) {\n        char buffer[100];\n        while (fgets(buffer, 100, file)) {\n            printf(\"%s\", buffer);\n        }\n        fclose(file);\n    }\n\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu malloc dalam bahasa C?",
    "jawaban": "malloc adalah fungsi yang digunakan untuk mengalokasikan memori secara dinamis. Fungsi ini mengembalikan pointer ke blok memori yang dialokasikan.",
    "kode": null
  },
  {
    "pertanyaan": "malloc sangat berguna untuk?",
    "jawaban": "malloc sangat berguna untuk mengalokasikan memori secara dinamis saat program berjalan. Dengan menggunakan malloc, kita bisa mengalokasikan memori sesuai kebutuhan dan menghindari pemborosan memori.",
    "kode": null
  },
  {
    "pertanyaan": "sintaks malloc di C",
    "jawaban": "Untuk menggunakan malloc di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int *arr;\n    arr = (int *)malloc(5 * sizeof(int)); // mengalokasikan memori untuk array dengan 5 elemen\n    if (arr == NULL) {\n        printf(\"Memory allocation failed\");\n        return 1;\n    }\n    free(arr); // membebaskan memori\n    return 0;\n}"
  },

  {
    "pertanyaan": "untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan fungsi fopen. Fungsi ini menerima dua argumen, yaitu nama file dan mode pembukaan (misalnya 'r' untuk membaca, 'w' untuk menulis, dan 'a' untuk menambahkan).",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "Daftar mode membuka file di C",
    "jawaban": "Berikut adalah daftar mode membuka file di C:\n1. 'r' - Membuka file untuk dibaca.\n2. 'w' - Membuka file untuk ditulis (menghapus isi file jika sudah ada).\n3. 'a' - Membuka file untuk ditambahkan (menulis di akhir file).\n4. 'rb' - Membuka file biner untuk dibaca.\n5. 'wb' - Membuka file biner untuk ditulis.\n6. 'ab' - Membuka file biner untuk ditambahkan.",
    "kode": null
  },
  {
    "pertanyaan": "program sederhana untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fungsi dasar untuk membuka file di C",
    "jawaban": "Berikut adalah beberapa fungsi dasar untuk membuka file di C:\n1. fopen - Membuka file.\n2. fclose - Menutup file.\n3. fprintf - Menulis ke file.\n4. fscanf - Membaca dari file.\n5. fgets - Membaca baris dari file.\n6. fputs - Menulis baris ke file.",
    "kode": null
  },
  {
    "pertanyaan": "fungsi fclose di C",
    "jawaban": "fclose adalah fungsi yang digunakan untuk menutup file yang telah dibuka. Fungsi ini menerima satu argumen, yaitu pointer ke file yang ingin ditutup.",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk menutup file di C",
    "jawaban": "Untuk menutup file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fopen di C",
    "jawaban": "fopen adalah fungsi yang digunakan untuk membuka file. Fungsi ini menerima dua argumen, yaitu nama file dan mode pembukaan (misalnya 'r' untuk membaca, 'w' untuk menulis, dan 'a' untuk menambahkan).",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk membuka file di C",
    "jawaban": "Untuk membuka file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fprintf di C",
    "jawaban": "fprintf adalah fungsi yang digunakan untuk menulis ke file. Fungsi ini menerima dua argumen, yaitu pointer ke file dan format string yang ingin ditulis.",
    "kode": null
  },
  {
    "pertanyaan": "apa fungsi fgets di C?",
    "jawaban": "fgets adalah fungsi yang digunakan untuk membaca baris dari file. Fungsi ini menerima tiga argumen, yaitu buffer untuk menyimpan hasil pembacaan, ukuran buffer, dan pointer ke file.",
    "kode": null
  },
  {
    "pertanyaan": "kode untuk membaca baris dari file di C",
    "jawaban": "Untuk membaca baris dari file di C, kita bisa menggunakan sintaks berikut:",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    char buffer[100];\n    file = fopen(\"data.txt\", \"r\"); // membuka file data.txt dalam mode baca\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n    fgets(buffer, 100, file); // membaca baris dari file\n    printf(\"%s\", buffer);\n    fclose(file); // menutup file\n    return 0;\n}"
  },
  {
    "pertanyaan": "fungsi fputs di C",
    "jawaban": "fputs adalah fungsi yang digunakan untuk menulis baris ke file. Fungsi ini menerima dua argumen, yaitu string yang ingin ditulis dan pointer ke file.",
    "kode": null
  },
  {
    "pertanyaan": "contoh latihan program catatan sederhana di C",
    "jawaban": "Berikut adalah contoh program catatan sederhana di C:\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    FILE *file;\n    char note[100];\n\n    file = fopen(\"notes.txt\", \"a\"); // membuka file notes.txt dalam mode tambah\n    if (file == NULL) {\n        printf(\"Error opening file\");\n        return 1;\n    }\n\n    printf(\"Masukkan catatan: \");\n    fgets(note, 100, stdin); // membaca catatan dari input\n    fputs(note, file); // menulis catatan ke file\n\n    fclose(file); // menutup file\n    return 0;\n}",
    "kode": null
  },
  {
    "pertanyaan": "apa itu nested loop dalam bahasa C?",
    "jawaban": "Nested loop adalah perulangan di dalam perulangan. Loop bagian dalam akan dieksekusi setiap kali loop bagian luar berjalan satu kali.",
    "kode": "#include <stdio.h>\nint main() {\n    for (int i = 1; i <= 3; i++) {\n        for (int j = 1; j <= 2; j++) {\n            printf(\"i = %d, j = %d\\n\", i, j);\n        }\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana membuat fungsi dengan parameter dan nilai kembali di C?",
    "jawaban": "Fungsi dapat menerima parameter dan mengembalikan nilai menggunakan keyword return.",
    "kode": "#include <stdio.h>\nint tambah(int a, int b) {\n    return a + b;\n}\nint main() {\n    int hasil = tambah(5, 3);\n    printf(\"Hasil penjumlahan: %d\", hasil);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu pointer ke pointer di C?",
    "jawaban": "Pointer ke pointer adalah variabel yang menyimpan alamat dari pointer lain.",
    "kode": "#include <stdio.h>\nint main() {\n    int a = 10;\n    int *p = &a;\n    int **pp = &p;\n    printf(\"Nilai a: %d\\n\", **pp);\n    return 0;\n}"
  },
  {
    "pertanyaan": "apa itu array of struct di C?",
    "jawaban": "Array of struct adalah array yang elemennya berupa struct.",
    "kode": "#include <stdio.h>\ntypedef struct {\n    char nama[20];\n    int umur;\n} Mahasiswa;\nint main() {\n    Mahasiswa mhs[2] = {{\"Andi\", 20}, {\"Budi\", 21}};\n    for (int i = 0; i < 2; i++) {\n        printf(\"%s berumur %d tahun\\n\", mhs[i].nama, mhs[i].umur);\n    }\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana penggunaan pointer untuk mengakses array di fungsi C?",
    "jawaban": "Kita bisa menggunakan pointer sebagai parameter fungsi untuk memproses array.",
    "kode": "#include <stdio.h>\nvoid cetak(int *arr, int size) {\n    for (int i = 0; i < size; i++) {\n        printf(\"%d \", *(arr + i));\n    }\n}\nint main() {\n    int data[] = {1, 2, 3};\n    cetak(data, 3);\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana cara menulis dan membaca file biner di C?",
    "jawaban": "Gunakan mode 'wb' dan 'rb' untuk menulis dan membaca file biner di C.",
    "kode": "#include <stdio.h>\nint main() {\n    FILE *file;\n    int data = 123;\n    file = fopen(\"file.bin\", \"wb\");\n    fwrite(&data, sizeof(int), 1, file);\n    fclose(file);\n\n    int baca;\n    file = fopen(\"file.bin\", \"rb\");\n    fread(&baca, sizeof(int), 1, file);\n    fclose(file);\n\n    printf(\"Data: %d\\n\", baca);\n    return 0;\n}"
  },
  {
    "pertanyaan": "bagaimana cara membuat header file sendiri di C?",
    "jawaban": "Header file dapat dibuat dengan ekstensi .h dan digunakan untuk mendefinisikan fungsi dan konstanta.",
    "kode": "// math_utils.h\n#ifndef MATH_UTILS_H\n#define MATH_UTILS_H\nint tambah(int a, int b);\n#endif\n\n// math_utils.c\n#include \"math_utils.h\"\nint tambah(int a, int b) {\n    return a + b;\n}\n\n// main.c\n#include <stdio.h>\n#include \"math_utils.h\"\nint main() {\n    printf(\"%d\\n\", tambah(3, 4));\n    return 0;\n}"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Gimana sih caranya menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Tuliskan langkah menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Salah satu cara yaitu: Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Apa itu heading dalam HTML?",
    "jawaban": "Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Jelaskan apa itu heading dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu heading dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Apa fungsi dari HTML entities?",
    "jawaban": "HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari HTML entities?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari HTML entities?",
    "jawaban": "Salah satu cara yaitu: HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Bagaimana cara membuat baris baru di HTML?",
    "jawaban": "Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Gimana sih caranya membuat baris baru di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Tuliskan langkah membuat baris baru di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <style> di HTML?",
    "jawaban": "Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari tag <style> di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari tag <style> di HTML?",
    "jawaban": "Salah satu cara yaitu: Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Apa saja jenis formatting teks dalam HTML?",
    "jawaban": "Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Jelaskan apa saja jenis formatting teks dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian saja jenis formatting teks dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis komentar di HTML?",
    "jawaban": "Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Gimana sih caranya menulis komentar di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Tuliskan langkah menulis komentar di HTML?",
    "jawaban": "Salah satu cara yaitu: Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Bagaimana cara memberi warna pada elemen HTML?",
    "jawaban": "Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Gimana sih caranya memberi warna pada elemen HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Tuliskan langkah memberi warna pada elemen HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Apa saja jenis list di HTML?",
    "jawaban": "HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Jelaskan apa saja jenis list di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian saja jenis list di HTML?",
    "jawaban": "Salah satu cara yaitu: HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat link di HTML?",
    "jawaban": "Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Gimana sih caranya membuat link di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Tuliskan langkah membuat link di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan gambar di HTML?",
    "jawaban": "Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Gimana sih caranya menampilkan gambar di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Tuliskan langkah menampilkan gambar di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <p> dalam HTML?",
    "jawaban": "Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari tag <p> dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari tag <p> dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan kode komputer di HTML?",
    "jawaban": "Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Gimana sih caranya menampilkan kode komputer di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Tuliskan langkah menampilkan kode komputer di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan emoji di HTML?",
    "jawaban": "Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Jelaskan bagaimana menambahkan emoji di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Menurutmu gimana menambahkan emoji di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Apa fungsi tag <head> di HTML?",
    "jawaban": "Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi tag <head> di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi tag <head> di HTML?",
    "jawaban": "Salah satu cara yaitu: Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Apa itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Jelaskan apa itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Salah satu cara yaitu: Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Apa itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Jelaskan apa itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Salah satu cara yaitu: Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <span>?",
    "jawaban": "Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari tag <span>?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari tag <span>?",
    "jawaban": "Salah satu cara yaitu: Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan video ke HTML?",
    "jawaban": "Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Gimana sih caranya menambahkan video ke HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Tuliskan langkah menambahkan video ke HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan HTML5?",
    "jawaban": "HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Jelaskan apa yang dimaksud dengan HTML5?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Coba jelaskan pengertian yang dimaksud dengan HTML5?",
    "jawaban": "Salah satu cara yaitu: HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara membuat tabel di HTML?",
    "jawaban": "Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Gimana sih caranya membuat tabel di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Tuliskan langkah membuat tabel di HTML?",
    "jawaban": "Salah satu cara yaitu: Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Apa itu elemen semantik di HTML?",
    "jawaban": "Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Jelaskan apa itu elemen semantik di HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian itu elemen semantik di HTML?",
    "jawaban": "Salah satu cara yaitu: Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Apa fungsi dari atribut id dalam HTML?",
    "jawaban": "Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Jelaskan apa fungsi dari atribut id dalam HTML?",
    "jawaban": "Untuk itu, kamu bisa menggunakan: Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Coba jelaskan pengertian fungsi dari atribut id dalam HTML?",
    "jawaban": "Salah satu cara yaitu: Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks 'Hello World' di HTML?",
    "jawaban": "Kamu bisa menampilkan teks 'Hello World' menggunakan tag <p> atau langsung dalam body.",
    "kode": "<!DOCTYPE html>\n<html>\n<body>\n  <p>Hello World</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Apa itu heading dalam HTML?",
    "jawaban": "Heading dalam HTML digunakan untuk membuat judul dari berbagai tingkat, mulai dari <h1> hingga <h6>.",
    "kode": "<h1>Ini Heading 1</h1>\n<h2>Ini Heading 2</h2>\n<h3>Ini Heading 3</h3>"
  },
  {
    "pertanyaan": "Apa fungsi dari HTML entities?",
    "jawaban": "HTML entities digunakan untuk menampilkan karakter khusus seperti <, >, &, dll.",
    "kode": "Contoh: &lt;, &gt;, &amp;, &copy;, &nbsp;"
  },
  {
    "pertanyaan": "Bagaimana cara membuat baris baru di HTML?",
    "jawaban": "Gunakan tag <br> untuk membuat baris baru di HTML.",
    "kode": "Teks baris pertama<br>Teks baris kedua"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <style> di HTML?",
    "jawaban": "Tag <style> digunakan untuk menambahkan CSS langsung dalam file HTML.",
    "kode": "<style>\np { color: blue; }\n</style>"
  },
  {
    "pertanyaan": "Apa saja jenis formatting teks dalam HTML?",
    "jawaban": "Beberapa jenis formatting teks di HTML: <b> bold, <i> italic, <u> underline, <mark> highlight.",
    "kode": "<p><b>Teks Bold</b>, <i>Teks Italic</i></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis komentar di HTML?",
    "jawaban": "Komentar di HTML ditulis menggunakan <!-- komentar -->",
    "kode": "<!-- Ini adalah komentar -->"
  },
  {
    "pertanyaan": "Bagaimana cara memberi warna pada elemen HTML?",
    "jawaban": "Gunakan atribut style dengan properti color atau background-color.",
    "kode": "<p style=\"color: red;\">Teks merah</p>"
  },
  {
    "pertanyaan": "Apa saja jenis list di HTML?",
    "jawaban": "HTML memiliki tiga jenis list: ordered list (<ol>), unordered list (<ul>), dan description list (<dl>).",
    "kode": "<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n</ul>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat link di HTML?",
    "jawaban": "Gunakan tag <a> dengan atribut href untuk membuat hyperlink.",
    "kode": "<a href=\"https://example.com\">Kunjungi Website</a>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan gambar di HTML?",
    "jawaban": "Gunakan tag <img> dengan atribut src dan alt.",
    "kode": "<img src=\"gambar.jpg\" alt=\"Deskripsi gambar\">"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <p> dalam HTML?",
    "jawaban": "Tag <p> digunakan untuk membuat paragraf.",
    "kode": "<p>Ini adalah paragraf.</p>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan kode komputer di HTML?",
    "jawaban": "Gunakan tag <code>, <pre>, atau <kbd> untuk menampilkan kode komputer.",
    "kode": "<pre><code>console.log('Hello');</code></pre>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan emoji di HTML?",
    "jawaban": "Gunakan Unicode atau salin langsung emoji ke HTML.",
    "kode": "<p>\ud83d\ude0a &#128512;</p>"
  },
  {
    "pertanyaan": "Apa fungsi tag <head> di HTML?",
    "jawaban": "Tag <head> digunakan untuk menyimpan metadata seperti judul, link CSS, dan script.",
    "kode": "<head>\n  <title>Judul Halaman</title>\n</head>"
  },
  {
    "pertanyaan": "Apa itu favicon di HTML dan bagaimana menambahkannya?",
    "jawaban": "Favicon adalah ikon kecil yang muncul di tab browser. Ditambahkan lewat tag <link> dalam <head>.",
    "kode": "<link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">"
  },
  {
    "pertanyaan": "Apa itu tag <div> dan untuk apa digunakan?",
    "jawaban": "Tag <div> adalah kontainer blok yang digunakan untuk mengelompokkan elemen.",
    "kode": "<div>\n  <p>Isi dalam div</p>\n</div>"
  },
  {
    "pertanyaan": "Apa fungsi dari tag <span>?",
    "jawaban": "Tag <span> adalah kontainer inline yang digunakan untuk styling sebagian teks.",
    "kode": "<p>Ini <span style=\"color:red\">merah</span></p>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan video ke HTML?",
    "jawaban": "Gunakan tag <video> dengan atribut controls dan source.",
    "kode": "<video width=\"320\" height=\"240\" controls>\n  <source src=\"video.mp4\" type=\"video/mp4\">\n</video>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan HTML5?",
    "jawaban": "HTML5 adalah versi terbaru HTML yang mendukung elemen baru seperti <article>, <section>, dan API tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara membuat tabel di HTML?",
    "jawaban": "Gunakan tag <table> bersama <tr>, <th>, dan <td> untuk membuat tabel.",
    "kode": "<table>\n  <tr><th>Nama</th><th>Umur</th></tr>\n  <tr><td>Ani</td><td>20</td></tr>\n</table>"
  },
  {
    "pertanyaan": "Apa itu elemen semantik di HTML?",
    "jawaban": "Elemen semantik menjelaskan makna konten seperti <article>, <footer>, <header>, <section>.",
    "kode": "<section>\n  <h2>Judul Seksi</h2>\n</section>"
  },
  {
    "pertanyaan": "Apa fungsi dari atribut id dalam HTML?",
    "jawaban": "Atribut id memberikan identitas unik pada elemen HTML yang bisa diakses dengan CSS atau JavaScript.",
    "kode": "<p id=\"paragraf1\">Paragraf dengan ID</p>"
  },
  {
    "pertanyaan": "Kalau mau nampilin teks hello world gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk nampilin teks hello world.\n",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Apa tag HTML buat nampilin teks hello world?",
    "jawaban": "Gunakan tag ini kalau kamu mau nampilin teks hello world:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk nampilin teks hello world itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat nampilin teks hello world:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk nampilin teks hello world apa ya?",
    "jawaban": "Biar bisa nampilin teks hello world, tinggal gunakan struktur HTML berikut:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk nampilin teks hello world dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat nampilin teks hello world:",
    "kode": "<p>Hello World</p>"
  },
  {
    "pertanyaan": "Kalau mau bikin judul besar gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin judul besar.\n",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin judul besar?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin judul besar:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin judul besar itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin judul besar:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin judul besar apa ya?",
    "jawaban": "Biar bisa bikin judul besar, tinggal gunakan struktur HTML berikut:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin judul besar dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin judul besar:",
    "kode": "<h1>Judul Besar</h1>"
  },
  {
    "pertanyaan": "Kalau mau ganti baris di paragraf gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk ganti baris di paragraf.\n",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Apa tag HTML buat ganti baris di paragraf?",
    "jawaban": "Gunakan tag ini kalau kamu mau ganti baris di paragraf:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Cara paling gampang untuk ganti baris di paragraf itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat ganti baris di paragraf:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk ganti baris di paragraf apa ya?",
    "jawaban": "Biar bisa ganti baris di paragraf, tinggal gunakan struktur HTML berikut:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk ganti baris di paragraf dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat ganti baris di paragraf:",
    "kode": "Ini baris pertama<br>Ini baris kedua"
  },
  {
    "pertanyaan": "Kalau mau nampilin gambar gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk nampilin gambar.\n",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Apa tag HTML buat nampilin gambar?",
    "jawaban": "Gunakan tag ini kalau kamu mau nampilin gambar:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Cara paling gampang untuk nampilin gambar itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat nampilin gambar:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk nampilin gambar apa ya?",
    "jawaban": "Biar bisa nampilin gambar, tinggal gunakan struktur HTML berikut:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk nampilin gambar dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat nampilin gambar:",
    "kode": "<img src=\"kue.jpg\" alt=\"Kue lezat\">"
  },
  {
    "pertanyaan": "Kalau mau bikin link ke halaman lain gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin link ke halaman lain.\n",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin link ke halaman lain?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin link ke halaman lain:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin link ke halaman lain itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin link ke halaman lain:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin link ke halaman lain apa ya?",
    "jawaban": "Biar bisa bikin link ke halaman lain, tinggal gunakan struktur HTML berikut:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin link ke halaman lain dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin link ke halaman lain:",
    "kode": "<a href=\"https://google.com\">Ke Google</a>"
  },
  {
    "pertanyaan": "Kalau mau tambah warna teks gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk tambah warna teks.\n",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Apa tag HTML buat tambah warna teks?",
    "jawaban": "Gunakan tag ini kalau kamu mau tambah warna teks:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk tambah warna teks itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat tambah warna teks:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk tambah warna teks apa ya?",
    "jawaban": "Biar bisa tambah warna teks, tinggal gunakan struktur HTML berikut:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk tambah warna teks dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat tambah warna teks:",
    "kode": "<p style=\"color:blue;\">Teks warna biru</p>"
  },
  {
    "pertanyaan": "Kalau mau bikin daftar belanja gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin daftar belanja.\n",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin daftar belanja?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin daftar belanja:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin daftar belanja itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin daftar belanja:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin daftar belanja apa ya?",
    "jawaban": "Biar bisa bikin daftar belanja, tinggal gunakan struktur HTML berikut:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin daftar belanja dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin daftar belanja:",
    "kode": "<ul><li>Telur</li><li>Tepung</li></ul>"
  },
  {
    "pertanyaan": "Kalau mau nampilin video gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk nampilin video.\n",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Apa tag HTML buat nampilin video?",
    "jawaban": "Gunakan tag ini kalau kamu mau nampilin video:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk nampilin video itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat nampilin video:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk nampilin video apa ya?",
    "jawaban": "Biar bisa nampilin video, tinggal gunakan struktur HTML berikut:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk nampilin video dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat nampilin video:",
    "kode": "<video controls><source src=\"vidio.mp4\" type=\"video/mp4\"></video>"
  },
  {
    "pertanyaan": "Kalau mau kasih komentar di html gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk kasih komentar di html.\n",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Apa tag HTML buat kasih komentar di html?",
    "jawaban": "Gunakan tag ini kalau kamu mau kasih komentar di html:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Cara paling gampang untuk kasih komentar di html itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat kasih komentar di html:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk kasih komentar di html apa ya?",
    "jawaban": "Biar bisa kasih komentar di html, tinggal gunakan struktur HTML berikut:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk kasih komentar di html dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat kasih komentar di html:",
    "kode": "<!-- Ini komentar -->"
  },
  {
    "pertanyaan": "Kalau mau bikin paragraf gimana ya?",
    "jawaban": "Kamu bisa pakai tag HTML seperti ini untuk bikin paragraf.\n",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Apa tag HTML buat bikin paragraf?",
    "jawaban": "Gunakan tag ini kalau kamu mau bikin paragraf:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Cara paling gampang untuk bikin paragraf itu gimana?",
    "jawaban": "Ini contoh yang umum dipakai saat bikin paragraf:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, tag untuk bikin paragraf apa ya?",
    "jawaban": "Biar bisa bikin paragraf, tinggal gunakan struktur HTML berikut:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Contoh paling dasar untuk bikin paragraf dong!",
    "jawaban": "Nih ya, biasanya orang pakai tag ini buat bikin paragraf:",
    "kode": "<p>Ini paragraf pertama saya</p>"
  },
  {
    "pertanyaan": "Gimana sih cara bikin form HTML di HTML?",
    "jawaban": "Untuk bikin form HTML, biasanya kita pakai tag seperti ini:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Saya mau bikin form HTML, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk bikin form HTML:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Apa nama tag buat bikin form HTML ya?",
    "jawaban": "Tag <form> dipakai untuk bikin form HTML. Ini contohnya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Contoh simpel bikin form HTML dong!",
    "jawaban": "Cara umum untuk bikin form HTML bisa kamu lihat di bawah ini:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Apa gunanya tag form dalam HTML?",
    "jawaban": "Tenang, bikin bikin form HTML itu gampang kok. Coba lihat contoh ini:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Baru belajar nih, bikin form HTML gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk bikin form HTML?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Kalau mau bikin form HTML, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk bikin form HTML, berikut contohnya:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Bikin form html itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk bikin form HTML:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat bikin form HTML gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<form action=\"/submit\" method=\"post\">\n  ...\n</form>"
  },
  {
    "pertanyaan": "Gimana sih cara nampilin kotak input teks di HTML?",
    "jawaban": "Untuk nampilin kotak input teks, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Saya mau nampilin kotak input teks, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk nampilin kotak input teks:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Apa nama tag buat nampilin kotak input teks ya?",
    "jawaban": "Tag <input text> dipakai untuk nampilin kotak input teks. Ini contohnya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Contoh simpel nampilin kotak input teks dong!",
    "jawaban": "Cara umum untuk nampilin kotak input teks bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Apa gunanya tag input text dalam HTML?",
    "jawaban": "Tenang, bikin nampilin kotak input teks itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Baru belajar nih, nampilin kotak input teks gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk nampilin kotak input teks?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Kalau mau nampilin kotak input teks, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk nampilin kotak input teks, berikut contohnya:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Nampilin kotak input teks itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk nampilin kotak input teks:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat nampilin kotak input teks gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"text\" name=\"nama\">"
  },
  {
    "pertanyaan": "Gimana sih cara nampilin label buat input di HTML?",
    "jawaban": "Untuk nampilin label buat input, biasanya kita pakai tag seperti ini:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Saya mau nampilin label buat input, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk nampilin label buat input:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Apa nama tag buat nampilin label buat input ya?",
    "jawaban": "Tag <label> dipakai untuk nampilin label buat input. Ini contohnya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Contoh simpel nampilin label buat input dong!",
    "jawaban": "Cara umum untuk nampilin label buat input bisa kamu lihat di bawah ini:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Apa gunanya tag label dalam HTML?",
    "jawaban": "Tenang, bikin nampilin label buat input itu gampang kok. Coba lihat contoh ini:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Baru belajar nih, nampilin label buat input gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk nampilin label buat input?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Kalau mau nampilin label buat input, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk nampilin label buat input, berikut contohnya:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Nampilin label buat input itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk nampilin label buat input:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat nampilin label buat input gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<label for=\"nama\">Nama:</label>\n<input type=\"text\" id=\"nama\">"
  },
  {
    "pertanyaan": "Gimana sih cara buat tombol submit di HTML?",
    "jawaban": "Untuk buat tombol submit, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Saya mau buat tombol submit, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk buat tombol submit:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Apa nama tag buat buat tombol submit ya?",
    "jawaban": "Tag <submit> dipakai untuk buat tombol submit. Ini contohnya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Contoh simpel buat tombol submit dong!",
    "jawaban": "Cara umum untuk buat tombol submit bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Apa gunanya tag submit dalam HTML?",
    "jawaban": "Tenang, bikin buat tombol submit itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Baru belajar nih, buat tombol submit gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk buat tombol submit?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Kalau mau buat tombol submit, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk buat tombol submit, berikut contohnya:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Buat tombol submit itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk buat tombol submit:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat buat tombol submit gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"submit\" value=\"Kirim\">"
  },
  {
    "pertanyaan": "Gimana sih cara bikin tombol reset di HTML?",
    "jawaban": "Untuk bikin tombol reset, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Saya mau bikin tombol reset, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk bikin tombol reset:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Apa nama tag buat bikin tombol reset ya?",
    "jawaban": "Tag <reset> dipakai untuk bikin tombol reset. Ini contohnya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Contoh simpel bikin tombol reset dong!",
    "jawaban": "Cara umum untuk bikin tombol reset bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Apa gunanya tag reset dalam HTML?",
    "jawaban": "Tenang, bikin bikin tombol reset itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Baru belajar nih, bikin tombol reset gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk bikin tombol reset?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Kalau mau bikin tombol reset, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk bikin tombol reset, berikut contohnya:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Bikin tombol reset itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk bikin tombol reset:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat bikin tombol reset gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"reset\" value=\"Reset\">"
  },
  {
    "pertanyaan": "Gimana sih cara pake tombol biasa di HTML?",
    "jawaban": "Untuk pake tombol biasa, biasanya kita pakai tag seperti ini:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Saya mau pake tombol biasa, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk pake tombol biasa:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Apa nama tag buat pake tombol biasa ya?",
    "jawaban": "Tag <button> dipakai untuk pake tombol biasa. Ini contohnya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Contoh simpel pake tombol biasa dong!",
    "jawaban": "Cara umum untuk pake tombol biasa bisa kamu lihat di bawah ini:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Apa gunanya tag button dalam HTML?",
    "jawaban": "Tenang, bikin pake tombol biasa itu gampang kok. Coba lihat contoh ini:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Baru belajar nih, pake tombol biasa gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk pake tombol biasa?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Kalau mau pake tombol biasa, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk pake tombol biasa, berikut contohnya:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Pake tombol biasa itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk pake tombol biasa:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat pake tombol biasa gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<button>Klik Saya</button>"
  },
  {
    "pertanyaan": "Gimana sih cara buat kotak centang di HTML?",
    "jawaban": "Untuk buat kotak centang, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Saya mau buat kotak centang, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk buat kotak centang:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Apa nama tag buat buat kotak centang ya?",
    "jawaban": "Tag <checkbox> dipakai untuk buat kotak centang. Ini contohnya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Contoh simpel buat kotak centang dong!",
    "jawaban": "Cara umum untuk buat kotak centang bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Apa gunanya tag checkbox dalam HTML?",
    "jawaban": "Tenang, bikin buat kotak centang itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Baru belajar nih, buat kotak centang gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk buat kotak centang?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Kalau mau buat kotak centang, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk buat kotak centang, berikut contohnya:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Buat kotak centang itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk buat kotak centang:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat buat kotak centang gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"checkbox\" name=\"hobi\" value=\"Membaca\"> Membaca"
  },
  {
    "pertanyaan": "Gimana sih cara milih warna di HTML?",
    "jawaban": "Untuk milih warna, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Saya mau milih warna, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk milih warna:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Apa nama tag buat milih warna ya?",
    "jawaban": "Tag <color> dipakai untuk milih warna. Ini contohnya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Contoh simpel milih warna dong!",
    "jawaban": "Cara umum untuk milih warna bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Apa gunanya tag color dalam HTML?",
    "jawaban": "Tenang, bikin milih warna itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Baru belajar nih, milih warna gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk milih warna?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Kalau mau milih warna, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk milih warna, berikut contohnya:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Milih warna itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk milih warna:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat milih warna gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"color\" name=\"warna\">"
  },
  {
    "pertanyaan": "Gimana sih cara input tanggal di HTML?",
    "jawaban": "Untuk input tanggal, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Saya mau input tanggal, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input tanggal:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input tanggal ya?",
    "jawaban": "Tag <date> dipakai untuk input tanggal. Ini contohnya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Contoh simpel input tanggal dong!",
    "jawaban": "Cara umum untuk input tanggal bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Apa gunanya tag date dalam HTML?",
    "jawaban": "Tenang, bikin input tanggal itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input tanggal gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input tanggal?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Kalau mau input tanggal, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input tanggal, berikut contohnya:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Input tanggal itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input tanggal:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input tanggal gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"date\" name=\"tanggal\">"
  },
  {
    "pertanyaan": "Gimana sih cara input tanggal dan waktu di HTML?",
    "jawaban": "Untuk input tanggal dan waktu, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Saya mau input tanggal dan waktu, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input tanggal dan waktu:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input tanggal dan waktu ya?",
    "jawaban": "Tag <datetime-local> dipakai untuk input tanggal dan waktu. Ini contohnya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Contoh simpel input tanggal dan waktu dong!",
    "jawaban": "Cara umum untuk input tanggal dan waktu bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Apa gunanya tag datetime-local dalam HTML?",
    "jawaban": "Tenang, bikin input tanggal dan waktu itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input tanggal dan waktu gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input tanggal dan waktu?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Kalau mau input tanggal dan waktu, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input tanggal dan waktu, berikut contohnya:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Input tanggal dan waktu itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input tanggal dan waktu:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input tanggal dan waktu gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"datetime-local\" name=\"waktu\">"
  },
  {
    "pertanyaan": "Gimana sih cara input minggu di HTML?",
    "jawaban": "Untuk input minggu, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Saya mau input minggu, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input minggu:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input minggu ya?",
    "jawaban": "Tag <week> dipakai untuk input minggu. Ini contohnya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Contoh simpel input minggu dong!",
    "jawaban": "Cara umum untuk input minggu bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Apa gunanya tag week dalam HTML?",
    "jawaban": "Tenang, bikin input minggu itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input minggu gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input minggu?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Kalau mau input minggu, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input minggu, berikut contohnya:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Input minggu itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input minggu:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input minggu gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"week\" name=\"minggu\">"
  },
  {
    "pertanyaan": "Gimana sih cara input email di HTML?",
    "jawaban": "Untuk input email, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Saya mau input email, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input email:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input email ya?",
    "jawaban": "Tag <email> dipakai untuk input email. Ini contohnya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Contoh simpel input email dong!",
    "jawaban": "Cara umum untuk input email bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Apa gunanya tag email dalam HTML?",
    "jawaban": "Tenang, bikin input email itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input email gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input email?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Kalau mau input email, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input email, berikut contohnya:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Input email itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input email:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input email gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"email\" name=\"email\">"
  },
  {
    "pertanyaan": "Gimana sih cara upload file di HTML?",
    "jawaban": "Untuk upload file, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Saya mau upload file, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk upload file:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Apa nama tag buat upload file ya?",
    "jawaban": "Tag <file> dipakai untuk upload file. Ini contohnya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Contoh simpel upload file dong!",
    "jawaban": "Cara umum untuk upload file bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Apa gunanya tag file dalam HTML?",
    "jawaban": "Tenang, bikin upload file itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Baru belajar nih, upload file gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk upload file?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Kalau mau upload file, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk upload file, berikut contohnya:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Upload file itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk upload file:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat upload file gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"file\" name=\"berkas\">"
  },
  {
    "pertanyaan": "Gimana sih cara input tersembunyi di HTML?",
    "jawaban": "Untuk input tersembunyi, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Saya mau input tersembunyi, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input tersembunyi:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input tersembunyi ya?",
    "jawaban": "Tag <hidden> dipakai untuk input tersembunyi. Ini contohnya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Contoh simpel input tersembunyi dong!",
    "jawaban": "Cara umum untuk input tersembunyi bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Apa gunanya tag hidden dalam HTML?",
    "jawaban": "Tenang, bikin input tersembunyi itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input tersembunyi gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input tersembunyi?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Kalau mau input tersembunyi, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input tersembunyi, berikut contohnya:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Input tersembunyi itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input tersembunyi:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input tersembunyi gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"hidden\" name=\"id\" value=\"123\">"
  },
  {
    "pertanyaan": "Gimana sih cara input berupa gambar di HTML?",
    "jawaban": "Untuk input berupa gambar, biasanya kita pakai tag seperti ini:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Saya mau input berupa gambar, tag apa yang dipakai?",
    "jawaban": "Kamu bisa mulai dengan contoh ini untuk input berupa gambar:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Apa nama tag buat input berupa gambar ya?",
    "jawaban": "Tag <image> dipakai untuk input berupa gambar. Ini contohnya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Contoh simpel input berupa gambar dong!",
    "jawaban": "Cara umum untuk input berupa gambar bisa kamu lihat di bawah ini:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Apa gunanya tag image dalam HTML?",
    "jawaban": "Tenang, bikin input berupa gambar itu gampang kok. Coba lihat contoh ini:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Baru belajar nih, input berupa gambar gimana bikinnya?",
    "jawaban": "Kalau kamu baru belajar, ini cara dasarnya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Ada gak cara cepat untuk input berupa gambar?",
    "jawaban": "Langsung aja, ini contoh kodenya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Kalau mau input berupa gambar, mulai dari mana?",
    "jawaban": "Tag ini memang cocok untuk input berupa gambar, berikut contohnya:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Input berupa gambar itu susah gak sih?",
    "jawaban": "Biasanya orang pakai struktur ini untuk input berupa gambar:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "HTML bisa dipakai buat input berupa gambar gak?",
    "jawaban": "Ini dasar banget, kamu bisa pakai kode berikut:",
    "kode": "<input type=\"image\" src=\"submit.png\" alt=\"Submit\">"
  },
  {
    "pertanyaan": "Bagaimana cara membuat form login sederhana dengan HTML?",
    "jawaban": "Form login sederhana bisa dibuat menggunakan tag <form> dengan input untuk username dan password.",
    "kode": "<form action=\"login.php\" method=\"post\">\n  <label for=\"username\">Username:</label>\n  <input type=\"text\" id=\"username\" name=\"username\"><br>\n  <label for=\"password\">Password:</label>\n  <input type=\"password\" id=\"password\" name=\"password\"><br>\n  <input type=\"submit\" value=\"Login\">\n</form>"
  },
  {
    "pertanyaan": "Gimana sih cara bikin form login pakai HTML doang?",
    "jawaban": "Tenang, kamu cukup pakai tag form dan input aja. Nih contohnya:",
    "kode": "<form>\n  <input type=\"text\" placeholder=\"Username\"><br>\n  <input type=\"password\" placeholder=\"Password\"><br>\n  <button type=\"submit\">Login</button>\n</form>"
  },
  {
    "pertanyaan": "Apa perbedaan antara ordered list, unordered list, dan description list dalam HTML?",
    "jawaban": "Ordered list menggunakan <ol>, unordered list <ul>, dan description list <dl>. Masing-masing punya fungsi berbeda.",
    "kode": "<ol><li>Satu</li><li>Dua</li></ol>\n<ul><li>Kucing</li><li>Anjing</li></ul>\n<dl><dt>HTML</dt><dd>Bahasa markup untuk web</dd></dl>"
  },
  {
    "pertanyaan": "Kalau mau bikin daftar yang ada nomornya gimana?",
    "jawaban": "Pakai tag <ol>. Kalau yang titik-titik, pakai <ul>. Nih contoh lengkapnya:",
    "kode": "<ol><li>Langkah 1</li><li>Langkah 2</li></ol>\n<ul><li>Item A</li><li>Item B</li></ul>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar halaman web HTML?",
    "jawaban": "Struktur dasar HTML terdiri dari tag <!DOCTYPE>, <html>, <head>, dan <body>.",
    "kode": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Halaman Pertama Saya</title>\n</head>\n<body>\n  <h1>Selamat Datang</h1>\n  <p>Ini halaman web pertama saya.</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Saya baru belajar nih, gimana sih bikin web paling dasar pakai HTML?",
    "jawaban": "Kamu bisa mulai dari struktur ini. Simpan sebagai .html dan buka di browser ya!",
    "kode": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Website Saya</title>\n</head>\n<body>\n  <h2>Hello, Dunia!</h2>\n  <p>Belajar HTML itu asik.</p>\n</body>\n</html>"
  },
  {
    "pertanyaan": "Apa itu HTML?",
    "jawaban": "HTML adalah singkatan dari HyperText Markup Language, yaitu bahasa markah standar untuk membuat halaman web.",
    "kode": null
  },
  {
    "pertanyaan": "HTML itu buat apa sih?",
    "jawaban": "HTML dipakai untuk menyusun struktur halaman web, seperti paragraf, gambar, link, dan lainnya.",
    "kode": null
  },
  {
    "pertanyaan": "Dari mana asal HTML?",
    "jawaban": "HTML pertama kali dibuat oleh Tim Berners-Lee pada tahun 1991 untuk keperluan berbagi dokumen melalui internet.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan HTML pertama kali muncul?",
    "jawaban": "HTML muncul pertama kali pada tahun 1991, dan sejak itu terus berkembang hingga sekarang.",
    "kode": null
  },
  {
    "pertanyaan": "Apa saja versi HTML yang pernah ada?",
    "jawaban": "Versi HTML antara lain: HTML 1.0, 2.0, 3.2, 4.01, XHTML, dan yang terbaru adalah HTML5.",
    "kode": null
  },
  {
    "pertanyaan": "Bedanya HTML sama HTML5 apa ya?",
    "jawaban": "HTML5 adalah versi terbaru yang mendukung elemen semantik, audio, video, dan penyimpanan lokal.",
    "kode": null
  },
  {
    "pertanyaan": "HTML itu bahasa pemrograman bukan sih?",
    "jawaban": "HTML bukan bahasa pemrograman, tapi bahasa markah yang digunakan untuk menyusun struktur konten web.",
    "kode": null
  },
  {
    "pertanyaan": "Saya baru belajar, HTML itu kayak gimana sih?",
    "jawaban": "HTML itu kayak kerangka atau rangka dari sebuah halaman web. Isinya bisa teks, gambar, dan tombol.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu CSS?",
    "jawaban": "CSS adalah singkatan dari Cascading Style Sheets, yaitu bahasa yang digunakan untuk mendesain tampilan halaman web.",
    "kode": null
  },
  {
    "pertanyaan": "CSS itu maksudnya apa ya?",
    "jawaban": "CSS adalah teknologi untuk mengatur warna, layout, font, dan tampilan visual sebuah halaman web.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa jelasin tentang CSS?",
    "jawaban": "CSS digunakan untuk mempercantik halaman HTML dengan mengatur gaya seperti warna, ukuran, dan posisi elemen.",
    "kode": null
  },
  {
    "pertanyaan": "Gimana cara pakai CSS dalam HTML?",
    "jawaban": "CSS bisa digunakan dengan tiga cara: inline style, internal style di tag <style>, atau dengan file eksternal .css.",
    "kode": null
  },
  {
    "pertanyaan": "Saya baru belajar, CSS itu gimana sih?",
    "jawaban": "CSS itu ibarat 'bajunya' halaman web, biar kelihatan rapi dan menarik dibanding HTML polos.",
    "kode": null
  },
  {
    "pertanyaan": "CSS dipakai buat apa dalam website?",
    "jawaban": "CSS dipakai untuk mengatur desain visual halaman web seperti warna, ukuran teks, dan posisi elemen.",
    "kode": null
  },
  {
    "pertanyaan": "Ada contoh simpel tentang CSS nggak?",
    "jawaban": "Contohnya, kamu bisa ubah warna teks menjadi merah dengan CSS: `p { color: red; }`",
    "kode": "<style>p { color: red; }</style>"
  },
  {
    "pertanyaan": "Kalau mau mulai belajar CSS, dari mana?",
    "jawaban": "Mulailah dari memahami selector, property, dan value dalam CSS seperti mengatur warna atau font.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh penggunaan CSS dalam halaman web dong!",
    "jawaban": "CSS digunakan untuk mengatur layout, warna background, ukuran teks, dan banyak lagi.",
    "kode": "<!DOCTYPE html>\n<html>\n<head>\n<style>\nbody { background-color: lightblue; }\nh1 { color: navy; }\n</style>\n</head>\n<body>\n<h1>Halo CSS!</h1>\n</body>\n</html>"
  },
  {
    "pertanyaan": "CSS itu penting nggak sih buat bikin website?",
    "jawaban": "Penting banget! Tanpa CSS, halaman web akan terlihat membosankan dan sulit diatur tampilannya.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu cara kerja internal CSS?",
    "jawaban": "Cara kerja internal css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Cara kerja internal css itu maksudnya apa ya?",
    "jawaban": "Untuk cara kerja internal CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang cara kerja internal CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang cara kerja internal CSS.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara kerja internal CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan cara kerja internal CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, cara kerja internal CSS itu gimana sih?",
    "jawaban": "Tenang, cara kerja internal CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "cara kerja internal CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang cara kerja internal CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti cara kerja internal CSS.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai cara kerja internal CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan cara kerja internal CSS berikut ini.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan cara kerja internal CSS dong!",
    "jawaban": "Biasanya cara kerja internal CSS digunakan seperti ini.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Cara kerja internal css itu penting gak sih?",
    "jawaban": "Ingat ya, cara kerja internal CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>\np { color: red; }\n</style>"
  },
  {
    "pertanyaan": "Apa itu cara menggunakan eksternal CSS?",
    "jawaban": "Cara menggunakan eksternal css adalah salah satu konsep penting dalam CSS.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Cara menggunakan eksternal css itu maksudnya apa ya?",
    "jawaban": "Untuk cara menggunakan eksternal CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang cara menggunakan eksternal CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang cara menggunakan eksternal CSS.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Gimana cara pakai cara menggunakan eksternal CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan cara menggunakan eksternal CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Saya baru belajar, cara menggunakan eksternal CSS itu gimana sih?",
    "jawaban": "Tenang, cara menggunakan eksternal CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "cara menggunakan eksternal CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang cara menggunakan eksternal CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti cara menggunakan eksternal CSS.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Kalau mau pakai cara menggunakan eksternal CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan cara menggunakan eksternal CSS berikut ini.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Contoh penggunaan cara menggunakan eksternal CSS dong!",
    "jawaban": "Biasanya cara menggunakan eksternal CSS digunakan seperti ini.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Cara menggunakan eksternal css itu penting gak sih?",
    "jawaban": "Ingat ya, cara menggunakan eksternal CSS sangat sering dipakai saat membuat website.",
    "kode": "<link rel=\"stylesheet\" href=\"style.css\">"
  },
  {
    "pertanyaan": "Apa itu penggunaan id dalam CSS?",
    "jawaban": "Penggunaan id dalam css adalah salah satu konsep penting dalam CSS.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Penggunaan id dalam css itu maksudnya apa ya?",
    "jawaban": "Untuk penggunaan id dalam CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang penggunaan id dalam CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang penggunaan id dalam CSS.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai penggunaan id dalam CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan penggunaan id dalam CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, penggunaan id dalam CSS itu gimana sih?",
    "jawaban": "Tenang, penggunaan id dalam CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "penggunaan id dalam CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang penggunaan id dalam CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti penggunaan id dalam CSS.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai penggunaan id dalam CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan penggunaan id dalam CSS berikut ini.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan penggunaan id dalam CSS dong!",
    "jawaban": "Biasanya penggunaan id dalam CSS digunakan seperti ini.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Penggunaan id dalam css itu penting gak sih?",
    "jawaban": "Ingat ya, penggunaan id dalam CSS sangat sering dipakai saat membuat website.",
    "kode": "<p id=\"judul\">Judul</p>\n<style>#judul { color: blue; }</style>"
  },
  {
    "pertanyaan": "Apa itu penggunaan class dalam CSS?",
    "jawaban": "Penggunaan class dalam css adalah salah satu konsep penting dalam CSS.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Penggunaan class dalam css itu maksudnya apa ya?",
    "jawaban": "Untuk penggunaan class dalam CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang penggunaan class dalam CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang penggunaan class dalam CSS.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai penggunaan class dalam CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan penggunaan class dalam CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, penggunaan class dalam CSS itu gimana sih?",
    "jawaban": "Tenang, penggunaan class dalam CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "penggunaan class dalam CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang penggunaan class dalam CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti penggunaan class dalam CSS.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai penggunaan class dalam CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan penggunaan class dalam CSS berikut ini.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan penggunaan class dalam CSS dong!",
    "jawaban": "Biasanya penggunaan class dalam CSS digunakan seperti ini.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Penggunaan class dalam css itu penting gak sih?",
    "jawaban": "Ingat ya, penggunaan class dalam CSS sangat sering dipakai saat membuat website.",
    "kode": "<p class=\"teks\">Halo</p>\n<style>.teks { font-size: 20px; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu combinator?",
    "jawaban": "Apa itu combinator adalah salah satu konsep penting dalam CSS.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Apa itu combinator itu maksudnya apa ya?",
    "jawaban": "Untuk apa itu combinator, biasanya digunakan dalam styling HTML.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang apa itu combinator?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang apa itu combinator.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu combinator dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan apa itu combinator, kamu bisa ikuti contoh berikut.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Saya baru belajar, apa itu combinator itu gimana sih?",
    "jawaban": "Tenang, apa itu combinator itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "apa itu combinator dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang apa itu combinator nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti apa itu combinator.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Kalau mau pakai apa itu combinator, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan apa itu combinator berikut ini.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu combinator dong!",
    "jawaban": "Biasanya apa itu combinator digunakan seperti ini.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Apa itu combinator itu penting gak sih?",
    "jawaban": "Ingat ya, apa itu combinator sangat sering dipakai saat membuat website.",
    "kode": "/* div > p { } */"
  },
  {
    "pertanyaan": "Apa itu apa itu child selector?",
    "jawaban": "Apa itu child selector adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Apa itu child selector itu maksudnya apa ya?",
    "jawaban": "Untuk apa itu child selector, biasanya digunakan dalam styling HTML.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang apa itu child selector?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang apa itu child selector.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu child selector dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan apa itu child selector, kamu bisa ikuti contoh berikut.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, apa itu child selector itu gimana sih?",
    "jawaban": "Tenang, apa itu child selector itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "apa itu child selector dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang apa itu child selector nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti apa itu child selector.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai apa itu child selector, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan apa itu child selector berikut ini.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu child selector dong!",
    "jawaban": "Biasanya apa itu child selector digunakan seperti ini.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Apa itu child selector itu penting gak sih?",
    "jawaban": "Ingat ya, apa itu child selector sangat sering dipakai saat membuat website.",
    "kode": "<style>div > p { color: green; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu sibling selector?",
    "jawaban": "Apa itu sibling selector adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Apa itu sibling selector itu maksudnya apa ya?",
    "jawaban": "Untuk apa itu sibling selector, biasanya digunakan dalam styling HTML.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang apa itu sibling selector?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang apa itu sibling selector.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu sibling selector dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan apa itu sibling selector, kamu bisa ikuti contoh berikut.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, apa itu sibling selector itu gimana sih?",
    "jawaban": "Tenang, apa itu sibling selector itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "apa itu sibling selector dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang apa itu sibling selector nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti apa itu sibling selector.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai apa itu sibling selector, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan apa itu sibling selector berikut ini.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu sibling selector dong!",
    "jawaban": "Biasanya apa itu sibling selector digunakan seperti ini.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Apa itu sibling selector itu penting gak sih?",
    "jawaban": "Ingat ya, apa itu sibling selector sangat sering dipakai saat membuat website.",
    "kode": "<style>h1 + p { color: red; }</style>"
  },
  {
    "pertanyaan": "Apa itu selector atribut?",
    "jawaban": "Selector atribut adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Selector atribut itu maksudnya apa ya?",
    "jawaban": "Untuk selector atribut, biasanya digunakan dalam styling HTML.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang selector atribut?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang selector atribut.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai selector atribut dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan selector atribut, kamu bisa ikuti contoh berikut.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, selector atribut itu gimana sih?",
    "jawaban": "Tenang, selector atribut itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "selector atribut dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang selector atribut nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti selector atribut.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai selector atribut, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan selector atribut berikut ini.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan selector atribut dong!",
    "jawaban": "Biasanya selector atribut digunakan seperti ini.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Selector atribut itu penting gak sih?",
    "jawaban": "Ingat ya, selector atribut sangat sering dipakai saat membuat website.",
    "kode": "<style>input[type=\"text\"] { border: 1px solid black; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur warna dengan CSS?",
    "jawaban": "Mengatur warna dengan css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Mengatur warna dengan css itu maksudnya apa ya?",
    "jawaban": "Untuk mengatur warna dengan CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang mengatur warna dengan CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang mengatur warna dengan CSS.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur warna dengan CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan mengatur warna dengan CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, mengatur warna dengan CSS itu gimana sih?",
    "jawaban": "Tenang, mengatur warna dengan CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "mengatur warna dengan CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang mengatur warna dengan CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti mengatur warna dengan CSS.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai mengatur warna dengan CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan mengatur warna dengan CSS berikut ini.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur warna dengan CSS dong!",
    "jawaban": "Biasanya mengatur warna dengan CSS digunakan seperti ini.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Mengatur warna dengan css itu penting gak sih?",
    "jawaban": "Ingat ya, mengatur warna dengan CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>body { background-color: lightblue; color: black; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur font dengan CSS?",
    "jawaban": "Mengatur font dengan css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Mengatur font dengan css itu maksudnya apa ya?",
    "jawaban": "Untuk mengatur font dengan CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang mengatur font dengan CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang mengatur font dengan CSS.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur font dengan CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan mengatur font dengan CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, mengatur font dengan CSS itu gimana sih?",
    "jawaban": "Tenang, mengatur font dengan CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "mengatur font dengan CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang mengatur font dengan CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti mengatur font dengan CSS.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai mengatur font dengan CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan mengatur font dengan CSS berikut ini.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur font dengan CSS dong!",
    "jawaban": "Biasanya mengatur font dengan CSS digunakan seperti ini.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Mengatur font dengan css itu penting gak sih?",
    "jawaban": "Ingat ya, mengatur font dengan CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>p { font-family: Arial; font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur jarak (spacing) di CSS?",
    "jawaban": "Mengatur jarak (spacing) di css adalah salah satu konsep penting dalam CSS.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak (spacing) di css itu maksudnya apa ya?",
    "jawaban": "Untuk mengatur jarak (spacing) di CSS, biasanya digunakan dalam styling HTML.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang mengatur jarak (spacing) di CSS?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang mengatur jarak (spacing) di CSS.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur jarak (spacing) di CSS dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan mengatur jarak (spacing) di CSS, kamu bisa ikuti contoh berikut.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, mengatur jarak (spacing) di CSS itu gimana sih?",
    "jawaban": "Tenang, mengatur jarak (spacing) di CSS itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "mengatur jarak (spacing) di CSS dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang mengatur jarak (spacing) di CSS nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti mengatur jarak (spacing) di CSS.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai mengatur jarak (spacing) di CSS, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan mengatur jarak (spacing) di CSS berikut ini.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur jarak (spacing) di CSS dong!",
    "jawaban": "Biasanya mengatur jarak (spacing) di CSS digunakan seperti ini.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak (spacing) di css itu penting gak sih?",
    "jawaban": "Ingat ya, mengatur jarak (spacing) di CSS sangat sering dipakai saat membuat website.",
    "kode": "<style>div { margin: 10px; padding: 20px; }</style>"
  },
  {
    "pertanyaan": "Apa itu pakai font dari Google Font?",
    "jawaban": "Pakai font dari google font adalah salah satu konsep penting dalam CSS.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Pakai font dari google font itu maksudnya apa ya?",
    "jawaban": "Untuk pakai font dari Google Font, biasanya digunakan dalam styling HTML.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Bisa dijelasin tentang pakai font dari Google Font?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang pakai font dari Google Font.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai pakai font dari Google Font dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan pakai font dari Google Font, kamu bisa ikuti contoh berikut.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Saya baru belajar, pakai font dari Google Font itu gimana sih?",
    "jawaban": "Tenang, pakai font dari Google Font itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "pakai font dari Google Font dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Ada contoh simpel tentang pakai font dari Google Font nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti pakai font dari Google Font.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Kalau mau pakai pakai font dari Google Font, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan pakai font dari Google Font berikut ini.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan pakai font dari Google Font dong!",
    "jawaban": "Biasanya pakai font dari Google Font digunakan seperti ini.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Pakai font dari google font itu penting gak sih?",
    "jawaban": "Ingat ya, pakai font dari Google Font sangat sering dipakai saat membuat website.",
    "kode": "<link href=\"https://fonts.googleapis.com/css2?family=Roboto\" rel=\"stylesheet\">\n<style>body { font-family: 'Roboto', sans-serif; }</style>"
  },
  {
    "pertanyaan": "Apa itu arti istilah CSS umum?",
    "jawaban": "Arti istilah css umum adalah salah satu konsep penting dalam CSS.",
    "kode": null
  },
  {
    "pertanyaan": "Arti istilah css umum itu maksudnya apa ya?",
    "jawaban": "Untuk arti istilah CSS umum, biasanya digunakan dalam styling HTML.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa dijelasin tentang arti istilah CSS umum?",
    "jawaban": "Berikut ini penjelasan dan contohnya tentang arti istilah CSS umum.",
    "kode": null
  },
  {
    "pertanyaan": "Gimana cara pakai arti istilah CSS umum dalam HTML?",
    "jawaban": "Kalau kamu ingin menggunakan arti istilah CSS umum, kamu bisa ikuti contoh berikut.",
    "kode": null
  },
  {
    "pertanyaan": "Saya baru belajar, arti istilah CSS umum itu gimana sih?",
    "jawaban": "Tenang, arti istilah CSS umum itu dasar banget kok. Nih penjelasan gampangnya.",
    "kode": null
  },
  {
    "pertanyaan": "arti istilah CSS umum dipakai buat apa dalam CSS?",
    "jawaban": "Ini salah satu hal yang sering digunakan dalam CSS sehari-hari.",
    "kode": null
  },
  {
    "pertanyaan": "Ada contoh simpel tentang arti istilah CSS umum nggak?",
    "jawaban": "Kalau kamu masih baru, ini cara mudah ngerti arti istilah CSS umum.",
    "kode": null
  },
  {
    "pertanyaan": "Kalau mau pakai arti istilah CSS umum, mulai dari mana?",
    "jawaban": "Simak contoh sederhana penggunaan arti istilah CSS umum berikut ini.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh penggunaan arti istilah CSS umum dong!",
    "jawaban": "Biasanya arti istilah CSS umum digunakan seperti ini.",
    "kode": null
  },
  {
    "pertanyaan": "Arti istilah css umum itu penting gak sih?",
    "jawaban": "Ingat ya, arti istilah CSS umum sangat sering dipakai saat membuat website.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu normal flow dalam CSS?",
    "jawaban": "Normal flow dalam css adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": null
  },
  {
    "pertanyaan": "Normal flow dalam css itu dipakai buat apa sih?",
    "jawaban": "Untuk normal flow dalam CSS, kamu bisa lihat contoh kode berikut.",
    "kode": null
  },
  {
    "pertanyaan": "Gimana cara pakai normal flow dalam CSS di CSS?",
    "jawaban": "Normal flow dalam css digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh kode untuk normal flow dalam CSS gimana ya?",
    "jawaban": "Ini contoh pemakaian normal flow dalam CSS yang umum digunakan di banyak website.",
    "kode": null
  },
  {
    "pertanyaan": "Normal flow dalam css itu susah nggak?",
    "jawaban": "Jangan khawatir, normal flow dalam CSS itu gampang dipahami kok!",
    "kode": null
  },
  {
    "pertanyaan": "Saya bingung, normal flow dalam CSS itu maksudnya apa?",
    "jawaban": "Normal flow dalam css membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": null
  },
  {
    "pertanyaan": "Kalau mau styling pakai normal flow dalam CSS, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan normal flow dalam CSS.",
    "kode": null
  },
  {
    "pertanyaan": "normal flow dalam CSS sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti normal flow dalam CSS, coba perhatikan contoh ini.",
    "kode": null
  },
  {
    "pertanyaan": "Cara paling gampang ngerti normal flow dalam CSS gimana?",
    "jawaban": "normal flow dalam CSS bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan normal flow dalam CSS yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja normal flow dalam CSS.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu penggunaan properti display?",
    "jawaban": "Penggunaan properti display adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Penggunaan properti display itu dipakai buat apa sih?",
    "jawaban": "Untuk penggunaan properti display, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai penggunaan properti display di CSS?",
    "jawaban": "Penggunaan properti display digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk penggunaan properti display gimana ya?",
    "jawaban": "Ini contoh pemakaian penggunaan properti display yang umum digunakan di banyak website.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Penggunaan properti display itu susah nggak?",
    "jawaban": "Jangan khawatir, penggunaan properti display itu gampang dipahami kok!",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, penggunaan properti display itu maksudnya apa?",
    "jawaban": "Penggunaan properti display membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai penggunaan properti display, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan penggunaan properti display.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "penggunaan properti display sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti penggunaan properti display, coba perhatikan contoh ini.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti penggunaan properti display gimana?",
    "jawaban": "penggunaan properti display bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan penggunaan properti display yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja penggunaan properti display.",
    "kode": "<style>div { display: inline-block; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu flexbox?",
    "jawaban": "Apa itu flexbox adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Apa itu flexbox itu dipakai buat apa sih?",
    "jawaban": "Untuk apa itu flexbox, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu flexbox di CSS?",
    "jawaban": "Apa itu flexbox digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk apa itu flexbox gimana ya?",
    "jawaban": "Ini contoh pemakaian apa itu flexbox yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Apa itu flexbox itu susah nggak?",
    "jawaban": "Jangan khawatir, apa itu flexbox itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, apa itu flexbox itu maksudnya apa?",
    "jawaban": "Apa itu flexbox membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai apa itu flexbox, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan apa itu flexbox.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "apa itu flexbox sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti apa itu flexbox, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti apa itu flexbox gimana?",
    "jawaban": "apa itu flexbox bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan apa itu flexbox yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja apa itu flexbox.",
    "kode": "<style>.container { display: flex; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur urutan item flex dengan order?",
    "jawaban": "Mengatur urutan item flex dengan order adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Mengatur urutan item flex dengan order itu dipakai buat apa sih?",
    "jawaban": "Untuk mengatur urutan item flex dengan order, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur urutan item flex dengan order di CSS?",
    "jawaban": "Mengatur urutan item flex dengan order digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengatur urutan item flex dengan order gimana ya?",
    "jawaban": "Ini contoh pemakaian mengatur urutan item flex dengan order yang umum digunakan di banyak website.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Mengatur urutan item flex dengan order itu susah nggak?",
    "jawaban": "Jangan khawatir, mengatur urutan item flex dengan order itu gampang dipahami kok!",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur urutan item flex dengan order itu maksudnya apa?",
    "jawaban": "Mengatur urutan item flex dengan order membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai mengatur urutan item flex dengan order, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan mengatur urutan item flex dengan order.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "mengatur urutan item flex dengan order sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti mengatur urutan item flex dengan order, coba perhatikan contoh ini.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti mengatur urutan item flex dengan order gimana?",
    "jawaban": "mengatur urutan item flex dengan order bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur urutan item flex dengan order yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja mengatur urutan item flex dengan order.",
    "kode": "<style>.item { order: 2; }</style>"
  },
  {
    "pertanyaan": "Apa itu membuat item flex bisa membesar dengan flex-grow?",
    "jawaban": "Membuat item flex bisa membesar dengan flex-grow adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Membuat item flex bisa membesar dengan flex-grow itu dipakai buat apa sih?",
    "jawaban": "Untuk membuat item flex bisa membesar dengan flex-grow, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai membuat item flex bisa membesar dengan flex-grow di CSS?",
    "jawaban": "Membuat item flex bisa membesar dengan flex-grow digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk membuat item flex bisa membesar dengan flex-grow gimana ya?",
    "jawaban": "Ini contoh pemakaian membuat item flex bisa membesar dengan flex-grow yang umum digunakan di banyak website.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Membuat item flex bisa membesar dengan flex-grow itu susah nggak?",
    "jawaban": "Jangan khawatir, membuat item flex bisa membesar dengan flex-grow itu gampang dipahami kok!",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, membuat item flex bisa membesar dengan flex-grow itu maksudnya apa?",
    "jawaban": "Membuat item flex bisa membesar dengan flex-grow membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai membuat item flex bisa membesar dengan flex-grow, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan membuat item flex bisa membesar dengan flex-grow.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "membuat item flex bisa membesar dengan flex-grow sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti membuat item flex bisa membesar dengan flex-grow, coba perhatikan contoh ini.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti membuat item flex bisa membesar dengan flex-grow gimana?",
    "jawaban": "membuat item flex bisa membesar dengan flex-grow bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan membuat item flex bisa membesar dengan flex-grow yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja membuat item flex bisa membesar dengan flex-grow.",
    "kode": "<style>.item { flex-grow: 1; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur posisi item dengan justify-content?",
    "jawaban": "Mengatur posisi item dengan justify-content adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Mengatur posisi item dengan justify-content itu dipakai buat apa sih?",
    "jawaban": "Untuk mengatur posisi item dengan justify-content, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur posisi item dengan justify-content di CSS?",
    "jawaban": "Mengatur posisi item dengan justify-content digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengatur posisi item dengan justify-content gimana ya?",
    "jawaban": "Ini contoh pemakaian mengatur posisi item dengan justify-content yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Mengatur posisi item dengan justify-content itu susah nggak?",
    "jawaban": "Jangan khawatir, mengatur posisi item dengan justify-content itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur posisi item dengan justify-content itu maksudnya apa?",
    "jawaban": "Mengatur posisi item dengan justify-content membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai mengatur posisi item dengan justify-content, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan mengatur posisi item dengan justify-content.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "mengatur posisi item dengan justify-content sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti mengatur posisi item dengan justify-content, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti mengatur posisi item dengan justify-content gimana?",
    "jawaban": "mengatur posisi item dengan justify-content bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur posisi item dengan justify-content yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja mengatur posisi item dengan justify-content.",
    "kode": "<style>.container { display: flex; justify-content: center; }</style>"
  },
  {
    "pertanyaan": "Apa itu align item secara vertikal dengan align-items?",
    "jawaban": "Align item secara vertikal dengan align-items adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Align item secara vertikal dengan align-items itu dipakai buat apa sih?",
    "jawaban": "Untuk align item secara vertikal dengan align-items, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai align item secara vertikal dengan align-items di CSS?",
    "jawaban": "Align item secara vertikal dengan align-items digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk align item secara vertikal dengan align-items gimana ya?",
    "jawaban": "Ini contoh pemakaian align item secara vertikal dengan align-items yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Align item secara vertikal dengan align-items itu susah nggak?",
    "jawaban": "Jangan khawatir, align item secara vertikal dengan align-items itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, align item secara vertikal dengan align-items itu maksudnya apa?",
    "jawaban": "Align item secara vertikal dengan align-items membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai align item secara vertikal dengan align-items, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan align item secara vertikal dengan align-items.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "align item secara vertikal dengan align-items sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti align item secara vertikal dengan align-items, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti align item secara vertikal dengan align-items gimana?",
    "jawaban": "align item secara vertikal dengan align-items bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan align item secara vertikal dengan align-items yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja align item secara vertikal dengan align-items.",
    "kode": "<style>.container { display: flex; align-items: center; }</style>"
  },
  {
    "pertanyaan": "Apa itu membungkus flex item dengan flex-wrap?",
    "jawaban": "Membungkus flex item dengan flex-wrap adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Membungkus flex item dengan flex-wrap itu dipakai buat apa sih?",
    "jawaban": "Untuk membungkus flex item dengan flex-wrap, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai membungkus flex item dengan flex-wrap di CSS?",
    "jawaban": "Membungkus flex item dengan flex-wrap digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk membungkus flex item dengan flex-wrap gimana ya?",
    "jawaban": "Ini contoh pemakaian membungkus flex item dengan flex-wrap yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Membungkus flex item dengan flex-wrap itu susah nggak?",
    "jawaban": "Jangan khawatir, membungkus flex item dengan flex-wrap itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, membungkus flex item dengan flex-wrap itu maksudnya apa?",
    "jawaban": "Membungkus flex item dengan flex-wrap membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai membungkus flex item dengan flex-wrap, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan membungkus flex item dengan flex-wrap.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "membungkus flex item dengan flex-wrap sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti membungkus flex item dengan flex-wrap, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti membungkus flex item dengan flex-wrap gimana?",
    "jawaban": "membungkus flex item dengan flex-wrap bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan membungkus flex item dengan flex-wrap yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja membungkus flex item dengan flex-wrap.",
    "kode": "<style>.container { display: flex; flex-wrap: wrap; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur arah baris flex dengan flex-direction?",
    "jawaban": "Mengatur arah baris flex dengan flex-direction adalah fitur CSS yang sering digunakan dalam layout modern.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Mengatur arah baris flex dengan flex-direction itu dipakai buat apa sih?",
    "jawaban": "Untuk mengatur arah baris flex dengan flex-direction, kamu bisa lihat contoh kode berikut.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur arah baris flex dengan flex-direction di CSS?",
    "jawaban": "Mengatur arah baris flex dengan flex-direction digunakan untuk mengatur elemen agar lebih responsif dan rapi.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengatur arah baris flex dengan flex-direction gimana ya?",
    "jawaban": "Ini contoh pemakaian mengatur arah baris flex dengan flex-direction yang umum digunakan di banyak website.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Mengatur arah baris flex dengan flex-direction itu susah nggak?",
    "jawaban": "Jangan khawatir, mengatur arah baris flex dengan flex-direction itu gampang dipahami kok!",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur arah baris flex dengan flex-direction itu maksudnya apa?",
    "jawaban": "Mengatur arah baris flex dengan flex-direction membantu membuat layout jadi fleksibel dan dinamis.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Kalau mau styling pakai mengatur arah baris flex dengan flex-direction, mulai dari mana?",
    "jawaban": "Nih contoh dasar penggunaan mengatur arah baris flex dengan flex-direction.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "mengatur arah baris flex dengan flex-direction sering dipakai nggak sih di web modern?",
    "jawaban": "Kalau kamu pengin ngerti mengatur arah baris flex dengan flex-direction, coba perhatikan contoh ini.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Cara paling gampang ngerti mengatur arah baris flex dengan flex-direction gimana?",
    "jawaban": "mengatur arah baris flex dengan flex-direction bisa bantu kamu bikin tampilan web lebih rapi dan teratur.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur arah baris flex dengan flex-direction yang simpel?",
    "jawaban": "Lihat kode berikut untuk tahu cara kerja mengatur arah baris flex dengan flex-direction.",
    "kode": "<style>.container { display: flex; flex-direction: column; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu CSS Grid?",
    "jawaban": "Apa itu css grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan apa itu CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu css grid biasanya dipakai buat apa?",
    "jawaban": "Apa itu css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan apa itu CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian apa itu CSS Grid.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, apa itu CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba apa itu CSS Grid.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Contoh kode apa itu CSS Grid yang gampang dong.",
    "jawaban": "Apa itu css grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai apa itu CSS Grid dalam proyek kamu.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai apa itu CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar apa itu CSS Grid lewat contoh ini.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan apa itu CSS Grid?",
    "jawaban": "apa itu CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "apa itu CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh apa itu CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { display: grid; grid-template-columns: 1fr 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu cara mengatur kolom di CSS Grid?",
    "jawaban": "Cara mengatur kolom di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara mengatur kolom di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan cara mengatur kolom di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Cara mengatur kolom di css grid biasanya dipakai buat apa?",
    "jawaban": "Cara mengatur kolom di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan cara mengatur kolom di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian cara mengatur kolom di CSS Grid.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, cara mengatur kolom di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba cara mengatur kolom di CSS Grid.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Contoh kode cara mengatur kolom di CSS Grid yang gampang dong.",
    "jawaban": "Cara mengatur kolom di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Cara mengatur kolom di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai cara mengatur kolom di CSS Grid dalam proyek kamu.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai cara mengatur kolom di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar cara mengatur kolom di CSS Grid lewat contoh ini.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan cara mengatur kolom di CSS Grid?",
    "jawaban": "cara mengatur kolom di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "cara mengatur kolom di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh cara mengatur kolom di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { grid-template-columns: 200px 1fr; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur baris di CSS Grid?",
    "jawaban": "Mengatur baris di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur baris di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan mengatur baris di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Mengatur baris di css grid biasanya dipakai buat apa?",
    "jawaban": "Mengatur baris di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur baris di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian mengatur baris di CSS Grid.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur baris di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba mengatur baris di CSS Grid.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Contoh kode mengatur baris di CSS Grid yang gampang dong.",
    "jawaban": "Mengatur baris di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Mengatur baris di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai mengatur baris di CSS Grid dalam proyek kamu.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai mengatur baris di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar mengatur baris di CSS Grid lewat contoh ini.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan mengatur baris di CSS Grid?",
    "jawaban": "mengatur baris di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "mengatur baris di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh mengatur baris di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { grid-template-rows: 100px 200px; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur jarak antar grid?",
    "jawaban": "Mengatur jarak antar grid sangat berguna dalam layout modern.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai mengatur jarak antar grid dalam CSS?",
    "jawaban": "Untuk menggunakan mengatur jarak antar grid, perhatikan contoh berikut ini.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak antar grid biasanya dipakai buat apa?",
    "jawaban": "Mengatur jarak antar grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan mengatur jarak antar grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian mengatur jarak antar grid.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, mengatur jarak antar grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba mengatur jarak antar grid.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Contoh kode mengatur jarak antar grid yang gampang dong.",
    "jawaban": "Mengatur jarak antar grid termasuk bagian dari responsive design.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Mengatur jarak antar grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai mengatur jarak antar grid dalam proyek kamu.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai mengatur jarak antar grid?",
    "jawaban": "Yuk pahami konsep dasar mengatur jarak antar grid lewat contoh ini.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan mengatur jarak antar grid?",
    "jawaban": "mengatur jarak antar grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "mengatur jarak antar grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh mengatur jarak antar grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.container { gap: 10px; }</style>"
  },
  {
    "pertanyaan": "Apa itu menggabungkan kolom di CSS Grid?",
    "jawaban": "Menggabungkan kolom di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai menggabungkan kolom di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan menggabungkan kolom di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan kolom di css grid biasanya dipakai buat apa?",
    "jawaban": "Menggabungkan kolom di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan menggabungkan kolom di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian menggabungkan kolom di CSS Grid.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, menggabungkan kolom di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba menggabungkan kolom di CSS Grid.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Contoh kode menggabungkan kolom di CSS Grid yang gampang dong.",
    "jawaban": "Menggabungkan kolom di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan kolom di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai menggabungkan kolom di CSS Grid dalam proyek kamu.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai menggabungkan kolom di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar menggabungkan kolom di CSS Grid lewat contoh ini.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan menggabungkan kolom di CSS Grid?",
    "jawaban": "menggabungkan kolom di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "menggabungkan kolom di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh menggabungkan kolom di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.item { grid-column: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Apa itu menggabungkan baris di CSS Grid?",
    "jawaban": "Menggabungkan baris di css grid sangat berguna dalam layout modern.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai menggabungkan baris di CSS Grid dalam CSS?",
    "jawaban": "Untuk menggunakan menggabungkan baris di CSS Grid, perhatikan contoh berikut ini.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan baris di css grid biasanya dipakai buat apa?",
    "jawaban": "Menggabungkan baris di css grid bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan menggabungkan baris di CSS Grid?",
    "jawaban": "Ini salah satu contoh umum pemakaian menggabungkan baris di CSS Grid.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, menggabungkan baris di CSS Grid itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba menggabungkan baris di CSS Grid.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Contoh kode menggabungkan baris di CSS Grid yang gampang dong.",
    "jawaban": "Menggabungkan baris di css grid termasuk bagian dari responsive design.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Menggabungkan baris di css grid itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai menggabungkan baris di CSS Grid dalam proyek kamu.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai menggabungkan baris di CSS Grid?",
    "jawaban": "Yuk pahami konsep dasar menggabungkan baris di CSS Grid lewat contoh ini.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan menggabungkan baris di CSS Grid?",
    "jawaban": "menggabungkan baris di CSS Grid bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "menggabungkan baris di CSS Grid sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh menggabungkan baris di CSS Grid biar tampilannya rapi di semua perangkat.",
    "kode": "<style>.item { grid-row: 1 / 3; }</style>"
  },
  {
    "pertanyaan": "Apa itu cara membuat layout responsif?",
    "jawaban": "Cara membuat layout responsif sangat berguna dalam layout modern.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara membuat layout responsif dalam CSS?",
    "jawaban": "Untuk menggunakan cara membuat layout responsif, perhatikan contoh berikut ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Cara membuat layout responsif biasanya dipakai buat apa?",
    "jawaban": "Cara membuat layout responsif bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan cara membuat layout responsif?",
    "jawaban": "Ini salah satu contoh umum pemakaian cara membuat layout responsif.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Saya bingung, cara membuat layout responsif itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba cara membuat layout responsif.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Contoh kode cara membuat layout responsif yang gampang dong.",
    "jawaban": "Cara membuat layout responsif termasuk bagian dari responsive design.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Cara membuat layout responsif itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai cara membuat layout responsif dalam proyek kamu.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai cara membuat layout responsif?",
    "jawaban": "Yuk pahami konsep dasar cara membuat layout responsif lewat contoh ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan cara membuat layout responsif?",
    "jawaban": "cara membuat layout responsif bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "cara membuat layout responsif sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh cara membuat layout responsif biar tampilannya rapi di semua perangkat.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>@media (max-width: 600px) { body { background: lightgray; } }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu media query?",
    "jawaban": "Apa itu media query sangat berguna dalam layout modern.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai apa itu media query dalam CSS?",
    "jawaban": "Untuk menggunakan apa itu media query, perhatikan contoh berikut ini.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Apa itu media query biasanya dipakai buat apa?",
    "jawaban": "Apa itu media query bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan apa itu media query?",
    "jawaban": "Ini salah satu contoh umum pemakaian apa itu media query.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Saya bingung, apa itu media query itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba apa itu media query.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Contoh kode apa itu media query yang gampang dong.",
    "jawaban": "Apa itu media query termasuk bagian dari responsive design.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Apa itu media query itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai apa itu media query dalam proyek kamu.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai apa itu media query?",
    "jawaban": "Yuk pahami konsep dasar apa itu media query lewat contoh ini.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan apa itu media query?",
    "jawaban": "apa itu media query bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "apa itu media query sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh apa itu media query biar tampilannya rapi di semua perangkat.",
    "kode": "<style>@media (max-width: 768px) { .container { flex-direction: column; } }</style>"
  },
  {
    "pertanyaan": "Apa itu viewport itu apa?",
    "jawaban": "Viewport itu apa sangat berguna dalam layout modern.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Gimana cara pakai viewport itu apa dalam CSS?",
    "jawaban": "Untuk menggunakan viewport itu apa, perhatikan contoh berikut ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Viewport itu apa biasanya dipakai buat apa?",
    "jawaban": "Viewport itu apa bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan viewport itu apa?",
    "jawaban": "Ini salah satu contoh umum pemakaian viewport itu apa.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Saya bingung, viewport itu apa itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba viewport itu apa.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Contoh kode viewport itu apa yang gampang dong.",
    "jawaban": "Viewport itu apa termasuk bagian dari responsive design.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Viewport itu apa itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai viewport itu apa dalam proyek kamu.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai viewport itu apa?",
    "jawaban": "Yuk pahami konsep dasar viewport itu apa lewat contoh ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan viewport itu apa?",
    "jawaban": "viewport itu apa bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "viewport itu apa sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh viewport itu apa biar tampilannya rapi di semua perangkat.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
  },
  {
    "pertanyaan": "Apa itu cara membuat website mobile-friendly?",
    "jawaban": "Cara membuat website mobile-friendly sangat berguna dalam layout modern.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara pakai cara membuat website mobile-friendly dalam CSS?",
    "jawaban": "Untuk menggunakan cara membuat website mobile-friendly, perhatikan contoh berikut ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Cara membuat website mobile-friendly biasanya dipakai buat apa?",
    "jawaban": "Cara membuat website mobile-friendly bisa bikin tampilan web jadi lebih fleksibel.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Bisa kasih contoh penggunaan cara membuat website mobile-friendly?",
    "jawaban": "Ini salah satu contoh umum pemakaian cara membuat website mobile-friendly.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Saya bingung, cara membuat website mobile-friendly itu gimana maksudnya?",
    "jawaban": "Kalau kamu masih baru, jangan takut coba cara membuat website mobile-friendly.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Contoh kode cara membuat website mobile-friendly yang gampang dong.",
    "jawaban": "Cara membuat website mobile-friendly termasuk bagian dari responsive design.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Cara membuat website mobile-friendly itu wajib dipelajari nggak?",
    "jawaban": "Nih tips mudahnya pakai cara membuat website mobile-friendly dalam proyek kamu.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Ada nggak tips praktis buat pakai cara membuat website mobile-friendly?",
    "jawaban": "Yuk pahami konsep dasar cara membuat website mobile-friendly lewat contoh ini.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Gimana cara bikin tampilan responsif dengan cara membuat website mobile-friendly?",
    "jawaban": "cara membuat website mobile-friendly bikin web kamu lebih enak dilihat di berbagai ukuran layar.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "cara membuat website mobile-friendly sering dipakai di website modern nggak?",
    "jawaban": "Web modern butuh cara membuat website mobile-friendly biar tampilannya rapi di semua perangkat.",
    "kode": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>body { font-size: 16px; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu transition dalam CSS?",
    "jawaban": "Apa itu transition digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai apa itu transition?",
    "jawaban": "Untuk pakai apa itu transition, kamu bisa lihat contoh ini.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu transition itu sering dipakai buat apa?",
    "jawaban": "Apa itu transition bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu transition dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan apa itu transition.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal apa itu transition, bisa dijelaskan?",
    "jawaban": "Apa itu transition sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai apa itu transition?",
    "jawaban": "Kalau kamu mau efek halus, apa itu transition solusinya.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu transition itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai apa itu transition.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai apa itu transition bisa gak?",
    "jawaban": "apa itu transition bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai apa itu transition?",
    "jawaban": "Yuk belajar cara gampang bikin apa itu transition.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu transition itu cocok untuk efek hover nggak?",
    "jawaban": "Apa itu transition bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>button { transition: background-color 0.3s ease; }</style>"
  },
  {
    "pertanyaan": "Apa itu cara menggunakan transform di CSS dalam CSS?",
    "jawaban": "Cara menggunakan transform di css digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai cara menggunakan transform di CSS?",
    "jawaban": "Untuk pakai cara menggunakan transform di CSS, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Cara menggunakan transform di css itu sering dipakai buat apa?",
    "jawaban": "Cara menggunakan transform di css bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan cara menggunakan transform di CSS dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan cara menggunakan transform di CSS.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal cara menggunakan transform di CSS, bisa dijelaskan?",
    "jawaban": "Cara menggunakan transform di css sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai cara menggunakan transform di CSS?",
    "jawaban": "Kalau kamu mau efek halus, cara menggunakan transform di CSS solusinya.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Cara menggunakan transform di css itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai cara menggunakan transform di CSS.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai cara menggunakan transform di CSS bisa gak?",
    "jawaban": "cara menggunakan transform di CSS bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai cara menggunakan transform di CSS?",
    "jawaban": "Yuk belajar cara gampang bikin cara menggunakan transform di CSS.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Cara menggunakan transform di css itu cocok untuk efek hover nggak?",
    "jawaban": "Cara menggunakan transform di css bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { transform: rotate(45deg); }</style>"
  },
  {
    "pertanyaan": "Apa itu membuat animasi dengan keyframes dalam CSS?",
    "jawaban": "Membuat animasi dengan keyframes digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai membuat animasi dengan keyframes?",
    "jawaban": "Untuk pakai membuat animasi dengan keyframes, kamu bisa lihat contoh ini.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Membuat animasi dengan keyframes itu sering dipakai buat apa?",
    "jawaban": "Membuat animasi dengan keyframes bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan membuat animasi dengan keyframes dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan membuat animasi dengan keyframes.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal membuat animasi dengan keyframes, bisa dijelaskan?",
    "jawaban": "Membuat animasi dengan keyframes sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai membuat animasi dengan keyframes?",
    "jawaban": "Kalau kamu mau efek halus, membuat animasi dengan keyframes solusinya.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Membuat animasi dengan keyframes itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai membuat animasi dengan keyframes.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai membuat animasi dengan keyframes bisa gak?",
    "jawaban": "membuat animasi dengan keyframes bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai membuat animasi dengan keyframes?",
    "jawaban": "Yuk belajar cara gampang bikin membuat animasi dengan keyframes.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Membuat animasi dengan keyframes itu cocok untuk efek hover nggak?",
    "jawaban": "Membuat animasi dengan keyframes bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>@keyframes geser { from {left: 0;} to {left: 100px;} }\n.kotak { animation: geser 2s; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengubah ukuran elemen dengan scale dalam CSS?",
    "jawaban": "Mengubah ukuran elemen dengan scale digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai mengubah ukuran elemen dengan scale?",
    "jawaban": "Untuk pakai mengubah ukuran elemen dengan scale, kamu bisa lihat contoh ini.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Mengubah ukuran elemen dengan scale itu sering dipakai buat apa?",
    "jawaban": "Mengubah ukuran elemen dengan scale bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengubah ukuran elemen dengan scale dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan mengubah ukuran elemen dengan scale.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal mengubah ukuran elemen dengan scale, bisa dijelaskan?",
    "jawaban": "Mengubah ukuran elemen dengan scale sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai mengubah ukuran elemen dengan scale?",
    "jawaban": "Kalau kamu mau efek halus, mengubah ukuran elemen dengan scale solusinya.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Mengubah ukuran elemen dengan scale itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai mengubah ukuran elemen dengan scale.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai mengubah ukuran elemen dengan scale bisa gak?",
    "jawaban": "mengubah ukuran elemen dengan scale bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai mengubah ukuran elemen dengan scale?",
    "jawaban": "Yuk belajar cara gampang bikin mengubah ukuran elemen dengan scale.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Mengubah ukuran elemen dengan scale itu cocok untuk efek hover nggak?",
    "jawaban": "Mengubah ukuran elemen dengan scale bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.gambar { transform: scale(1.5); }</style>"
  },
  {
    "pertanyaan": "Apa itu memutar elemen dengan rotate dalam CSS?",
    "jawaban": "Memutar elemen dengan rotate digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai memutar elemen dengan rotate?",
    "jawaban": "Untuk pakai memutar elemen dengan rotate, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Memutar elemen dengan rotate itu sering dipakai buat apa?",
    "jawaban": "Memutar elemen dengan rotate bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan memutar elemen dengan rotate dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan memutar elemen dengan rotate.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal memutar elemen dengan rotate, bisa dijelaskan?",
    "jawaban": "Memutar elemen dengan rotate sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai memutar elemen dengan rotate?",
    "jawaban": "Kalau kamu mau efek halus, memutar elemen dengan rotate solusinya.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Memutar elemen dengan rotate itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai memutar elemen dengan rotate.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai memutar elemen dengan rotate bisa gak?",
    "jawaban": "memutar elemen dengan rotate bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai memutar elemen dengan rotate?",
    "jawaban": "Yuk belajar cara gampang bikin memutar elemen dengan rotate.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Memutar elemen dengan rotate itu cocok untuk efek hover nggak?",
    "jawaban": "Memutar elemen dengan rotate bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { transform: rotate(90deg); }</style>"
  },
  {
    "pertanyaan": "Apa itu memindahkan elemen dengan translate dalam CSS?",
    "jawaban": "Memindahkan elemen dengan translate digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai memindahkan elemen dengan translate?",
    "jawaban": "Untuk pakai memindahkan elemen dengan translate, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Memindahkan elemen dengan translate itu sering dipakai buat apa?",
    "jawaban": "Memindahkan elemen dengan translate bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan memindahkan elemen dengan translate dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan memindahkan elemen dengan translate.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal memindahkan elemen dengan translate, bisa dijelaskan?",
    "jawaban": "Memindahkan elemen dengan translate sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai memindahkan elemen dengan translate?",
    "jawaban": "Kalau kamu mau efek halus, memindahkan elemen dengan translate solusinya.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Memindahkan elemen dengan translate itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai memindahkan elemen dengan translate.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai memindahkan elemen dengan translate bisa gak?",
    "jawaban": "memindahkan elemen dengan translate bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai memindahkan elemen dengan translate?",
    "jawaban": "Yuk belajar cara gampang bikin memindahkan elemen dengan translate.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Memindahkan elemen dengan translate itu cocok untuk efek hover nggak?",
    "jawaban": "Memindahkan elemen dengan translate bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { transform: translateX(50px); }</style>"
  },
  {
    "pertanyaan": "Apa itu membuat efek hover dengan transition dalam CSS?",
    "jawaban": "Membuat efek hover dengan transition digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai membuat efek hover dengan transition?",
    "jawaban": "Untuk pakai membuat efek hover dengan transition, kamu bisa lihat contoh ini.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Membuat efek hover dengan transition itu sering dipakai buat apa?",
    "jawaban": "Membuat efek hover dengan transition bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan membuat efek hover dengan transition dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan membuat efek hover dengan transition.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal membuat efek hover dengan transition, bisa dijelaskan?",
    "jawaban": "Membuat efek hover dengan transition sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai membuat efek hover dengan transition?",
    "jawaban": "Kalau kamu mau efek halus, membuat efek hover dengan transition solusinya.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Membuat efek hover dengan transition itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai membuat efek hover dengan transition.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai membuat efek hover dengan transition bisa gak?",
    "jawaban": "membuat efek hover dengan transition bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai membuat efek hover dengan transition?",
    "jawaban": "Yuk belajar cara gampang bikin membuat efek hover dengan transition.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Membuat efek hover dengan transition itu cocok untuk efek hover nggak?",
    "jawaban": "Membuat efek hover dengan transition bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>a:hover { color: red; transition: color 0.3s; }</style>"
  },
  {
    "pertanyaan": "Apa itu apa itu ease-in dan ease-out dalam CSS?",
    "jawaban": "Apa itu ease-in dan ease-out digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai apa itu ease-in dan ease-out?",
    "jawaban": "Untuk pakai apa itu ease-in dan ease-out, kamu bisa lihat contoh ini.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu ease-in dan ease-out itu sering dipakai buat apa?",
    "jawaban": "Apa itu ease-in dan ease-out bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan apa itu ease-in dan ease-out dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan apa itu ease-in dan ease-out.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal apa itu ease-in dan ease-out, bisa dijelaskan?",
    "jawaban": "Apa itu ease-in dan ease-out sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai apa itu ease-in dan ease-out?",
    "jawaban": "Kalau kamu mau efek halus, apa itu ease-in dan ease-out solusinya.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu ease-in dan ease-out itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai apa itu ease-in dan ease-out.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai apa itu ease-in dan ease-out bisa gak?",
    "jawaban": "apa itu ease-in dan ease-out bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai apa itu ease-in dan ease-out?",
    "jawaban": "Yuk belajar cara gampang bikin apa itu ease-in dan ease-out.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu ease-in dan ease-out itu cocok untuk efek hover nggak?",
    "jawaban": "Apa itu ease-in dan ease-out bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>div { transition: all 0.5s ease-in-out; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengatur delay animasi dalam CSS?",
    "jawaban": "Mengatur delay animasi digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai mengatur delay animasi?",
    "jawaban": "Untuk pakai mengatur delay animasi, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Mengatur delay animasi itu sering dipakai buat apa?",
    "jawaban": "Mengatur delay animasi bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengatur delay animasi dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan mengatur delay animasi.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal mengatur delay animasi, bisa dijelaskan?",
    "jawaban": "Mengatur delay animasi sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai mengatur delay animasi?",
    "jawaban": "Kalau kamu mau efek halus, mengatur delay animasi solusinya.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Mengatur delay animasi itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai mengatur delay animasi.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai mengatur delay animasi bisa gak?",
    "jawaban": "mengatur delay animasi bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai mengatur delay animasi?",
    "jawaban": "Yuk belajar cara gampang bikin mengatur delay animasi.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Mengatur delay animasi itu cocok untuk efek hover nggak?",
    "jawaban": "Mengatur delay animasi bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { animation-delay: 1s; }</style>"
  },
  {
    "pertanyaan": "Apa itu mengulang animasi terus-menerus dalam CSS?",
    "jawaban": "Mengulang animasi terus-menerus digunakan untuk membuat efek visual yang menarik di web.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Gimana sih cara pakai mengulang animasi terus-menerus?",
    "jawaban": "Untuk pakai mengulang animasi terus-menerus, kamu bisa lihat contoh ini.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Mengulang animasi terus-menerus itu sering dipakai buat apa?",
    "jawaban": "Mengulang animasi terus-menerus bikin tampilan jadi lebih dinamis dan interaktif.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Contoh penggunaan mengulang animasi terus-menerus dong!",
    "jawaban": "Nih ya, contoh dasar penggunaan mengulang animasi terus-menerus.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Saya masih bingung soal mengulang animasi terus-menerus, bisa dijelaskan?",
    "jawaban": "Mengulang animasi terus-menerus sangat berguna kalau kamu mau bikin animasi kecil-kecilan.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Ada nggak contoh animasi pakai mengulang animasi terus-menerus?",
    "jawaban": "Kalau kamu mau efek halus, mengulang animasi terus-menerus solusinya.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Mengulang animasi terus-menerus itu bisa digabung sama transition nggak?",
    "jawaban": "Perhatikan contoh di bawah ini buat pakai mengulang animasi terus-menerus.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Kalau mau efek animasi sederhana, pakai mengulang animasi terus-menerus bisa gak?",
    "jawaban": "mengulang animasi terus-menerus bisa dipakai untuk berbagai efek visual sederhana sampai kompleks.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Gimana cara buat animasi pakai mengulang animasi terus-menerus?",
    "jawaban": "Yuk belajar cara gampang bikin mengulang animasi terus-menerus.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  },
  {
    "pertanyaan": "Mengulang animasi terus-menerus itu cocok untuk efek hover nggak?",
    "jawaban": "Mengulang animasi terus-menerus bikin web kamu kelihatan lebih hidup.",
    "kode": "<style>.kotak { animation-iteration-count: infinite; }</style>"
  }
]
