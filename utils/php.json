[
  {
    "pertanyaan": "Apa itu PHP?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Pengertian PHP itu apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Jelaskan apa itu bahasa pemrograman PHP",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP adalah bahasa apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP fungsinya untuk apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Untuk apa PHP digunakan?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP itu singkatan dari apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Kegunaan PHP dalam pemrograman web",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "PHP dipakai buat apa sih?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Bisa jelaskan PHP itu apa?",
    "jawaban": "PHP adalah bahasa pemrograman server-side yang digunakan terutama untuk mengembangkan aplikasi web dinamis. PHP adalah singkatan dari 'PHP: Hypertext Preprocessor'.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan output di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan hasil di PHP gimana?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Gimana menampilkan teks di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Perintah untuk menampilkan output di PHP apa ya?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Menampilkan tulisan di PHP pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan string di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "PHP untuk cetak teks ke browser pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Echo itu fungsinya apa dalam PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Kalau mau tampilkan kalimat di PHP, pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Fungsi menampilkan output ke layar di PHP",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari perintah `echo` di PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Kalau mau print sesuatu di PHP, pakai apa?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan kalimat ke browser menggunakan PHP?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Print string ke layar di PHP gimana ya?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Di PHP, gimana cara menampilkan hasil dari program?",
    "jawaban": "Untuk menampilkan teks atau hasil ke browser, gunakan perintah `echo`.",
    "kode": "<?php\necho \"<h1>Saya sedang belajar php</h1>\";\necho \"<br>\";\necho \"Saya sedang belajar php\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks dasar PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Sintaks PHP itu seperti apa?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Contoh penulisan dasar PHP",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Awalan dan akhiran kode PHP bagaimana?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Gimana cara menulis skrip PHP paling dasar?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Penulisan skrip PHP yang benar itu gimana?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Struktur dasar penulisan PHP seperti apa?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Bagaimana format dasar PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Apa tag pembuka dan penutup PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Haruskah selalu pakai `<?php` di awal kode PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuka dan menutup kode PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Kode PHP ditulis di dalam apa?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Kenapa kode PHP harus ada tanda `<?php` dan `?>`?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Dimana kita bisa mulai menulis sintaks PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Apa aturan dasar menulis kode PHP?",
    "jawaban": "Sintaks dasar PHP selalu dibuka dengan `<?php` dan ditutup dengan `?>`. Semua kode PHP ditulis di dalam tag tersebut agar dikenali dan dijalankan oleh server.",
    "kode": "<?php\n// Ini adalah komentar\n// Kode PHP ditulis di sini\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis komentar dalam PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Gimana bikin komentar di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Komentar di PHP pakai apa?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Contoh menulis komentar di PHP",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apa simbol komentar dalam PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "PHP pakai apa buat nulis komentar?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat komentar satu baris dan banyak baris di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apakah PHP mendukung komentar multi-baris?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apa beda `//` dan `/* */` di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Cara menambahkan catatan dalam kode PHP",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Menulis penjelasan dalam kode PHP pakai apa?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tanda `//` di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Kapan pakai `/* */` dalam PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Komentar di PHP sama kayak di C atau beda?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Bagaimana menandai baris sebagai komentar di PHP?",
    "jawaban": "PHP mendukung dua jenis komentar: komentar satu baris menggunakan `//`, dan komentar banyak baris menggunakan `/* ... */`.",
    "kode": "<?php\n// Ini komentar satu baris\n/*\nIni komentar\nlebih dari satu baris\n*/\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Gimana cara bikin variabel di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Cara membuat variabel di PHP gimana?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Variabel di PHP ditulis seperti apa?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Penulisan variabel dalam PHP gimana sih?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa tanda untuk variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Kenapa variabel PHP pakai tanda `$`?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Contoh deklarasi variabel di PHP",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana menulis variabel string dalam PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan variabel di PHP ke browser",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Variabel itu wajib diketik pakai `$` ya di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Tipe data variabel di PHP perlu ditulis gak?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa bisa langsung isi nilai ke variabel di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa beda `echo` dan variabel di PHP?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Haruskah deklarasi variabel PHP menyebutkan tipe data?",
    "jawaban": "Variabel dalam PHP diawali dengan tanda `$` dan nilainya bisa berupa teks, angka, atau tipe data lain. Tidak perlu mendeklarasikan tipe secara eksplisit.",
    "kode": "<?php\n$x = \"belajar PHP Dasar 88\";\necho \"<h1>$x</h1>\";\necho \"Halo \" . $x . \"<br>\";\necho \"Belajar!\";\n?>"
  },
  {
    "pertanyaan": "Apa itu variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Pengertian variabel di PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi variabel dalam PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Variabel dalam PHP untuk apa?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan variabel di PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Fungsi dari variabel di PHP apa?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Gunanya variabel di PHP buat apa?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Jelaskan pengertian variabel dalam PHP",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Mengapa variabel penting dalam PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Variabel PHP itu apa sih?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apakah variabel PHP harus ada simbol `$`?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Contoh variabel di PHP",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apakah variabel di PHP harus bertipe data?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "PHP bisa buat nyimpan nilai pakai variabel ya?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa bedanya variabel dan konstanta di PHP?",
    "jawaban": "Variabel dalam PHP adalah tempat untuk menyimpan data yang dapat digunakan berulang kali dalam program. Variabel selalu diawali dengan tanda dolar `$`, dan tidak perlu menyebutkan tipe datanya secara eksplisit.",
    "kode": "<?php\n$nama = \"Rizkon\";\n$umur = 21;\necho \"Halo, nama saya $nama dan umur saya $umur tahun.\";\n?>"
  },
  {
    "pertanyaan": "Apa itu tipe data string dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Pengertian string dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Apa maksud dari string di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Fungsi tipe data string di PHP apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Kapan kita pakai string dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Contoh tipe data string di PHP",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis string di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Tipe data string itu menyimpan apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Perbedaan kutip tunggal dan kutip ganda dalam string PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "String itu termasuk tipe data apa di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Gimana nulis teks dalam PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Tipe data teks di PHP namanya apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Cara menyimpan kalimat di PHP pakai tipe data apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "PHP bisa simpan karakter pakai tipe apa?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Apakah string bisa pakai \"\" dan '' di PHP?",
    "jawaban": "Tipe data string adalah kumpulan karakter yang dikelilingi oleh tanda kutip tunggal ('') atau ganda (\"\"). String digunakan untuk menyimpan teks.",
    "kode": "<?php\n// tipe data string\n$nama = \"Nama saya Budi\";\n$nama2 = 'Nama saya Budi';\necho $nama;\necho \"<br>\";\necho $nama2;\n?>"
  },
  {
    "pertanyaan": "Apa itu tipe data integer dan float dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Jelaskan tipe data integer dan float di PHP",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Perbedaan antara integer dan float dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Integer dan float di PHP digunakan untuk apa?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tipe data angka dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Kapan pakai integer dan kapan pakai float di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apa itu bilangan bulat dan bilangan desimal dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Contoh integer dan float di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "PHP bisa simpan angka dalam tipe data apa?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Float itu sama dengan double gak di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apakah angka desimal di PHP disebut float?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Cara menyimpan angka dan desimal dalam PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Integer itu apa dalam pemrograman PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apakah PHP bisa membedakan angka bulat dan desimal?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Bilangan bulat dan desimal termasuk tipe data apa di PHP?",
    "jawaban": "Tipe data integer adalah bilangan bulat tanpa desimal, sedangkan float (atau double) adalah bilangan desimal. Keduanya digunakan untuk operasi matematika.",
    "kode": "<?php\n$angka = 2025;\n$ipk = 3.7;\necho \"sekarang adalah tahun $angka\";\necho \"<br>\";\necho \"IPK saya alhamdulillah $ipk\";\n?>"
  },
  {
    "pertanyaan": "Apa saja operator aritmatika dalam PHP?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Jelaskan operator aritmatika yang ada di PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Operator matematika di PHP ada apa saja?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "PHP mendukung operator aritmatika apa saja?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Daftar operator hitung dalam PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan operator aritmatika di PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tanda `+`, `-`, `*`, `/` di PHP?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Operator `++` dan `--` dalam PHP fungsinya apa?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Apakah ada operator modulus di PHP?",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Cara melakukan operasi matematika di PHP",
    "jawaban": "Operator aritmatika digunakan untuk melakukan operasi matematika. PHP mendukung operator seperti `+`, `-`, `*`, `/`, `%`, `++`, dan `--`.",
    "kode": "<?php\n// operator aritmatika\n$angka = 100;\n$angka1 = 30;\n$angka2 = 10;\n$angka3++;\n$angka4 = 6;\n\n$test = $angka1 + $angka2;\necho \"<b>Penjumlahan 100 x 30 + 10 adalah</b> = \" . $angka * $angka1 + $angka2;\necho \"<br>\";\necho \"Hasil dari variabel $test adalah? \" . $test;\necho \"<br>\";\necho $angka3;\necho \"<br>\";\necho $angka1 + $angka3;\necho \"<br>\";\necho \"Modulus dari 100 % 6 adalah \" . $angka % $angka4;\n?>"
  },
  {
    "pertanyaan": "Apa saja fungsi matematika dasar yang tersedia di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Fungsi-fungsi matematika di PHP itu apa saja?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi matematika dalam PHP",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "PHP punya fungsi matematika apa aja?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan fungsi `round()`, `rand()` di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `min()` dan `max()` di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Gimana cara membuat angka acak di PHP?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk mencari nilai terbesar apa?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk mencari nilai terkecil apa?",
    "jawaban": "PHP menyediakan berbagai fungsi matematika seperti `round()` untuk pembulatan, `rand()` untuk menghasilkan angka acak, `max()` untuk mencari nilai tertinggi, dan `min()` untuk nilai terendah.",
    "kode": "<?php\n$angka = 1000;\n$angka1 = 3;\n$angka2 = 2.49;\n\n// round untuk membulatkan\necho round($angka2);\necho \"<br>\";\n\n// rand untuk acak angka\necho \"Angka hari ini adalah \" . rand(5, 10);\necho \"<br>\";\n\n// max dan min\necho \"Angka tertinggi adalah \" . max(3, 5, 1, 20, 19, 46, 39);\necho \"<br>\";\necho \"Angka terendah adalah \" . min(3, 5, 1, 20, 19, 46, 39);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `strlen()` dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung jumlah karakter dalam string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menghitung panjang string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin mengetahui jumlah karakter dalam teks, fungsi apa yang digunakan dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Dengan apa kita bisa mengukur panjang string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi bawaan PHP apa yang digunakan untuk mengetahui jumlah huruf dalam kalimat?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana cara mengetahui panjang dari sebuah string?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi untuk menghitung banyaknya karakter termasuk spasi dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan fungsi apa untuk menghitung jumlah karakter pada teks?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui jumlah karakter dari kalimat dalam PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP yang bisa digunakan untuk menghitung panjang teks?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Untuk mengetahui jumlah karakter dalam string, kita pakai fungsi apa di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari fungsi `strlen()` ketika bekerja dengan string di PHP?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi `strlen()` dalam PHP digunakan untuk apa?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menghitung jumlah karakter dalam variabel string?",
    "jawaban": "`strlen()` digunakan untuk menghitung jumlah karakter dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strlen($text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `strtolower()` dan `strtoupper()` di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah string menjadi huruf kecil dan huruf besar di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk konversi huruf besar dan kecil pada string di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `strtolower()` dan `strtoupper()` dalam pemrosesan string?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin mengubah kalimat menjadi huruf kapital semua di PHP, fungsi apa yang dipakai?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah teks menjadi huruf kecil sepenuhnya di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk membuat huruf besar semua dari string?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `strtolower(\"BELAJAR PHP\")`?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Sebutkan dua fungsi PHP untuk mengubah kapitalisasi teks!",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `strtolower()` dan `strtoupper()` di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah string menjadi huruf kapital penuh di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang mengubah huruf string menjadi semua huruf kecil di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Untuk membuat semua karakter dalam string menjadi huruf besar, fungsi apa yang digunakan di PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks dalam huruf kecil dan huruf besar menggunakan PHP?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, fungsi apa yang bisa mengubah huruf kapital menjadi huruf kecil dan sebaliknya?",
    "jawaban": "`strtolower()` mengubah semua huruf dalam string menjadi huruf kecil, sedangkan `strtoupper()` mengubah menjadi huruf besar.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho strtolower($text);\necho \"<br>\";\necho strtoupper($text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `str_word_count()` dalam PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menghitung jumlah kata dalam string di PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui berapa banyak kata dalam kalimat menggunakan PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Untuk menghitung jumlah kata dalam sebuah kalimat, fungsi apa yang bisa digunakan di PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi PHP yang bisa menghitung berapa kata dalam sebuah teks?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan fungsi apa untuk menghitung kata dalam sebuah kalimat?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung jumlah kata dari input pengguna di PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin menghitung jumlah kata dari variabel string, fungsi apa yang digunakan?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_word_count()` digunakan untuk apa dalam PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa output dari `str_word_count(\"belajar PHP itu mudah\")`?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk menghitung kata dalam string kalimat?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari fungsi `str_word_count()` jika string kosong diberikan?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `str_word_count()` dalam PHP?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang cocok digunakan untuk menghitung jumlah kata dalam input textarea?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP untuk menghitung total kata dalam sebuah paragraf?",
    "jawaban": "`str_word_count()` digunakan untuk menghitung jumlah kata dalam sebuah string.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_word_count($text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `str_replace()` dalam PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata dalam string menggunakan PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa di PHP yang bisa digunakan untuk mengganti bagian dari teks?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata 'saya' menjadi 'Karina' dalam sebuah string di PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `str_replace()` dalam pemrosesan string PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan fungsi apa untuk mencari dan mengganti kata dalam kalimat?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Jika ingin mengubah nama dalam teks, fungsi apa yang bisa digunakan di PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi PHP untuk mengganti kata dalam sebuah kalimat?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan jika ingin mengganti bagian tertentu dalam string PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `str_replace(\"saya\", \"Karina\", \"saya sedang belajar PHP\")`?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Untuk mengganti isi teks dalam string, fungsi apa yang dipakai di PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apakah PHP memiliki fungsi untuk mengganti kata secara otomatis dalam teks?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata dalam sebuah string menggunakan PHP tanpa regex?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_replace()` di PHP digunakan untuk apa?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti kata pertama dalam sebuah kalimat menggunakan fungsi PHP?",
    "jawaban": "`str_replace()` digunakan untuk mengganti teks tertentu dalam sebuah string dengan teks lain.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_replace(\"saya\", \"Karina\", $text);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `str_repeat()` dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengulang string beberapa kali di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengulang string dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan teks yang sama sebanyak lima kali dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa digunakan untuk mengulang teks secara otomatis?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Untuk menampilkan kalimat yang sama beberapa kali di halaman web PHP, fungsi apa yang digunakan?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `str_repeat(\"Belajar PHP <br>\", 3)`?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat kalimat yang diulang berkali-kali di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang cocok digunakan untuk menampilkan output berulang di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `str_repeat()` jika digunakan dalam pembuatan pola teks?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Jika saya ingin menampilkan teks yang sama 5 kali, fungsi PHP apa yang saya pakai?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Apa output dari `str_repeat(\"PHP! \", 4)` dalam PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_repeat()` biasanya digunakan dalam situasi seperti apa di PHP?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `str_repeat()` dalam menampilkan teks yang sama berulang kali?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Fungsi `str_repeat()` di PHP digunakan untuk mengulang apa?",
    "jawaban": "`str_repeat()` digunakan untuk mengulang string sebanyak jumlah yang ditentukan.",
    "kode": "<?php\n$text = \"saya sedang belajar PHP\";\necho str_repeat(\"$text <br>\", 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengganti teks dan mengulang hasilnya dalam PHP?",
    "jawaban": "Gabungkan `str_replace()` untuk mengganti teks dan `str_repeat()` untuk mengulang hasilnya.",
    "kode": "<?php\n$name = \"Budi Gaming <br>\";\necho str_repeat(str_replace(\"Budi\", \"Saya\", $name), 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan banyak nilai dalam satu variabel di PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Fungsi dari array dalam PHP untuk apa?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan array dalam pemrograman PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur data array dalam PHP bekerja?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa output dari kode `echo $hewan[0]` jika array berisi ['Kucing', 'Anjing']?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen pertama dari array di PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa jenis data yang bisa menyimpan daftar nilai seperti nama hewan dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Fungsi indeks pada array dalam PHP digunakan untuk apa?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan indeks array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan elemen ke-2 dari array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apakah array dalam PHP bisa menyimpan data dengan banyak tipe?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan array dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa nama tipe data PHP yang menyimpan kumpulan nilai?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan array sederhana dalam PHP?",
    "jawaban": "Array adalah tipe data yang dapat menyimpan banyak nilai dalam satu variabel. Setiap elemen array memiliki indeks yang dimulai dari 0.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apa saja cara untuk mendeklarasikan array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Fungsi atau sintaks apa yang digunakan untuk membuat array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "PHP mendukung metode apa saja untuk membuat array?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Tulis dua cara berbeda untuk membuat array di PHP!",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `[]` dan `array()` dalam membuat array PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array berisi nama hewan di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apa sintaks yang digunakan untuk membuat array statis dalam PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Cara membuat array di PHP tanpa fungsi `array()`?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana bentuk sintaks array modern dan lama?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "PHP menyediakan cara apa saja untuk membuat array?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apakah tanda kurung siku bisa digunakan untuk membuat array di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk membuat array dalam PHP seperti apa?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apakah `array()` masih bisa digunakan untuk membuat array di PHP versi baru?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat array dengan isi beberapa nama hewan di PHP?",
    "jawaban": "Array dapat dibuat dengan tanda kurung siku `[]` atau menggunakan fungsi `array()`.",
    "kode": "<?php\n$hewan1 = ['Kucing', 'Anjing', 'Burung'];\n$hewan2 = array('Kucing', 'Anjing', 'Burung');\n?>"
  },
  {
    "pertanyaan": "Apakah array di PHP bisa menyimpan berbagai tipe data?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bisakah satu array di PHP berisi string, angka, dan boolean sekaligus?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa PHP memperbolehkan array berisi banyak tipe data sekaligus?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Dalam satu array PHP, bolehkah mencampur integer, float, string, dan boolean?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa array di PHP hanya boleh menyimpan satu jenis data?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Contoh array di PHP yang isinya campuran tipe data seperti apa?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa bisa memasukkan array di dalam array di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan data campuran ke dalam satu array di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bisakah array berisi nilai true, angka, dan teks dalam PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apakah array di PHP mendukung penyimpanan berbagai tipe data sekaligus?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur array campuran di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan array di PHP dibandingkan bahasa lain soal tipe data?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bolehkah saya membuat array berisi angka dan teks sekaligus di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Apakah PHP mendukung array multidata dalam satu deklarasi?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana menuliskan array dengan campuran berbagai nilai di PHP?",
    "jawaban": "Ya, array di PHP dapat menyimpan berbagai tipe data sekaligus, seperti string, angka, boolean, dan bahkan array lainnya.",
    "kode": "<?php\n$campuran = [100, 'rambutan', 3.14, true, [1, 2, 3]];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen dalam array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa yang digunakan untuk mengambil data dari array di PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil elemen pertama dari array di PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Indeks array di PHP dimulai dari angka berapa?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan data dari posisi kedua dalam array?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Fungsi atau cara apa yang digunakan untuk membaca nilai array di PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengakses item pertama dari array?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nilai tertentu dalam array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apakah indeks array PHP selalu dimulai dari 0?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses item terakhir dalam array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Cara akses nilai berdasarkan posisi di array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Kode PHP apa yang digunakan untuk mengambil data ke-1 dari array?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Dengan apa kita bisa akses isi array berdasarkan urutan?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Untuk menampilkan 'Anjing' dari array hewan, indeks berapa yang digunakan?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita akses indeks yang belum ada di array PHP?",
    "jawaban": "Gunakan indeks numerik yang dimulai dari 0 untuk mengakses elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\necho $hewan[0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan isi array di PHP dengan jelas?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mencetak isi array secara lengkap di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melihat semua elemen dalam array PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi `print_r()` digunakan untuk apa dalam PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan array dalam format yang bisa dibaca manusia?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi paling sederhana untuk debugging array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui isi dari variabel array?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang sering digunakan untuk melihat struktur array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Dengan cara apa kita bisa mencetak isi array tanpa loop di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `print_r()` ketika digunakan pada array?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Saat ingin melihat isi array di PHP, fungsi apa yang dipakai?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Cara paling mudah melihat isi array untuk belajar PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan semua data array sekaligus di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Fungsi debugging apa yang digunakan untuk array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Dengan fungsi apa kita bisa melihat struktur dan isi array di PHP?",
    "jawaban": "Gunakan fungsi `print_r()` untuk menampilkan seluruh isi array dengan format yang mudah dibaca.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung'];\nprint_r($hewan);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unique()` dalam PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus data yang sama dalam array di PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menghilangkan nilai ganda di array PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghapus elemen yang berulang dalam array di PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_unique()` jika array memiliki nilai yang sama lebih dari satu?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa membersihkan data duplikat dalam array?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Jika ada nilai yang sama dalam array, fungsi apa untuk menghapusnya?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Untuk menghilangkan entri yang sama dalam array, fungsi apa yang digunakan?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi bawaan PHP yang menghapus data ganda dari array?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyaring nilai yang unik dalam array PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apakah `array_unique()` bisa dipakai untuk array string?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `array_unique()` dan `array_filter()`?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_unique()` di PHP seperti apa?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apakah `array_unique()` mengubah urutan indeks array?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membersihkan nilai berulang di array PHP?",
    "jawaban": "`array_unique()` digunakan untuk menghapus elemen duplikat dari sebuah array.",
    "kode": "<?php\n$kotak = ['kucing', 'anjing', 'burung', 'kelinci', 'kucing'];\nprint_r(array_unique($kotak));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_reverse()` dalam PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membalik isi array di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk membalik urutan array di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_reverse([1,2,3])` dalam PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan array dari belakang ke depan di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk membalik isi array adalah?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array tampil dari elemen terakhir ke pertama?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi untuk membalikkan array di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan elemen array dari belakang ke depan?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi `array_reverse()` berfungsi untuk apa?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membalik array tanpa loop di PHP?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari membalik array [10, 20, 30] menggunakan `array_reverse()`?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang bisa digunakan untuk menampilkan urutan array secara terbalik?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Jika ingin urutan array dibalik, fungsi mana yang dipakai?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi bawaan PHP untuk membalik isi array?",
    "jawaban": "`array_reverse()` digunakan untuk membalik urutan elemen dalam sebuah array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nprint_r(array_reverse($angka));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `shuffle()` dalam PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengacak isi array di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengacak elemen dalam array PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan array dalam urutan acak di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `shuffle()` pada array?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang dapat membuat isi array tampil secara acak?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi untuk mengacak elemen array di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array acak dari array statis di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `shuffle()` jika digunakan pada array angka?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apakah `shuffle()` mengubah indeks asli dari array?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara randomisasi data array di PHP?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang dipakai jika ingin merandom elemen array?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP untuk membuat isi array menjadi tidak berurutan?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi `shuffle()` digunakan dalam kasus seperti apa?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Jika ingin membuat kuis pilihan ganda dengan jawaban acak, fungsi apa yang bisa dipakai?",
    "jawaban": "`shuffle()` digunakan untuk mengacak urutan elemen dalam array.",
    "kode": "<?php\n$angka = [1,2,3,4,5];\nshuffle($angka);\nprint_r($angka);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `count()` dalam PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghitung jumlah data dalam array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengetahui panjang array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui berapa banyak item dalam array PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `count([1,2,3])` dalam PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk menghitung jumlah elemen dalam array adalah?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Dengan apa kita bisa tahu jumlah total item di array?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi bawaan apa yang dipakai untuk menghitung isi array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `count()` saat bekerja dengan array?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengetahui ukuran array di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi untuk menghitung jumlah anggota dalam array PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apakah `count()` bisa digunakan untuk array multidimensi?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Cara cepat hitung elemen dalam array tanpa loop di PHP?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Fungsi `count()` digunakan dalam situasi seperti apa?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode `echo count($angka);` jika array punya 5 elemen?",
    "jawaban": "`count()` digunakan untuk menghitung jumlah elemen dalam array.",
    "kode": "<?php\n$angka = [1, 2, 3, 4, 5];\necho count($angka);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `sort()` dan `rsort()` dalam PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengurutkan array secara ascending dan descending di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengurutkan nilai array di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengurutkan array angka dari yang terkecil di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `sort()` dan `rsort()` di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk mengurutkan array dari besar ke kecil?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `rsort()` dalam pengurutan array PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Untuk mengurutkan array dari angka terbesar, fungsi apa yang digunakan?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa output dari fungsi `sort()` jika digunakan pada array angka?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Jika ingin array diurutkan dari yang paling kecil ke paling besar, fungsi mana yang dipakai?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengurutkan data array di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membalik urutan array angka dari terbesar ke terkecil di PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh `sort()` pada array angka?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `rsort()` dalam array PHP?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `sort()` untuk mengurutkan array angka secara naik?",
    "jawaban": "`sort()` mengurutkan elemen array dari kecil ke besar, sedangkan `rsort()` dari besar ke kecil.",
    "kode": "<?php\n$angka2 = [10, 8, 7, 15, 21];\nsort($angka2);\nprint_r($angka2);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_push()` dalam PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen baru ke array di PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk memasukkan data ke akhir array PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambah data pada array tanpa mengganti elemen sebelumnya?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_push()` untuk menambah nama ke array?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_push()` jika digunakan pada array nama?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menambahkan banyak elemen ke array sekaligus?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apakah `array_push()` bisa menambahkan lebih dari satu elemen?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memasukkan elemen baru ke ujung array?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk menambahkan data di bagian akhir array?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `array_push()` dibandingkan penambahan manual?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `array_push($arr, $val)` dan `$arr[] = $val` di PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen 'karina' ke array nama yang sudah ada?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_push()` saat bekerja dengan array dinamis?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan data baru ke array nama menggunakan fungsi PHP?",
    "jawaban": "`array_push()` digunakan untuk menambahkan elemen ke akhir array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_push($nama, \"karina\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unshift()` dalam PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan elemen di depan array di PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menyisipkan elemen ke indeks pertama array PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan nama baru ke urutan paling awal dalam array PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_unshift()` pada array yang sudah berisi data?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP mana yang dipakai untuk menambahkan elemen ke indeks 0?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menambahkan data ke posisi pertama dalam array?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_unshift()` saat mengelola array nama?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `array_push()` dan `array_unshift()`?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menambahkan elemen sebelum elemen lain di array PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa nama fungsi PHP untuk menambahkan data ke awal array?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Bagaimana urutan array berubah setelah menggunakan `array_unshift()`?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk menambahkan elemen pertama dalam array di PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika `array_unshift()` dipakai pada array kosong?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menambah elemen di depan array di PHP?",
    "jawaban": "`array_unshift()` digunakan untuk menambahkan elemen ke awal array.",
    "kode": "<?php\n$nama = [\"budi\", \"andi\"];\narray_unshift($nama, \"akmal\");\nprint_r($nama);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `array_merge()` dalam PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggabungkan dua array menjadi satu di PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menggabungkan isi dari beberapa array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil dari `array_merge()` jika digabungkan dua array berbeda?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang dipakai untuk menyatukan isi array di PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_merge()` dalam penggabungan data array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa output dari `array_merge(['a'], ['b', 'c'])`?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP untuk menggabungkan beberapa array jadi satu?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggabungkan array nama dan array hewan di PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apakah `array_merge()` mempertahankan indeks asli dari array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa efek dari `array_merge()` jika digunakan pada array numerik?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `array_merge()` dalam pengolahan data array?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `array_merge()` dengan operator `+` dalam PHP?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil penggabungan array jika ada key yang sama di `array_merge()`?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa menyatukan beberapa array menjadi satu variabel baru?",
    "jawaban": "`array_merge()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array.",
    "kode": "<?php\n$nama = [\"akmal\", \"budi\"];\n$kotak = [\"kucing\", \"anjing\"];\n$result = array_merge($nama, $kotak);\nprint_r($result);\n?>"
  },
  {
    "pertanyaan": "Apa itu associative array dalam PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana bentuk struktur associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara indexed array dan associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat array dengan key berupa string di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan key dalam associative array?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan associative array dalam PHP untuk data biodata?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa itu key dan value dalam associative array PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses data dalam associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apakah associative array bisa menyimpan tipe data berbeda dalam nilainya?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Mengapa associative array cocok untuk menyimpan data seperti profil pengguna?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa manfaat utama menggunakan associative array dibanding indexed array?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana format deklarasi associative array di PHP?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apa hasil output dari `print_r()` pada associative array?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Apakah associative array bisa digunakan dalam looping seperti `foreach()`?",
    "jawaban": "Associative array adalah array yang menggunakan string sebagai indeks (key). Biasanya digunakan untuk merepresentasikan data yang lebih kompleks seperti nama, umur, alamat, dll.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => \"bermain bola voli\"\n];\nprint_r($data);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses data dalam associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks untuk mengambil nilai dari key pada associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa cara yang benar untuk membaca isi dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen array berdasarkan key string di PHP?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa cara menampilkan nilai dari associative array dengan key tertentu?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nama dan umur dari array berasosiasi?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk mengakses nilai dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak data dengan key tertentu dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengambil nilai dari array dengan key 'nama'?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis kode PHP untuk membaca nilai berdasarkan key di array asosiatif?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa bentuk penulisan kode untuk akses nilai dari associative array di PHP?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa metode untuk mengambil nilai dari array berdasarkan nama kunci di PHP?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Cara mengambil data dari associative array untuk ditampilkan di halaman web?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana format penulisan untuk mengakses key pada array asosiatif?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Apa cara paling sederhana untuk membaca isi dari associative array?",
    "jawaban": "Gunakan tanda kurung siku dengan nama key dalam string untuk mengakses data dari associative array.",
    "kode": "<?php\necho \"Nama saya adalah \" . $data[\"nama\"] . \", umur saya sekarang \" . $data[\"umur\"] . \" tahun\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah nilai dalam associative array di PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa cara untuk memperbarui data pada associative array di PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengedit isi key tertentu dalam associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa sintaks untuk mengganti isi dari key 'nama' dalam array asosiatif?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengubah data dalam array asosiatif tanpa menambahkan elemen baru?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Cara mengganti nilai di array PHP dengan key string?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana memperbarui isi array berasosiasi di PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `$data[\"nama\"] = \"Karina\";` pada associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apakah nilai dari key dalam associative array bisa diubah setelah dibuat?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengganti data nama dari 'Budi' menjadi 'Karina' dalam array PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita memberikan nilai baru pada key yang sudah ada di associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana format penulisan untuk mengganti nilai dalam associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa langkah untuk mengupdate isi key di array PHP?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bisakah kita mengganti nilai dalam associative array tanpa membuat array baru?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh pengubahan data pada key tertentu dalam associative array?",
    "jawaban": "Nilai pada associative array dapat diubah dengan memberikan nilai baru pada key yang diinginkan.",
    "kode": "<?php\n$data[\"nama\"] = \"Karina\";\necho \"Nama saya adalah \" . $data[\"nama\"];\n?>"
  },
  {
    "pertanyaan": "Apa itu array multidimensi dalam PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan array bersarang (nested array) di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur array multidimensi dalam PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan array multidimensi dalam PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan array multidimensi dalam data kompleks di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan array multidimensi di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses nilai dari array multidimensi PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa manfaat penggunaan array multidimensi dibanding array biasa?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara array satu dimensi dan multidimensi di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bisakah array di dalam array menyimpan array lagi di PHP?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh struktur array multidimensi untuk data geografis?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan array multidimensi dalam pengolahan data?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan isi array multidimensi menggunakan `print_r()`?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apa saja elemen yang bisa disusun dalam array multidimensi?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Apakah array multidimensi dapat berisi array asosiatif?",
    "jawaban": "Array multidimensi adalah array yang berisi array lain sebagai elemennya. Ini digunakan untuk menyusun data yang bersarang (nested).",
    "kode": "<?php\n$data2 = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\",\n  \"hobi\" => [\"voli\", \"basket\", \"bulu tangkis\"],\n  \"Negara\" => [\n    \"asia\" => [\"indonesia\", \"malaysia\", \"singapura\"]\n  ]\n];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses elemen dalam array multidimensi di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa sintaks untuk mengambil data dari array yang bersarang di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan data dari array multidimensi dengan indeks string dan angka?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Contoh kode untuk mengambil data dari array dalam array di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nilai pertama dari array 'hobi' dalam array multidimensi?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa cara mengakses elemen negara dari array multidimensi yang berada dalam array 'asia'?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana format penulisan untuk membaca data dari array 2 tingkat di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Cara menampilkan elemen pertama dari array dalam array lainnya?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa metode akses elemen array bersarang menggunakan key dan index di PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengakses array multidimensi untuk key 'Negara' dan subkey 'asia'?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa sintaks yang benar untuk membaca elemen dalam array multidimensi PHP?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Contoh kode akses data dalam array bersarang untuk menampilkan hobi pertama?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa cara paling efisien untuk membaca nilai dari array nested dua tingkat?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apakah bisa mengakses array di dalam array dengan indeks string dan angka bersamaan?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan nilai 'indonesia' dari array $data2['Negara']['asia']?",
    "jawaban": "Gunakan indeks berlapis seperti `$array['key1']['key2'][index]` untuk mengakses elemen di dalam array bersarang.",
    "kode": "<?php\necho \"Hobi saya adalah \" . $data2[\"hobi\"][0];\necho \"<br>\";\necho \"Saya pernah ke \" . $data2[\"Negara\"][\"asia\"][0];\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_keys()` dalam associative array PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendapatkan semua key dari associative array di PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang digunakan untuk menampilkan seluruh kunci dalam array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengekstrak key dari sebuah associative array?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_keys()` jika digunakan pada array berasosiasi?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan daftar semua key pada associative array di PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang bisa mengambil semua nama kunci dari array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_keys()` untuk associative array?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan `array_keys()` dalam pengolahan array PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil semua indeks string dari array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi mana yang digunakan untuk mendapatkan daftar key array di PHP?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh `array_keys()` jika digunakan pada array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan semua key dari array yang menggunakan string sebagai indeks?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa peran `array_keys()` saat ingin mengetahui struktur array asosiatif?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_keys()` untuk debugging struktur array?",
    "jawaban": "`array_keys()` digunakan untuk mengambil semua kunci (key) dari associative array dan mengembalikannya dalam bentuk array.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_keys($data));\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `array_values()` dalam associative array PHP?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendapatkan semua nilai dari associative array di PHP?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP apa yang digunakan untuk mengekstrak semua value dari array asosiatif?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `array_values()` jika digunakan pada array berasosiasi?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan semua data tanpa key dari array asosiatif di PHP?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang menghasilkan array baru hanya berisi nilai-nilai dari array asosiatif?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa gunanya `array_values()` saat bekerja dengan associative array?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengekstrak data dari array asosiatif tanpa menyertakan key-nya?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `array_values()` pada array berindeks string?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi PHP mana yang dipakai untuk mengubah array asosiatif jadi array numerik?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghilangkan key pada array asosiatif dan hanya menyimpan valuenya?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Fungsi apa yang bisa digunakan untuk mengambil hanya isi dari array berasosiasi?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh fungsi `array_values()` pada array asosiatif?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa manfaat dari fungsi `array_values()` dalam manipulasi data array?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengubah associative array menjadi array biasa dengan `array_values()`?",
    "jawaban": "`array_values()` digunakan untuk mengambil semua nilai dari associative array dan mengembalikannya dalam bentuk array numerik.",
    "kode": "<?php\n$data = [\n  \"nama\" => \"budi\",\n  \"umur\" => 20,\n  \"alamat\" => \"jakarta\"\n];\nprint_r(array_values($data));\n?>"
  },
  {
    "pertanyaan": "Apa itu looping dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan perulangan (loop) dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa looping digunakan dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi utama dari perulangan dalam pemrograman PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan kita menggunakan perulangan dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat menggunakan looping dalam kode PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa definisi dari struktur perulangan dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara kerja loop dalam bahasa PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa tujuan utama dari perulangan (looping) dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa konsep looping penting dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu pengulangan kode dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana looping membantu efisiensi dalam PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa peran struktur loop dalam pemrograman PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Looping dalam PHP termasuk ke dalam struktur kontrol apa?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa arti istilah loop dalam dunia pemrograman PHP?",
    "jawaban": "Looping atau perulangan adalah proses menjalankan suatu blok kode secara berulang selama kondisi tertentu terpenuhi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan perulangan `for` di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `for` dalam PHP dan bagaimana cara menggunakannya?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya kita menggunakan `for` loop dalam PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks dasar dari loop `for` di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `for` untuk mencetak angka 0 sampai 4 di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur umum dari perulangan `for` dalam PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis perulangan `for` untuk 5 kali eksekusi?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `for($i=0; $i<5; $i++)` jika dicetak di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana looping `for` bekerja di PHP secara berurutan?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Untuk mencetak teks 5 kali, perulangan apa yang cocok digunakan di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa saja komponen dalam struktur `for` loop di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `for` loop untuk perulangan terkontrol?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari setiap bagian dalam perulangan `for` di PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bisakah `for` digunakan untuk iterasi berurutan dalam PHP?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh sederhana dari `for` loop dalam PHP seperti apa?",
    "jawaban": "`for` digunakan saat kita tahu jumlah pengulangan yang diinginkan. Format: `for (inisialisasi; kondisi; perubahan)`.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melakukan perulangan array menggunakan `for` di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak seluruh elemen array dengan `for` loop di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara terbaik menggunakan `for` untuk menelusuri array di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara loop array menggunakan indeks di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran fungsi `count()` dalam perulangan array di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh perulangan array dengan `for` dan `count()` dalam PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mencetak semua isi array secara berurutan dengan `for` di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa teknik dasar untuk melakukan looping array menggunakan `for`?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `count()` penting dalam `for` loop saat memproses array?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara sederhana untuk membaca isi array menggunakan perulangan `for`?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengakses elemen array satu per satu menggunakan `for` loop?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak seluruh nama hewan dari array menggunakan loop `for`?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa sintaks perulangan `for` yang digunakan untuk array indeks numerik?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggabungkan `for` dan array untuk looping dinamis di PHP?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan `count()` dalam `for` saat memproses array?",
    "jawaban": "Gunakan fungsi `count()` untuk mengetahui panjang array, lalu akses elemen dengan indeks di dalam perulangan `for`.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nfor ($i = 0; $i < count($hewan); $i++) {\n  echo $hewan[$i] . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat perulangan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa langkah-langkah membuat loop `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks dasar untuk perulangan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode perulangan `for` dalam PHP seperti apa?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa format umum penggunaan `for` loop di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana perulangan `for` bekerja di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `for` dalam perulangan PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `for` loop dalam PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana bentuk perulangan terstruktur menggunakan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa saja komponen dalam perulangan `for` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Seperti apa struktur `for` yang benar dalam PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `for` loop saat mencetak teks berulang di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa perulangan `for` cocok digunakan untuk iterasi terbatas?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `for` loop dalam menampilkan angka 0-4 di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode `for ($i=0; $i<5; $i++)` di PHP?",
    "jawaban": "`for` digunakan untuk melakukan perulangan dengan variabel iterator. Cocok saat jumlah pengulangan sudah diketahui.",
    "kode": "<?php\nfor ($i = 0; $i < 5; $i++) {\n  echo \"Perulangan ke-$i <br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `foreach` dalam PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `foreach` dalam PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `foreach` dalam perulangan array?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan `foreach` dibanding `for` saat memproses array?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `foreach` dalam mencetak isi array di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar penulisan `foreach` loop dalam PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh `foreach ($hewan as $h)` di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `foreach` sering digunakan untuk membaca array?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `foreach` dengan perulangan lainnya di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `foreach` memudahkan perulangan array dibanding `for`?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan `foreach` dalam array PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca seluruh elemen array menggunakan `foreach`?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `foreach` bisa digunakan untuk array asosiatif juga?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `foreach` cocok untuk perulangan pada array di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari perulangan `foreach` pada array hewan di PHP?",
    "jawaban": "`foreach` digunakan untuk melakukan perulangan pada array tanpa harus menggunakan indeks. Cocok untuk membaca seluruh elemen array.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\nforeach ($hewan as $h) {\n  echo $h . \"<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `foreach` untuk associative array di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca key dan value dari associative array menggunakan `foreach`?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara terbaik untuk looping associative array di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `foreach` untuk array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan key dan value dari associative array menggunakan `foreach`?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur `foreach` untuk array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan seluruh data dari associative array menggunakan loop?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks lengkap `foreach` untuk array yang berisi key dan value?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara menampilkan data `key => value` dari array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Kenapa `foreach` cocok untuk array asosiatif di PHP?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan loop `foreach` untuk menampilkan data personal?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `foreach ($array as $key => $value)` di array asosiatif?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur terbaik untuk menampilkan key dan value array asosiatif?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan isi associative array baris per baris dengan `foreach`?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `foreach` untuk menampilkan biodata dari associative array?",
    "jawaban": "`foreach` dapat digunakan untuk membaca setiap elemen dalam associative array, dengan cara memisahkan `key` dan `value` ke dalam dua variabel.",
    "kode": "<?php\n$data = [\n  'nama' => 'Budi',\n  'umur' => 20,\n  'alamat' => 'Jakarta',\n  'hobi' => 'Membaca'\n];\n\nforeach ($data as $key => $value) {\n  echo \"$key : $value<br>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `while` dalam PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja perulangan `while` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `while` loop dalam PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `while` dibanding `for` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar `while` loop dalam PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `while` langsung bernilai false?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mencetak isi array dengan `while` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan utama antara `while` dan `do...while` di PHP?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `while` cocok digunakan untuk kondisi yang tidak pasti?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa syarat agar perulangan `while` terus berjalan?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan variabel penghitung dalam `while` loop?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghindari infinite loop dalam `while`?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode `while` sederhana untuk menampilkan isi array?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan kode `while ($i < count($hewan))`?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil output dari contoh `while` yang mencetak isi array hewan?",
    "jawaban": "`while` digunakan untuk melakukan perulangan selama kondisi bernilai true. Kondisi dicek di awal, sehingga jika false dari awal, blok kode tidak akan dijalankan.",
    "kode": "<?php\n$hewan = ['Kucing', 'Anjing', 'Burung', 'Kelinci'];\n$i = 0;\nwhile ($i < count($hewan)) {\n  echo $hewan[$i] . \"<br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `while` bernilai false dari awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah kode dalam `while` dijalankan jika kondisinya langsung false?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa output dari `while` jika kondisi tidak terpenuhi sejak awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa blok kode `while` bisa tidak berjalan sama sekali?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Kapan `while` tidak akan menjalankan isi perulangannya?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `while` tidak pernah benar sejak awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah mungkin `while` tidak mencetak apapun? Kapan itu terjadi?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Jika `while` dicek lebih dulu dan salah, apa yang terjadi?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `while` menangani kondisi awal yang tidak memenuhi?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang akan dicetak oleh `while` jika `$i = 10` dan kondisinya `$i < 5`?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah perulangan tetap berjalan jika kondisi awal `while` salah?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Kenapa `while` tidak menampilkan output apapun dalam kondisi tertentu?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kasus ketika `while` tidak melakukan iterasi sama sekali?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `while` akan berjalan jika kondisi tidak pernah benar?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara agar `while` tidak masuk infinite loop sejak awal?",
    "jawaban": "Jika kondisi bernilai false dari awal, maka blok kode `while` tidak akan dijalankan sama sekali.",
    "kode": "<?php\n$i = 10;\nwhile ($i < 5) {\n  echo \"Perulangan ke-$i <br>\";\n  $i++;\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu perulangan `do while` dalam PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `do while` loop di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja perulangan `do while` dalam PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `while` dan `do while` di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `do while` dalam PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan dari `do while` dibanding `while`?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apakah `do while` selalu menjalankan kode minimal satu kali?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `do while` sederhana di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `do while` langsung false?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode `do while` jika kondisi tidak terpenuhi sejak awal?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa struktur dasar `do while` di PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apakah `do while` bisa menghasilkan infinite loop?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Kenapa `do while` digunakan ketika ingin eksekusi minimal sekali?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Apa yang membuat `do while` unik dalam perulangan PHP?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis perulangan `do while` dengan output angka?",
    "jawaban": "`do while` adalah perulangan yang menjalankan blok kode setidaknya satu kali, lalu baru mengecek kondisi. Cocok jika kita ingin eksekusi minimal 1 kali.",
    "kode": "<?php\n$x = 0;\ndo {\n  echo \"Nilai x: $x <br>\";\n  $x++;\n} while ($x < 5);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `while` dan kapan `do while` dalam PHP?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan situasi penggunaan `while` dan `do while` di PHP?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan lebih tepat memakai `do while` dibanding `while` dalam PHP?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa perbedaan utama penggunaan `while` dan `do while` dalam praktik?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam kasus apa kita wajib memakai `do while` daripada `while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa pertimbangan dalam memilih antara `while` dan `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam pengulangan, kapan `while` lebih efisien dari `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara menentukan penggunaan `while` vs `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa memilih `do while` jika kita ingin eksekusi sekali dulu?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kelebihan `while` dibanding `do while` dalam kondisi awal tertentu?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa `do while` dijalankan minimal sekali meski kondisi salah?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa saja pertimbangan memilih `while` daripada `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Contoh logika yang lebih cocok menggunakan `do while` daripada `while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah penggunaan `do while` lebih aman untuk validasi awal?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana menentukan loop yang tepat antara `while` dan `do while`?",
    "jawaban": "Gunakan `while` jika kita ingin blok kode hanya berjalan ketika kondisi awal terpenuhi. Gunakan `do while` jika kita ingin blok kode dijalankan setidaknya satu kali sebelum mengecek kondisi.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu tipe data boolean dalam PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari tipe data boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Berapa nilai yang bisa dimiliki oleh tipe data boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo true` dan `echo false` di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa itu nilai `true` dan `false` dalam konteks boolean PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa representasi angka dari `true` dan `false` di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menangani tipe boolean saat dicetak?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan tipe boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apakah boolean termasuk tipe data dasar di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendeklarasikan variabel boolean di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Nilai apa yang dihasilkan oleh boolean `false` saat dicetak?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apakah `true` dan `false` di PHP sama seperti di bahasa lain?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika kita echo `true` dan `false` di PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana nilai boolean digunakan dalam logika PHP?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Apa arti boolean `true` dan `false` saat dicetak di browser?",
    "jawaban": "Tipe data boolean adalah tipe data paling sederhana dalam PHP yang hanya memiliki dua nilai: `true` (benar) dan `false` (salah). Nilai `true` akan dianggap sebagai 1 dan `false` sebagai 0.",
    "kode": "<?php\n$hasil = true;  // 1\necho $hasil . \"<br>\";\n\n$hasil2 = false;  // 0\necho $hasil2 . \"<br>\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `if else` untuk memvalidasi kondisi dalam PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana penggunaan `if else` untuk validasi input di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `if else` dalam pemeriksaan password di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `if else` dalam pengkondisian di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana alur logika `if else` saat memeriksa nilai variabel?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana kondisi benar dan salah ditangani dengan `if else`?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika kondisi `if` bernilai false dalam struktur `if else`?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran `else` dalam kondisi bercabang di PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if else` membantu menangani keputusan logika dalam program?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan struktur `if else` dalam pemrograman PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `if else` penting dalam pengambilan keputusan program?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `if` tidak terpenuhi?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur logika bercabang ditulis dalam PHP?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa manfaat penggunaan `if else` saat memvalidasi data pengguna?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memeriksa kesesuaian password dengan `if else`?",
    "jawaban": "`if else` digunakan untuk mengecek kondisi. Jika kondisi `if` bernilai true, maka blok kode dalam `if` akan dijalankan. Jika tidak, maka blok `else` yang dijalankan.",
    "kode": "<?php\n$password = \"admin123\";\nif ($password == \"admin1231\") {\n  echo \"Password anda benar!\";\n} else {\n  echo \"<span style='color:red;'> Password anda salah! </span>\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan `if else` untuk menentukan status umur?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `if else` untuk cek apakah seseorang sudah dewasa atau belum?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `if else` untuk menentukan apakah umur >= 17?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa cara memvalidasi batasan umur dengan `if else` di PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memisahkan status anak-anak dan dewasa menggunakan `if else`?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh program PHP yang menentukan usia dewasa dengan `if else`?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika umur 23, bagaimana hasil `if else` di PHP untuk cek kedewasaan?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if else` menentukan output berdasarkan nilai umur di PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat logika untuk menampilkan status umur dengan PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh skrip PHP untuk cek apakah seseorang masih anak-anak?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana logika kondisi `if else` bekerja pada pengecekan usia?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran operator perbandingan dalam `if else` saat cek umur?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memanfaatkan `if else` untuk logika sederhana tentang umur?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh praktis `if else` berdasarkan input umur di PHP?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika cabang di PHP untuk kategori umur remaja dan dewasa?",
    "jawaban": "Gunakan `if` untuk memeriksa kondisi seperti apakah seseorang cukup umur. Gunakan `else` jika tidak memenuhi syarat.",
    "kode": "<?php\n$umur = 23;\nif ($umur >= 17) {\n  echo \"Kamu sudah dewasa!\";\n} else {\n  echo \"Kamu masih anak-anak!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menentukan apakah sebuah angka genap atau ganjil dengan `if else` di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `if else` untuk cek angka genap di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memeriksa angka ganjil dengan PHP menggunakan `if else`?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa logika untuk membedakan bilangan genap dan ganjil di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if else` digunakan untuk klasifikasi angka genap/ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `%` dalam menentukan genap atau ganjil di PHP?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah angka 8 termasuk genap? Tunjukkan dengan `if else` PHP.",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memeriksa sisa bagi untuk cek genap atau ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Tulis contoh PHP untuk menentukan angka genap atau ganjil.",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membedakan angka ganjil dan genap secara logika?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil dari `$angka % 2 == 0` pada angka genap?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa logika `if else` yang paling sederhana untuk cek genap/ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh if else PHP untuk angka dengan output genap/ganjil?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah fungsi `if else` bisa digunakan untuk validasi angka genap?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil cetakan jika angka yang dicek adalah 7?",
    "jawaban": "Gunakan operator modulus (`%`) untuk menentukan apakah angka habis dibagi 2 (genap) atau tidak (ganjil).",
    "kode": "<?php\n$angka = 8;\nif ($angka % 2 == 0) {\n  echo \"Angka genap\";\n} else {\n  echo \"Angka ganjil\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `elseif` dalam PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `elseif` dalam struktur logika PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan `elseif` dalam pengkondisian bertingkat di PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `if`, `elseif`, dan `else` dalam PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur penggunaan `elseif` dalam logika diskon?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `elseif` bekerja dalam kondisi bertingkat?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `elseif` dalam perhitungan diskon belanja di PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa `elseif` dibutuhkan dalam logika percabangan?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menulis `elseif` untuk tiga kondisi berbeda di PHP?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika total belanja adalah 50000 pada kode `elseif` diskon?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `elseif` bisa digunakan lebih dari satu kali dalam satu blok?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa peran `elseif` dalam kode PHP yang mengevaluasi beberapa syarat?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Dalam logika belanja, bagaimana struktur `elseif` membantu klasifikasi diskon?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `elseif` digunakan dalam sistem diskon bertingkat?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan penggunaan `elseif` dibanding hanya `if` dan `else`?",
    "jawaban": "`elseif` digunakan ketika ada lebih dari dua kondisi yang perlu diperiksa secara berurutan.",
    "kode": "<?php\n$totalBelanja = 50000;\nif ($totalBelanja >= 200000) {\n  echo \"kamu dapat diskon 20%\";\n} elseif ($totalBelanja >= 100000) {\n  echo \"kamu dapat diskon 10%\";\n} else {\n  echo \"belanja lebih banyak lagi untuk dapat diskon!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan pernyataan `if` saja dalam PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari pernyataan `if` tunggal dalam PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana logika `if` bekerja jika tidak ada `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita hanya menggunakan `if` tanpa `else` di PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan pernyataan `if` sederhana di PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur `if` tunggal dalam PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `if` bernilai false tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana logika program jika hanya ada pernyataan `if` di PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti `if ($nilai >= 80)` dalam kode PHP?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `if` bisa berdiri sendiri tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang akan dicetak jika nilai lebih besar dari atau sama dengan 80?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh `if` untuk menilai kelulusan tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan cukup menggunakan `if` saja dalam PHP tanpa kondisi lain?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan `if` tunggal dalam logika program?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana jika kondisi tidak terpenuhi pada `if` tanpa `else`?",
    "jawaban": "`if` digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true. Jika kondisinya false, maka tidak ada aksi yang dilakukan.",
    "kode": "<?php\n$nilai = 85;\nif ($nilai >= 80) {\n  echo \"Nilai kamu sangat baik!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu pernyataan `if` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari `if` di dalam pemrograman PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja pernyataan `if` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `if` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Contoh pernyataan `if` dasar di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu blok kode dalam pernyataan `if` PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa kita perlu `if` dalam struktur logika program PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kondisi `if` bernilai true di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks penulisan `if` yang benar di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti dari `if (kondisi)` dalam PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa tujuan dari penggunaan `if` di skrip PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika kondisi dalam `if` bernilai salah (false)?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana cara membuat percabangan menggunakan `if`?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana blok `if` bekerja jika kondisi terpenuhi?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Apa saja komponen utama dari pernyataan `if` di PHP?",
    "jawaban": "`if` adalah pernyataan percabangan dalam PHP yang digunakan untuk mengeksekusi blok kode hanya jika kondisi tertentu bernilai true.",
    "kode": "<?php\nif (kondisi) {\n  // blok kode dijalankan jika kondisi true\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` saja dalam PHP?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh skrip PHP yang hanya menggunakan `if` tanpa `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur kode `if` sederhana untuk kelulusan?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kita cukup menggunakan `if` saja tanpa `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `if` jika nilai lebih dari 75?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memeriksa kelulusan hanya dengan `if`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika `if` sederhana untuk menilai hasil ujian?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa kita bisa hanya memakai `if` tanpa perlu `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah `if` harus selalu diikuti dengan `else`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh `if` di PHP tanpa cabang lain?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `if` bisa berdiri sendiri dalam logika program?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika nilai 80, bagaimana hasil dari kode `if ($nilai >= 75)`?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa keluaran program jika kondisi `if` terpenuhi?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa isi blok `if` pada contoh penilaian kelulusan PHP?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh implementasi logika satu arah menggunakan `if` saja?",
    "jawaban": "`if` saja cukup digunakan jika hanya perlu menjalankan blok kode saat kondisi terpenuhi, tanpa tindakan jika kondisi tidak terpenuhi.",
    "kode": "<?php\n$nilai = 80;\nif ($nilai >= 75) {\n  echo \"Selamat, kamu lulus!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi dari operator perbandingan di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa kita menggunakan operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan operator perbandingan di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hasil dari penggunaan operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa jenis-jenis operator perbandingan yang ada di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan operator perbandingan digunakan dalam skrip PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa arti dari hasil `true` dan `false` pada operator perbandingan?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa output dari operator perbandingan dalam PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam situasi apa kita menggunakan operator perbandingan di PHP?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat utama menggunakan operator perbandingan?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa hasil operator perbandingan selalu boolean?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana operator perbandingan berperan dalam `if`?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa hubungan antara operator perbandingan dan kondisi logika?",
    "jawaban": "Operator perbandingan digunakan untuk membandingkan dua nilai. Hasil dari perbandingan ini adalah nilai boolean: `true` atau `false`.",
    "kode": null
  },
  {
    "pertanyaan": "Apa fungsi operator `==` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja operator `==` di PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari simbol `==` dalam bahasa PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, kapan kita menggunakan `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `==` dan `===` di PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apakah `==` membandingkan tipe data di PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$x == $y` jika `$x = 5` dan `$y = \"5\"`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Kapan hasil dari operator `==` adalah true?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa output dari `5 == \"5\"` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika kita bandingkan integer dan string dengan `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menangani perbandingan nilai dengan `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Dalam PHP, apa yang dibandingkan oleh `==`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari perbandingan `5 == 10`?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana `==` berbeda dari `=` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa maksud dari `==` sebagai operator dalam kondisi logika PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `==` dalam PHP?",
    "jawaban": "`==` digunakan untuk membandingkan apakah dua nilai sama, tanpa memeriksa tipe datanya.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a == $b; // false\n\n$x = 5;\n$y = \"5\";\necho $x == $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `==` dan `===` dalam PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Kenapa `5 == \"5\"` bisa true tapi `5 === \"5\"` false di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Kapan kita harus menggunakan `===` dibanding `==` di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa yang membedakan `==` dengan `===` dalam logika PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Mengapa hasil dari `5 === \"5\"` adalah false?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa maksud operator identik `===` di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Contoh kasus perbandingan identik `===` di PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Mengapa perbandingan identik penting dalam PHP?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `==` dan `===` dalam membandingkan variabel?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil perbandingan `===` jika tipe data tidak sama?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Mengapa menggunakan `===` lebih ketat daripada `==`?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Dalam kondisi `if`, kapan sebaiknya pakai `===`?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `\"5\" === 5` di PHP dan alasannya?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP membandingkan tipe dan nilai sekaligus?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa keuntungan menggunakan `===` dalam validasi data?",
    "jawaban": "`===` membandingkan dua nilai sekaligus tipe datanya. Jika nilai sama tetapi tipe berbeda, hasilnya tetap `false`.",
    "kode": "<?php\n$x = 5;      // integer\n$y = \"5\";    // string\necho $x === $y; // false\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!=` dalam PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti operator `!=` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek dua nilai tidak sama di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$a != $b` jika `$a = 5` dan `$b = 10`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan operator `!=` menghasilkan nilai `true` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan `!=` dengan `!==` dalam PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `!=` bisa digunakan meski tipe datanya berbeda?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari operator tidak sama `!=` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `!=` untuk membandingkan angka di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan dua nilai dianggap tidak sama dengan operator `!=`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Contoh kondisi `!=` yang menghasilkan `true`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apakah `5 != \"5\"` akan menghasilkan false di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo 5 != 5;` di PHP?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana operator `!=` digunakan dalam logika `if`?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$a != $b` jika kedua nilainya sama?",
    "jawaban": "`!=` mengembalikan `true` jika dua nilai berbeda (tanpa memperhatikan tipe data).",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a != $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti operator `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Kapan hasil dari `!==` bernilai true di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `!=` dan `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `5 !== \"5\"` menghasilkan true?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan nilai dan tipe sekaligus dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan operator identik tidak sama `!==` di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo 5 !== \"5\";` di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Kapan kita sebaiknya menggunakan `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana perbandingan ketat menggunakan `!==` bekerja?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa contoh perbandingan dengan `!==` dalam PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `!==` digunakan untuk validasi ketat?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa makna `!==` jika tipe data variabel berbeda di PHP?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa peran `!==` dalam perbandingan yang ketat?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana membandingkan dua variabel agar berbeda nilai dan tipe?",
    "jawaban": "`!==` mengembalikan `true` jika dua nilai atau tipe data berbeda.",
    "kode": "<?php\n$x = 5;\n$y = \"5\";\necho $x !== $y; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `>` dan `<` dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan dua nilai dengan `>` dan `<` di PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari operator lebih besar dan lebih kecil dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan operator `>` dan `<` digunakan dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan operator `>` dan `<` dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `5 > 10` dan `5 < 10` di PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana operator `>` bekerja jika nilai kiri lebih kecil?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari perbandingan `10 > 5` dan `10 < 5`?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa keluaran dari operator `>` dan `<` jika nilainya sama?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Mengapa `>` bisa digunakan untuk validasi angka lebih besar?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang dicek oleh operator `<` dalam PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan fungsi `>` dan `<` pada logika pemrograman?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo $a > $b;` jika $a = 5 dan $b = 10?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari `a < b` dalam logika perbandingan PHP?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membandingkan nilai numerik menggunakan `>` dan `<`?",
    "jawaban": "`>` digunakan untuk membandingkan apakah nilai kiri lebih besar dari nilai kanan. `<` sebaliknya, mengecek apakah nilai kiri lebih kecil.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a > $b; // false\necho $a < $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `>=` dan `<=` dalam PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari operator `>=` dan `<=` di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan kita menggunakan `>=` dan `<=` dalam PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `$a >= $b` jika $a = 5 dan $b = 10?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan operator lebih dari atau sama (`>=`) dalam PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa makna dari `<=` dalam perbandingan angka di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `>=` dan `<=` untuk logika kondisi di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil perbandingan jika nilai kiri dan kanan sama?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika $a dan $b bernilai sama dalam `>=` dan `<=`?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apakah `>=` dan `<=` juga membandingkan tipe data?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek apakah nilai lebih besar atau sama di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari `echo 10 >= 10;` dan `echo 10 <= 10;`?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Kapan perbandingan `>=` menghasilkan false di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa arti dari perbandingan `5 <= 10` di PHP?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika nilai kiri lebih kecil dari nilai kanan?",
    "jawaban": "`>=` mengembalikan `true` jika nilai kiri lebih besar atau sama dengan nilai kanan. `<=` mengembalikan `true` jika nilai kiri lebih kecil atau sama.",
    "kode": "<?php\n$a = 5;\n$b = 10;\necho $a >= $b; // false\necho $a <= $b; // true\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat program PHP untuk menentukan nilai huruf berdasarkan skor ujian?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat logika penilaian huruf dari angka menggunakan PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode PHP untuk konversi nilai angka ke huruf?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menentukan grade A sampai E di PHP berdasarkan skor?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh penerapan `if elseif else` untuk penilaian di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat skrip PHP untuk mengubah nilai angka menjadi huruf?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika pengkondisian untuk menentukan nilai A, B, C, D, E?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menilai hasil ujian otomatis di PHP berdasarkan angka?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat penilaian otomatis menggunakan if elseif else?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menyusun kondisi untuk memberikan nilai huruf di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh if elseif else untuk menentukan nilai akademik di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat aplikasi penilaian sederhana di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat logika rentang skor menjadi grade huruf di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika nilai siswa 85, bagaimana menentukan huruf nilai di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk menentukan grade huruf berdasarkan rentang nilai tertentu.",
    "kode": "<?php\n$nilai = 85;\necho \"Nilai kamu: $nilai <br>\";\nif ($nilai >= 90) {\n  echo \"Hasil: A\";\n} elseif ($nilai >= 80) {\n  echo \"Hasil: B\";\n} elseif ($nilai >= 70) {\n  echo \"Hasil: C\";\n} elseif ($nilai >= 60) {\n  echo \"Hasil: D\";\n} else {\n  echo \"Hasil: E\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan nama hari berdasarkan angka menggunakan `if` di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mencetak nama hari dari angka 1–7 dengan `if` di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh program `if` PHP untuk mencetak nama hari dari angka?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan hari berdasarkan input angka di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Cara menyesuaikan angka dengan nama hari dalam PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana mencetak nama hari jika diberi angka dari 1 sampai 7?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Jika $hari = 5, apa output program nama hari di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menyusun kondisi `if` untuk hari Senin–Minggu di PHP?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa logika untuk menampilkan hari dari angka 1-7 menggunakan `if`?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa output jika `$hari = 9` pada program nama hari ini?",
    "jawaban": "Gunakan `if`, `elseif`, dan `else` untuk mencocokkan angka 1–7 dengan nama hari. Jika angka tidak valid, tampilkan pesan kesalahan.",
    "kode": "<?php\n$hari = 3;\nif ($hari == 1) {\n  echo \"Hari: Senin\";\n} elseif ($hari == 2) {\n  echo \"Hari: Selasa\";\n} elseif ($hari == 3) {\n  echo \"Hari: Rabu\";\n} elseif ($hari == 4) {\n  echo \"Hari: Kamis\";\n} elseif ($hari == 5) {\n  echo \"Hari: Jumat\";\n} elseif ($hari == 6) {\n  echo \"Hari: Sabtu\";\n} elseif ($hari == 7) {\n  echo \"Hari: Minggu\";\n} else {\n  echo \"Angka tidak valid\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu `if` bersarang (nested if) dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan nested `if` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana cara kerja `if` bersarang dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan kita menggunakan `nested if` dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa manfaat menggunakan `if` bersarang dalam PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu struktur percabangan bersarang di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana bentuk umum dari `if` di dalam `if` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa pengertian dari nested condition menggunakan `if` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa kita menggunakan `if` bersarang dalam logika program PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `if` di dalam `if` dalam pemrograman PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Seperti apa struktur logika `if` bersarang di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam PHP, bagaimana menerapkan logika bersyarat bertingkat?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Apa itu `if` bertingkat dalam sintaks PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana menyusun `if` di dalam `if` untuk kondisi kompleks di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan sebaiknya memakai struktur `nested if` daripada `elseif` di PHP?",
    "jawaban": "`if` bersarang adalah struktur percabangan di mana sebuah pernyataan `if` ditempatkan di dalam blok `if` atau `else` lainnya, sehingga memungkinkan pengecekan kondisi tambahan.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` bersarang dalam PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bisakah beri contoh `if` dalam `if` (nested if) di PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode `nested if` untuk pembelian barang di PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh implementasi `if` bersarang dalam keputusan logika PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur `if` bersarang digunakan dalam pembelian barang di PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh real-life penggunaan `nested if` dalam PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bisa kasih contoh `if` bersarang yang mengevaluasi dua level kondisi?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `if` bersarang dalam kasus cek uang dan pembelian?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh program PHP yang menggunakan nested `if` untuk belanja?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Tunjukkan penggunaan `if` bersarang dalam kondisi keuangan sederhana di PHP.",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kondisi bersyarat dua tingkat dalam PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika `if` bersarang dengan dua sumber dana?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi if bersarang saat kondisi tambahan dibutuhkan?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh `if` dalam `elseif` untuk logika kompleks PHP?",
    "jawaban": "Gunakan `if` di dalam `if` atau `elseif` untuk mengevaluasi kondisi tambahan yang lebih detail dalam skenario tertentu.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\nif ($uang_saya > $keyboard) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  // if bersarang\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan nilai boolean dalam kondisi `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan variabel boolean dalam `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana `true` dan `false` bekerja dalam `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan kondisi `if` dijalankan jika menggunakan nilai boolean?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa hasil jika boolean bernilai `false` dalam `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil dari blok `else` jika variabel boolean bernilai `false`?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `if` dengan nilai boolean sederhana di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah kita bisa menggunakan boolean langsung dalam `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memeriksa nilai benar atau salah dalam kondisi `if` PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana boolean berfungsi sebagai kondisi `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang ditampilkan jika nilai boolean dalam `if` adalah `false`?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh pemakaian boolean dalam percabangan PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa boolean `false` tidak menjalankan blok `if` di PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana output `if` dipengaruhi oleh nilai boolean?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh penggunaan `if` dengan nilai boolean dalam PHP?",
    "jawaban": "Kita bisa langsung menggunakan variabel boolean dalam `if`. Jika nilainya `true`, blok `if` akan dijalankan; jika `false`, maka akan dilewati.",
    "kode": "<?php\n$hasil = false;\nif ($hasil) {\n  echo \"dibeli!\";\n} else {\n  echo \"tidak jadi beli\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `if` bersarang yang menggunakan variabel boolean sebagai kondisi awal?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh logika `if` bersarang menggunakan boolean sebagai kondisi awal?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur `nested if` dimulai dari variabel boolean di PHP?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan boolean sebagai syarat utama dalam logika bercabang?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana boolean digunakan sebagai awal dari `if` bersarang di PHP?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh `if` bersarang dengan pemeriksaan awal berupa boolean?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana memanfaatkan boolean dalam percabangan `elseif` dengan `if` bersarang?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa struktur logika bercabang yang diawali variabel boolean lalu `elseif`?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa contoh `if else` dengan kondisi awal menggunakan nilai boolean?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Dalam situasi apa boolean bisa menjadi syarat awal `if` sebelum logika lain?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan boolean sebagai pemicu utama dalam blok `if` bersarang?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana boolean digunakan untuk memfilter logika pertama dalam percabangan?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana urutan eksekusi jika `if` awal menggunakan variabel boolean `false`?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa efek dari boolean `false` sebagai awal dari struktur `if elseif else`?",
    "jawaban": "Variabel boolean bisa dijadikan sebagai syarat utama, dan jika false maka lanjut ke `elseif` atau `else`. Di dalamnya bisa dilakukan pemeriksaan kondisi tambahan menggunakan `if` bersarang.",
    "kode": "<?php\n$uang_saya = 10000;\n$keyboard = 40000;\n$uang_temen = 20000;\n\n$hasil = false;\n\nif ($hasil) {\n  echo \"dibeli!\";\n} elseif ($uang_temen > $keyboard) {\n  echo \"dibelikan temen! <br>\";\n  if ($uang_temen >= $keyboard) {\n    echo \"dibelikan dua kali oleh temen saya\";\n  }\n} else {\n  echo \"Uang tidak cukup\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu `$_GET` dalam PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Fungsi `$_GET` di PHP digunakan untuk apa?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan dari `$_GET['nama']` di PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil data dari URL menggunakan PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `$_GET` dalam halaman PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca parameter URL di PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara `$_GET` dan `$_POST` dalam PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Mengapa `$_GET` cocok untuk data tidak sensitif?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana mengakses query string dengan PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Untuk apa `$_GET['nama']` digunakan dalam script PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Contoh kode PHP menggunakan `$_GET` untuk menampilkan nama?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika parameter `$_GET` tidak tersedia?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Kenapa data `$_GET` terlihat di URL browser?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Bagaimana `$_GET` bekerja saat link diklik?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa jenis data yang ditangani oleh `$_GET` di PHP?",
    "jawaban": "`$_GET` adalah array asosiatif dalam PHP yang berisi data yang dikirim melalui URL (query string). Cocok untuk data yang tidak sensitif.",
    "kode": "<?php\n// Contoh URL: halaman.php?nama=Rizkon\necho $_GET['nama'];\n?>"
  },
  {
    "pertanyaan": "Apa itu `$_POST` dalam PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Untuk apa `$_POST` digunakan dalam PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja `$_POST` dalam menangkap input form?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa bedanya `$_POST` dan `$_GET` dalam PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan `$_POST` untuk menampilkan input nama?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana PHP menerima data dari form dengan method POST?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Mengapa `$_POST` digunakan untuk data sensitif?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membaca data dari `$_POST` di PHP?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika key `$_POST['nama']` tidak ada?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan `$_POST` daripada `$_GET`?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apakah `$_POST` aman untuk mengirim password pengguna?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan data dari input form menggunakan `$_POST`?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang dikembalikan oleh `$_POST['nama']` jika form diisi?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Mengapa isi `$_POST` tidak terlihat di URL browser?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika form dikirim tanpa method POST?",
    "jawaban": "`$_POST` adalah array asosiatif dalam PHP yang menyimpan data yang dikirimkan melalui method POST, biasanya dari form. Data dikirim lewat body dan tidak terlihat di URL.",
    "kode": "<?php\n$nama = $_POST['nama'];\necho \"Halo, $nama\";\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan antara metode GET dan POST dalam pengiriman form di PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan metode GET atau POST pada form PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa metode POST lebih aman daripada GET dalam PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa kelebihan dan kekurangan metode GET dibanding POST?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Kenapa data dari form login sebaiknya dikirim dengan metode POST?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana GET dan POST menyampaikan data ke server dalam PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah data yang dikirim dengan GET bisa dilihat pengguna lain?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa metode POST tidak menampilkan data di URL?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa alasan memilih GET untuk menampilkan hasil pencarian?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Dalam kondisi apa form harus menggunakan GET di PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa efek keamanan dari menggunakan metode GET untuk login form?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apakah metode POST lebih cocok untuk menyimpan data ke database?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Mengapa data form tidak muncul di URL saat pakai POST?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang membedakan cara kerja GET dan POST di PHP?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Apa yang terjadi jika data besar dikirim lewat metode GET?",
    "jawaban": "GET mengirim data melalui URL (terlihat oleh publik), cocok untuk pencarian atau data ringan. POST mengirim data melalui body permintaan, lebih aman dan cocok untuk data sensitif.",
    "kode": null
  },
  {
    "pertanyaan": "Bagaimana contoh form HTML yang mengirim data dengan metode POST ke PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat form HTML yang mengirim data ke PHP dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Contoh form sederhana dengan method POST dalam HTML?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja form dengan method POST di PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Form HTML ke PHP: bagaimana mengirim data dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa isi atribut `method` dan `action` pada form HTML ke PHP dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana struktur form HTML untuk kirim data nama ke PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Contoh form input nama dengan POST ke file PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Form HTML kirim data ke `proses.php` pakai POST, bagaimana caranya?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa yang perlu diperhatikan saat membuat form dengan method POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana cara mengambil data dari form POST di `proses.php`?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa isi form HTML untuk input nama dan kirim ke PHP lewat POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Contoh kode form HTML dan cara pengambilan datanya di PHP dengan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Mengapa harus gunakan method POST untuk form HTML ke PHP?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Bagaimana form HTML kirim data ke PHP dengan aman menggunakan POST?",
    "jawaban": "Gunakan atribut `method=\"post\"` pada form dan gunakan `$_POST` di file tujuan untuk mengambil datanya.",
    "kode": "<form action=\"proses.php\" method=\"post\">\n  Nama: <input type=\"text\" name=\"nama\"><br>\n  <input type=\"submit\" value=\"Kirim\">\n</form>"
  },
  {
    "pertanyaan": "Apa itu operator logika dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Fungsi dari operator `&&`, `||`, dan `!` dalam PHP apa saja?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan operator logika dalam kondisi `if` di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti dari operator `&&` dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan menggunakan operator `||` dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi operator `!` dalam kondisi logika PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan operator logika `&&` dalam PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek dua kondisi sekaligus di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika satu kondisi pada operator `&&` bernilai false?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan operator `&&` dan `||` dalam logika PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat kondisi gabungan dalam `if` di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa operator `&&` digunakan dalam pengecekan syarat di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana contoh penggunaan `||` untuk dua pilihan syarat di PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Kapan operator `!` berguna dalam logika PHP?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apakah operator logika bisa digunakan dalam satu pernyataan `if`?",
    "jawaban": "Operator logika seperti `&&`, `||`, dan `!` digunakan untuk menggabungkan dua atau lebih kondisi. `&&` berarti dan, `||` berarti atau, dan `!` untuk negasi.",
    "kode": "<?php\n$umur = 25;\n$ktp = true;\n\nif ($umur >= 17 && $ktp) {\n  echo \"Kamu boleh membuat SIM!\";\n} else {\n  echo \"Syarat belum terpenuhi!\";\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu ternary operator dalam PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis ternary operator di PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa fungsi dari ternary operator di PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan ternary operator untuk menentukan kelulusan?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan ternary operator dibanding `if else` biasa?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan ternary operator dalam PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menentukan hasil dari kondisi dengan ternary operator?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa arti tanda `?` dan `:` dalam ternary operator PHP?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat percabangan pendek dengan ternary operator?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode ternary ini jika nilai = 70?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apakah ternary operator bisa menggantikan semua `if else`?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana sintaks ternary operator untuk memeriksa nilai kelulusan?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bisakah ternary operator digunakan untuk mengisi variabel?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan menggunakan ternary operator dalam kode singkat?",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Berikan contoh ternary operator dalam PHP untuk mengecek nilai!",
    "jawaban": "Ternary operator adalah bentuk singkat dari `if else`. Format: `(kondisi) ? nilai_jika_true : nilai_jika_false`.",
    "kode": "<?php\n$nilai = 70;\n$hasil = ($nilai >= 75) ? \"Lulus\" : \"Tidak Lulus\";\necho $hasil;\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat function dengan parameter dan return dalam PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP yang menerima parameter dan mengembalikan nilai?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa sintaks untuk membuat fungsi dengan parameter dan return di PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana mendefinisikan function yang menghitung luas dalam PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa peran `return` dalam sebuah function PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan hasil dari fungsi PHP yang memiliki return?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa contoh fungsi yang menerima satu parameter lalu mengembalikan hasil?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur dasar fungsi dengan input dan output dalam PHP?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika fungsi PHP tidak menggunakan return?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memanggil function PHP yang memiliki parameter?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa manfaat function dengan return dibanding hanya `echo` dalam body-nya?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP untuk menghitung luas persegi dengan return?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apakah kita bisa menyimpan hasil function ke dalam variabel?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana membuat function PHP dengan parameter dinamis?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan return dalam sebuah function PHP yang menghitung nilai?",
    "jawaban": "Gunakan `function` diikuti nama fungsi dan parameter. Gunakan `return` untuk mengembalikan hasil.",
    "kode": "<?php\nfunction hitungLuasPersegi($sisi) {\n  return $sisi * $sisi;\n}\necho \"Luas persegi: \" . hitungLuasPersegi(5);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan include dan require dalam PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan include atau require di PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika file tidak ditemukan saat menggunakan require?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa efek dari error pada include dan require dalam PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa risiko menggunakan require jika file tidak tersedia?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Mengapa require lebih ketat dibandingkan include dalam PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan include untuk menyisipkan file di PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Kapan skrip akan berhenti jika menggunakan require?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan utama antara include dan require dalam penanganan error?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Apakah include akan menghentikan eksekusi jika file tidak ditemukan?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana perilaku include dan require jika file gagal diakses?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Contoh script PHP yang menggunakan include untuk layout?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Jika file hilang, mana yang lebih aman: include atau require?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Perbedaan penggunaan include dan require untuk file header?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana error handling berbeda antara include dan require di PHP?",
    "jawaban": "`include` akan menampilkan error tetapi tetap menjalankan sisa skrip, sedangkan `require` akan menghentikan skrip jika file tidak ditemukan.",
    "kode": "// header.php\n<?php\necho \"<h1>Ini Header</h1>\";\n?>\n\n// index.php\n<?php\ninclude 'header.php';\necho \"Halaman utama\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara melakukan validasi form dengan `isset()` dalam PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa kita perlu menggunakan `isset()` saat menangani form di PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Contoh kode validasi tombol submit dengan `isset()` di PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengecek apakah tombol form sudah ditekan di PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa gunanya `isset($_POST['submit'])` dalam script PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Kenapa perlu `isset()` sebelum mengakses `$_POST`?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan isi form hanya setelah submit ditekan?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa arti `if (isset($_POST['submit']))` dalam PHP?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `isset()` dalam pengecekan input form?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menggunakan `isset()` agar form tidak error saat halaman dibuka?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Contoh pengecekan tombol submit menggunakan `isset()`?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan oleh fungsi `isset()` dalam validasi form?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana menampilkan nama yang diketik setelah tombol diklik?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Mengapa form perlu divalidasi dengan `isset()` terlebih dahulu?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menghindari error undefined index dengan `isset()`?",
    "jawaban": "`isset()` digunakan untuk mengecek apakah data telah dikirim melalui form sebelum diakses.",
    "kode": "<form method=\"POST\">\n  <input type=\"text\" name=\"nama\">\n  <input type=\"submit\" name=\"submit\" value=\"Kirim\">\n</form>\n\n<?php\nif (isset($_POST['submit'])) {\n  echo \"Halo, \" . $_POST['nama'];\n}\n?>"
  },
  {
    "pertanyaan": "Apa itu function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa kegunaan function dalam pemrograman PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mendefinisikan function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Contoh function sederhana dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa itu fungsi `salam()` dalam contoh PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memanggil function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa manfaat dari penggunaan function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa itu reusable code dengan function di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Mengapa penting membuat function dalam skrip PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan function dengan perintah biasa di PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apakah function bisa dipanggil berkali-kali dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa saja keunggulan menggunakan function dalam PHP?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Apa hasil output dari function `salam()` berikut ini?",
    "jawaban": "Function (fungsi) adalah blok kode yang dapat dipanggil berulang kali. Fungsinya untuk mengorganisasi program dan menghindari duplikasi kode.",
    "kode": "<?php\nfunction salam() {\n  echo \"Halo, selamat datang!\";\n}\n\nsalam(); // memanggil fungsi\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara membuat function dengan parameter dalam PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu parameter dalam function PHP dan bagaimana cara menulisnya?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana struktur function PHP yang menerima parameter?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP yang menerima nama sebagai input?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari function `sapa($nama)` saat dipanggil dengan `Budi`?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan parameter pada function di PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa manfaat function dengan parameter dibanding tanpa parameter?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika function dipanggil tanpa memberikan parameter?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengirim data ke function di PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bisakah function PHP menerima parameter dari inputan user?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa peran tanda kurung dalam deklarasi parameter function PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana mendefinisikan parameter dalam function PHP?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `$nama` pada function `sapa`?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara agar function PHP bisa digunakan untuk nama yang berbeda-beda?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa arti dari `sapa(\"Budi\")` dalam kode PHP tersebut?",
    "jawaban": "Function bisa menerima nilai dari luar melalui parameter. Parameter ditulis dalam tanda kurung setelah nama fungsi.",
    "kode": "<?php\nfunction sapa($nama) {\n  echo \"Halo, $nama!\";\n}\n\nsapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu return dalam function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa fungsi `return` dalam sebuah function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Mengapa kita menggunakan `return` di dalam function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara mengembalikan hasil dari function di PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari kode function yang menggunakan return di PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan function yang menggunakan return dan yang tidak?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana menyimpan hasil dari function ke dalam variabel?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan return dalam function matematika PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa yang dilakukan baris `return $a + $b;` dalam function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana memproses hasil dari function yang dikembalikan oleh return?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bisakah function di PHP digunakan sebagai nilai dari variabel?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa keuntungan menggunakan return di function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menampilkan hasil perhitungan dari function PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Mengapa function PHP harus menggunakan return untuk kalkulasi?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Apa arti nilai yang dikembalikan oleh function di PHP?",
    "jawaban": "Fungsi bisa mengembalikan nilai menggunakan `return`, sehingga hasilnya bisa disimpan atau digunakan kembali.",
    "kode": "<?php\nfunction tambah($a, $b) {\n  return $a + $b;\n}\n\n$hasil = tambah(5, 3);\necho \"Hasil: $hasil\";\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menggunakan default parameter dalam PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa itu default parameter pada function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Kapan default parameter digunakan dalam function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika parameter tidak diberikan saat memanggil function?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa manfaat default parameter dalam function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Contoh function PHP dengan default parameter?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari pemanggilan `sapa()` tanpa argumen?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apakah function bisa tetap berjalan meski parameter tidak diisi?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara memberikan nilai default untuk parameter function?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan `= \"Pengunjung\"` dalam function sapa?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Apa manfaat menggunakan parameter default di function PHP?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Kenapa function tetap bisa jalan meskipun tidak diberi argumen?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Kapan waktu yang tepat menggunakan default parameter?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana hasil output function sapa jika tidak diberi argumen?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bisakah function memiliki lebih dari satu default parameter?",
    "jawaban": "Default parameter memungkinkan kita memanggil function tanpa harus mengisi semua parameter. Nilai default akan digunakan jika tidak diberikan.",
    "kode": "<?php\nfunction sapa($nama = \"Pengunjung\") {\n  echo \"Halo, $nama!\";\n}\n\nsapa(); // Halo, Pengunjung\nsapa(\"Dina\");\n?>"
  },
  {
    "pertanyaan": "Bisakah satu function memanggil function lain dalam PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara satu function memanggil function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika sebuah function memanggil function lain?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Contoh function di PHP yang memanggil function lain?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa manfaat memanggil function lain dalam function PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apakah function bisa dipakai sebagai input function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara chaining function di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa output dari `kuadrat(angka())` dalam kode PHP ini?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Mengapa function dapat memanggil function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan modularisasi kode dengan function dalam function?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bisakah function digunakan untuk membentuk hasil dari function lain?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa contoh sederhana function memanggil function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apakah `kuadrat(angka())` sama seperti `kuadrat(5)`?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Bisakah function dijadikan argumen untuk function lain di PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Mengapa `echo kuadrat(angka());` valid dalam PHP?",
    "jawaban": "Ya, sebuah function dapat memanggil function lain, ini berguna untuk modularisasi kode.",
    "kode": "<?php\nfunction angka() {\n  return 5;\n}\n\nfunction kuadrat($nilai) {\n  return $nilai * $nilai;\n}\n\necho kuadrat(angka()); // hasil: 25\n?>"
  },
  {
    "pertanyaan": "Apa itu arrow function dalam PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Kapan arrow function diperkenalkan di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan arrow function dibanding function biasa di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Contoh arrow function sederhana dalam PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu sintaks `fn($a, $b) =>` dalam PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menulis arrow function di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa fungsi tanda panah `=>` dalam arrow function PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Mengapa arrow function cocok untuk operasi sederhana?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari arrow function `fn($a, $b) => $a * $b;`?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bisakah arrow function mengakses variabel luar?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa beda arrow function dengan closure biasa di PHP?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apakah arrow function bisa digunakan seperti function biasa?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana arrow function digunakan untuk perhitungan cepat?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa keuntungan utama arrow function di PHP 7.4?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Bisakah arrow function dipakai untuk fungsi matematis?",
    "jawaban": "Arrow function diperkenalkan di PHP 7.4. Sintaksnya lebih ringkas dibanding fungsi biasa. Cocok untuk operasi sederhana.",
    "kode": "<?php\n$kali = fn($a, $b) => $a * $b;\necho $kali(4, 5);\n?>"
  },
  {
    "pertanyaan": "Apa itu anonymous function dalam PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa yang dimaksud dengan fungsi tanpa nama di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Contoh penggunaan anonymous function dalam PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Kapan anonymous function biasanya digunakan di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa kelebihan anonymous function dibanding function biasa?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa hasil dari anonymous function berikut saat dipanggil?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara menyimpan function ke dalam variabel di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu closure atau fungsi tertutup dalam PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana mendefinisikan anonymous function dalam variabel?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apakah anonymous function bisa menerima parameter?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa gunanya anonymous function pada callback atau event handler?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana anonymous function dipanggil setelah disimpan di variabel?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan function biasa dan anonymous function di PHP?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Dapatkah anonymous function digunakan sebagai argument?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Bagaimana menulis anonymous function yang mengembalikan nilai?",
    "jawaban": "Anonymous function (fungsi tanpa nama) adalah fungsi yang tidak memiliki nama dan biasanya disimpan dalam variabel atau digunakan sebagai parameter.",
    "kode": "<?php\n$sapa = function($nama) {\n    return \"Halo, $nama!\";\n};\necho $sapa(\"Budi\");\n?>"
  },
  {
    "pertanyaan": "Apa itu fungsi rekursif dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana cara kerja fungsi rekursif di PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Kapan sebaiknya menggunakan fungsi rekursif dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Contoh fungsi rekursif untuk hitung mundur dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa yang terjadi jika fungsi rekursif tidak memiliki kondisi berhenti?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa itu base case dalam fungsi rekursif PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa saja contoh masalah yang cocok diselesaikan dengan rekursi?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa perbedaan loop biasa dengan rekursi dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bisakah rekursi menggantikan perulangan `for` dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa itu fungsi yang memanggil dirinya sendiri dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Mengapa rekursi perlu kondisi berhenti (base case)?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana menghindari infinite loop pada fungsi rekursif?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Contoh sederhana fungsi rekursif hitung mundur dalam PHP?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Apa peran dari `return` dalam fungsi rekursif?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  },
  {
    "pertanyaan": "Bagaimana rekursi digunakan untuk mencetak angka mundur?",
    "jawaban": "Fungsi rekursif adalah fungsi yang memanggil dirinya sendiri. Biasanya digunakan untuk perhitungan berulang seperti faktorial, fibonacci, atau hitung mundur.",
    "kode": "<?php\nfunction hitungMundur($angka) {\n    if ($angka <= 0) return;\n    echo \"$angka<br>\";\n    hitungMundur($angka - 1);\n}\nhitungMundur(5);\n?>"
  }
]
